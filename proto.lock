{
  "definitions": [
    {
      "protopath": "analysis:/:v1alpha1:/:message.proto",
      "def": {
        "enums": [
          {
            "name": "AnalysisMessageBase.Level",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "ERROR",
                "integer": 3
              },
              {
                "name": "WARNING",
                "integer": 8
              },
              {
                "name": "INFO",
                "integer": 12
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AnalysisMessageBase",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 2,
                "name": "level",
                "type": "Level"
              },
              {
                "id": 3,
                "name": "documentation_url",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Type",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "code",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "AnalysisMessageWeakSchema",
            "fields": [
              {
                "id": 1,
                "name": "message_base",
                "type": "AnalysisMessageBase"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "template",
                "type": "string"
              },
              {
                "id": 4,
                "name": "args",
                "type": "ArgType",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ArgType",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "go_type",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "GenericAnalysisMessage",
            "fields": [
              {
                "id": 1,
                "name": "message_base",
                "type": "AnalysisMessageBase"
              },
              {
                "id": 2,
                "name": "args",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 3,
                "name": "resource_paths",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "InternalErrorAnalysisMessage",
            "fields": [
              {
                "id": 1,
                "name": "message_base",
                "type": "AnalysisMessageBase"
              },
              {
                "id": 2,
                "name": "detail",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/struct.proto"
          }
        ],
        "package": {
          "name": "istio.analysis.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/analysis/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "authentication:/:v1alpha1:/:policy.proto",
      "def": {
        "enums": [
          {
            "name": "MutualTls.Mode",
            "enum_fields": [
              {
                "name": "STRICT"
              },
              {
                "name": "PERMISSIVE",
                "integer": 1
              }
            ]
          },
          {
            "name": "PrincipalBinding",
            "enum_fields": [
              {
                "name": "USE_PEER"
              },
              {
                "name": "USE_ORIGIN",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "StringMatch",
            "fields": [
              {
                "id": 1,
                "name": "exact",
                "type": "string",
                "oneof_parent": "match_type"
              },
              {
                "id": 2,
                "name": "prefix",
                "type": "string",
                "oneof_parent": "match_type"
              },
              {
                "id": 3,
                "name": "suffix",
                "type": "string",
                "oneof_parent": "match_type"
              },
              {
                "id": 4,
                "name": "regex",
                "type": "string",
                "oneof_parent": "match_type"
              }
            ]
          },
          {
            "name": "MutualTls",
            "fields": [
              {
                "id": 1,
                "name": "allow_tls",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 2,
                "name": "mode",
                "type": "Mode"
              }
            ]
          },
          {
            "name": "Jwt",
            "fields": [
              {
                "id": 1,
                "name": "issuer",
                "type": "string"
              },
              {
                "id": 2,
                "name": "audiences",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "jwks_uri",
                "type": "string"
              },
              {
                "id": 10,
                "name": "jwks",
                "type": "string"
              },
              {
                "id": 6,
                "name": "jwt_headers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "jwt_params",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "trigger_rules",
                "type": "TriggerRule",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "TriggerRule",
                "fields": [
                  {
                    "id": 1,
                    "name": "excluded_paths",
                    "type": "StringMatch",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "included_paths",
                    "type": "StringMatch",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "PeerAuthenticationMethod",
            "fields": [
              {
                "id": 1,
                "name": "mtls",
                "type": "MutualTls",
                "oneof_parent": "params"
              },
              {
                "id": 2,
                "name": "jwt",
                "type": "Jwt",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ],
                "oneof_parent": "params"
              }
            ]
          },
          {
            "name": "OriginAuthenticationMethod",
            "fields": [
              {
                "id": 1,
                "name": "jwt",
                "type": "Jwt"
              }
            ]
          },
          {
            "name": "Policy",
            "fields": [
              {
                "id": 1,
                "name": "targets",
                "type": "TargetSelector",
                "is_repeated": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 2,
                "name": "peers",
                "type": "PeerAuthenticationMethod",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "peer_is_optional",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 4,
                "name": "origins",
                "type": "OriginAuthenticationMethod",
                "is_repeated": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 5,
                "name": "origin_is_optional",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 6,
                "name": "principal_binding",
                "type": "PrincipalBinding",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          },
          {
            "name": "TargetSelector",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "ports",
                "type": "PortSelector",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              3
            ],
            "reserved_names": [
              "labels"
            ]
          },
          {
            "name": "PortSelector",
            "fields": [
              {
                "id": 1,
                "name": "number",
                "type": "uint32",
                "oneof_parent": "port"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string",
                "oneof_parent": "port"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          }
        ],
        "package": {
          "name": "istio.authentication.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/authentication/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:annotations.proto",
      "def": {
        "messages": [
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 72295728,
                "name": "http",
                "type": "HttpRule"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/http.proto"
          },
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/annotations;annotations"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "AnnotationsProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:auth.proto",
      "def": {
        "messages": [
          {
            "name": "Authentication",
            "fields": [
              {
                "id": 3,
                "name": "rules",
                "type": "AuthenticationRule",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "providers",
                "type": "AuthProvider",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AuthenticationRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "oauth",
                "type": "OAuthRequirements"
              },
              {
                "id": 5,
                "name": "allow_without_credential",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "requirements",
                "type": "AuthRequirement",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AuthProvider",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "issuer",
                "type": "string"
              },
              {
                "id": 3,
                "name": "jwks_uri",
                "type": "string"
              },
              {
                "id": 4,
                "name": "audiences",
                "type": "string"
              },
              {
                "id": 5,
                "name": "authorization_url",
                "type": "string"
              }
            ]
          },
          {
            "name": "OAuthRequirements",
            "fields": [
              {
                "id": 1,
                "name": "canonical_scopes",
                "type": "string"
              }
            ]
          },
          {
            "name": "AuthRequirement",
            "fields": [
              {
                "id": 1,
                "name": "provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "audiences",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "AuthProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:backend.proto",
      "def": {
        "enums": [
          {
            "name": "BackendRule.PathTranslation",
            "enum_fields": [
              {
                "name": "PATH_TRANSLATION_UNSPECIFIED"
              },
              {
                "name": "CONSTANT_ADDRESS",
                "integer": 1
              },
              {
                "name": "APPEND_PATH_TO_ADDRESS",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Backend",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "BackendRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BackendRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "address",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deadline",
                "type": "double"
              },
              {
                "id": 4,
                "name": "min_deadline",
                "type": "double"
              },
              {
                "id": 5,
                "name": "operation_deadline",
                "type": "double"
              },
              {
                "id": 6,
                "name": "path_translation",
                "type": "PathTranslation"
              },
              {
                "id": 7,
                "name": "jwt_audience",
                "type": "string",
                "oneof_parent": "authentication"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "BackendProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:billing.proto",
      "def": {
        "messages": [
          {
            "name": "Billing",
            "fields": [
              {
                "id": 8,
                "name": "consumer_destinations",
                "type": "BillingDestination",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "BillingDestination",
                "fields": [
                  {
                    "id": 1,
                    "name": "monitored_resource",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "metrics",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/metric.proto"
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "BillingProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:client.proto",
      "def": {
        "messages": [
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 1051,
                "name": "method_signature",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "google.protobuf.ServiceOptions",
            "fields": [
              {
                "id": 1049,
                "name": "default_host",
                "type": "string"
              },
              {
                "id": 1050,
                "name": "oauth_scopes",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/annotations;annotations"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ClientProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:config_change.proto",
      "def": {
        "enums": [
          {
            "name": "ChangeType",
            "enum_fields": [
              {
                "name": "CHANGE_TYPE_UNSPECIFIED"
              },
              {
                "name": "ADDED",
                "integer": 1
              },
              {
                "name": "REMOVED",
                "integer": 2
              },
              {
                "name": "MODIFIED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ConfigChange",
            "fields": [
              {
                "id": 1,
                "name": "element",
                "type": "string"
              },
              {
                "id": 2,
                "name": "old_value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "new_value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "change_type",
                "type": "ChangeType"
              },
              {
                "id": 5,
                "name": "advices",
                "type": "Advice",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Advice",
            "fields": [
              {
                "id": 2,
                "name": "description",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/configchange;configchange"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ConfigChangeProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:consumer.proto",
      "def": {
        "enums": [
          {
            "name": "Property.PropertyType",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "INT64",
                "integer": 1
              },
              {
                "name": "BOOL",
                "integer": 2
              },
              {
                "name": "STRING",
                "integer": 3
              },
              {
                "name": "DOUBLE",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ProjectProperties",
            "fields": [
              {
                "id": 1,
                "name": "properties",
                "type": "Property",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Property",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "PropertyType"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ConsumerProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:context.proto",
      "def": {
        "messages": [
          {
            "name": "Context",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "ContextRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ContextRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "requested",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "provided",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "allowed_request_extensions",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "allowed_response_extensions",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ContextProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:control.proto",
      "def": {
        "messages": [
          {
            "name": "Control",
            "fields": [
              {
                "id": 1,
                "name": "environment",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ControlProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:distribution.proto",
      "def": {
        "messages": [
          {
            "name": "Distribution",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "mean",
                "type": "double"
              },
              {
                "id": 3,
                "name": "sum_of_squared_deviation",
                "type": "double"
              },
              {
                "id": 4,
                "name": "range",
                "type": "Range"
              },
              {
                "id": 6,
                "name": "bucket_options",
                "type": "BucketOptions"
              },
              {
                "id": 7,
                "name": "bucket_counts",
                "type": "int64",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "exemplars",
                "type": "Exemplar",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Range",
                "fields": [
                  {
                    "id": 1,
                    "name": "min",
                    "type": "double"
                  },
                  {
                    "id": 2,
                    "name": "max",
                    "type": "double"
                  }
                ]
              },
              {
                "name": "BucketOptions",
                "fields": [
                  {
                    "id": 1,
                    "name": "linear_buckets",
                    "type": "Linear",
                    "oneof_parent": "options"
                  },
                  {
                    "id": 2,
                    "name": "exponential_buckets",
                    "type": "Exponential",
                    "oneof_parent": "options"
                  },
                  {
                    "id": 3,
                    "name": "explicit_buckets",
                    "type": "Explicit",
                    "oneof_parent": "options"
                  }
                ],
                "messages": [
                  {
                    "name": "Linear",
                    "fields": [
                      {
                        "id": 1,
                        "name": "num_finite_buckets",
                        "type": "int32"
                      },
                      {
                        "id": 2,
                        "name": "width",
                        "type": "double"
                      },
                      {
                        "id": 3,
                        "name": "offset",
                        "type": "double"
                      }
                    ]
                  },
                  {
                    "name": "Exponential",
                    "fields": [
                      {
                        "id": 1,
                        "name": "num_finite_buckets",
                        "type": "int32"
                      },
                      {
                        "id": 2,
                        "name": "growth_factor",
                        "type": "double"
                      },
                      {
                        "id": 3,
                        "name": "scale",
                        "type": "double"
                      }
                    ]
                  },
                  {
                    "name": "Explicit",
                    "fields": [
                      {
                        "id": 1,
                        "name": "bounds",
                        "type": "double",
                        "is_repeated": true
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Exemplar",
                "fields": [
                  {
                    "id": 1,
                    "name": "value",
                    "type": "double"
                  },
                  {
                    "id": 2,
                    "name": "timestamp",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 3,
                    "name": "attachments",
                    "type": "google.protobuf.Any",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/distribution;distribution"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "DistributionProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:documentation.proto",
      "def": {
        "messages": [
          {
            "name": "Documentation",
            "fields": [
              {
                "id": 1,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 5,
                "name": "pages",
                "type": "Page",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "rules",
                "type": "DocumentationRule",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "documentation_root_url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "overview",
                "type": "string"
              }
            ]
          },
          {
            "name": "DocumentationRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deprecation_description",
                "type": "string"
              }
            ]
          },
          {
            "name": "Page",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "content",
                "type": "string"
              },
              {
                "id": 3,
                "name": "subpages",
                "type": "Page",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "DocumentationProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:endpoint.proto",
      "def": {
        "messages": [
          {
            "name": "Endpoint",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "aliases",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 4,
                "name": "features",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 101,
                "name": "target",
                "type": "string"
              },
              {
                "id": 5,
                "name": "allow_cors",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "EndpointProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:expr:/:v1alpha1:/:cel_service.proto",
      "def": {
        "services": [
          {
            "name": "CelService",
            "rpcs": [
              {
                "name": "Parse",
                "in_type": "ParseRequest",
                "out_type": "ParseResponse"
              },
              {
                "name": "Check",
                "in_type": "CheckRequest",
                "out_type": "CheckResponse"
              },
              {
                "name": "Eval",
                "in_type": "EvalRequest",
                "out_type": "EvalResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/expr/v1alpha1/conformance_service.proto"
          }
        ],
        "package": {
          "name": "google.api.expr.v1alpha1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/expr/v1alpha1;expr"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "CelServiceProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.expr.v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:expr:/:v1alpha1:/:checked.proto",
      "def": {
        "enums": [
          {
            "name": "Type.PrimitiveType",
            "enum_fields": [
              {
                "name": "PRIMITIVE_TYPE_UNSPECIFIED"
              },
              {
                "name": "BOOL",
                "integer": 1
              },
              {
                "name": "INT64",
                "integer": 2
              },
              {
                "name": "UINT64",
                "integer": 3
              },
              {
                "name": "DOUBLE",
                "integer": 4
              },
              {
                "name": "STRING",
                "integer": 5
              },
              {
                "name": "BYTES",
                "integer": 6
              }
            ]
          },
          {
            "name": "Type.WellKnownType",
            "enum_fields": [
              {
                "name": "WELL_KNOWN_TYPE_UNSPECIFIED"
              },
              {
                "name": "ANY",
                "integer": 1
              },
              {
                "name": "TIMESTAMP",
                "integer": 2
              },
              {
                "name": "DURATION",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CheckedExpr",
            "fields": [
              {
                "id": 5,
                "name": "source_info",
                "type": "SourceInfo"
              },
              {
                "id": 4,
                "name": "expr",
                "type": "Expr"
              }
            ],
            "maps": [
              {
                "key_type": "int64",
                "field": {
                  "id": 2,
                  "name": "reference_map",
                  "type": "Reference"
                }
              },
              {
                "key_type": "int64",
                "field": {
                  "id": 3,
                  "name": "type_map",
                  "type": "Type"
                }
              }
            ]
          },
          {
            "name": "Type",
            "fields": [
              {
                "id": 1,
                "name": "dyn",
                "type": "google.protobuf.Empty",
                "oneof_parent": "type_kind"
              },
              {
                "id": 2,
                "name": "null",
                "type": "google.protobuf.NullValue",
                "oneof_parent": "type_kind"
              },
              {
                "id": 3,
                "name": "primitive",
                "type": "PrimitiveType",
                "oneof_parent": "type_kind"
              },
              {
                "id": 4,
                "name": "wrapper",
                "type": "PrimitiveType",
                "oneof_parent": "type_kind"
              },
              {
                "id": 5,
                "name": "well_known",
                "type": "WellKnownType",
                "oneof_parent": "type_kind"
              },
              {
                "id": 6,
                "name": "list_type",
                "type": "ListType",
                "oneof_parent": "type_kind"
              },
              {
                "id": 7,
                "name": "map_type",
                "type": "MapType",
                "oneof_parent": "type_kind"
              },
              {
                "id": 8,
                "name": "function",
                "type": "FunctionType",
                "oneof_parent": "type_kind"
              },
              {
                "id": 9,
                "name": "message_type",
                "type": "string",
                "oneof_parent": "type_kind"
              },
              {
                "id": 10,
                "name": "type_param",
                "type": "string",
                "oneof_parent": "type_kind"
              },
              {
                "id": 11,
                "name": "type",
                "type": "Type",
                "oneof_parent": "type_kind"
              },
              {
                "id": 12,
                "name": "error",
                "type": "google.protobuf.Empty",
                "oneof_parent": "type_kind"
              },
              {
                "id": 14,
                "name": "abstract_type",
                "type": "AbstractType",
                "oneof_parent": "type_kind"
              }
            ],
            "messages": [
              {
                "name": "ListType",
                "fields": [
                  {
                    "id": 1,
                    "name": "elem_type",
                    "type": "Type"
                  }
                ]
              },
              {
                "name": "MapType",
                "fields": [
                  {
                    "id": 1,
                    "name": "key_type",
                    "type": "Type"
                  },
                  {
                    "id": 2,
                    "name": "value_type",
                    "type": "Type"
                  }
                ]
              },
              {
                "name": "FunctionType",
                "fields": [
                  {
                    "id": 1,
                    "name": "result_type",
                    "type": "Type"
                  },
                  {
                    "id": 2,
                    "name": "arg_types",
                    "type": "Type",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "AbstractType",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "parameter_types",
                    "type": "Type",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "Decl",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "ident",
                "type": "IdentDecl",
                "oneof_parent": "decl_kind"
              },
              {
                "id": 3,
                "name": "function",
                "type": "FunctionDecl",
                "oneof_parent": "decl_kind"
              }
            ],
            "messages": [
              {
                "name": "IdentDecl",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "Type"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "Constant"
                  },
                  {
                    "id": 3,
                    "name": "doc",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "FunctionDecl",
                "fields": [
                  {
                    "id": 1,
                    "name": "overloads",
                    "type": "Overload",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "Overload",
                    "fields": [
                      {
                        "id": 1,
                        "name": "overload_id",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "params",
                        "type": "Type",
                        "is_repeated": true
                      },
                      {
                        "id": 3,
                        "name": "type_params",
                        "type": "string",
                        "is_repeated": true
                      },
                      {
                        "id": 4,
                        "name": "result_type",
                        "type": "Type"
                      },
                      {
                        "id": 5,
                        "name": "is_instance_function",
                        "type": "bool"
                      },
                      {
                        "id": 6,
                        "name": "doc",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "Reference",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "overload_id",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "value",
                "type": "Constant"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/expr/v1alpha1/syntax.proto"
          },
          {
            "path": "google/protobuf/empty.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          }
        ],
        "package": {
          "name": "google.api.expr.v1alpha1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/expr/v1alpha1;expr"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "DeclProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.expr.v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:expr:/:v1alpha1:/:conformance_service.proto",
      "def": {
        "enums": [
          {
            "name": "IssueDetails.Severity",
            "enum_fields": [
              {
                "name": "SEVERITY_UNSPECIFIED"
              },
              {
                "name": "DEPRECATION",
                "integer": 1
              },
              {
                "name": "WARNING",
                "integer": 2
              },
              {
                "name": "ERROR",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ParseRequest",
            "fields": [
              {
                "id": 1,
                "name": "cel_source",
                "type": "string"
              },
              {
                "id": 2,
                "name": "syntax_version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "source_location",
                "type": "string"
              },
              {
                "id": 4,
                "name": "disable_macros",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ParseResponse",
            "fields": [
              {
                "id": 1,
                "name": "parsed_expr",
                "type": "ParsedExpr"
              },
              {
                "id": 2,
                "name": "issues",
                "type": "google.rpc.Status",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CheckRequest",
            "fields": [
              {
                "id": 1,
                "name": "parsed_expr",
                "type": "ParsedExpr"
              },
              {
                "id": 2,
                "name": "type_env",
                "type": "Decl",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "container",
                "type": "string"
              },
              {
                "id": 4,
                "name": "no_std_env",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CheckResponse",
            "fields": [
              {
                "id": 1,
                "name": "checked_expr",
                "type": "CheckedExpr"
              },
              {
                "id": 2,
                "name": "issues",
                "type": "google.rpc.Status",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EvalRequest",
            "fields": [
              {
                "id": 1,
                "name": "parsed_expr",
                "type": "ParsedExpr",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 2,
                "name": "checked_expr",
                "type": "CheckedExpr",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 4,
                "name": "container",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "bindings",
                  "type": "ExprValue"
                }
              }
            ]
          },
          {
            "name": "EvalResponse",
            "fields": [
              {
                "id": 1,
                "name": "result",
                "type": "ExprValue"
              },
              {
                "id": 2,
                "name": "issues",
                "type": "google.rpc.Status",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IssueDetails",
            "fields": [
              {
                "id": 1,
                "name": "severity",
                "type": "Severity"
              },
              {
                "id": 2,
                "name": "position",
                "type": "SourcePosition"
              },
              {
                "id": 3,
                "name": "id",
                "type": "int64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ConformanceService",
            "rpcs": [
              {
                "name": "Parse",
                "in_type": "ParseRequest",
                "out_type": "ParseResponse"
              },
              {
                "name": "Check",
                "in_type": "CheckRequest",
                "out_type": "CheckResponse"
              },
              {
                "name": "Eval",
                "in_type": "EvalRequest",
                "out_type": "EvalResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/expr/v1alpha1/checked.proto"
          },
          {
            "path": "google/api/expr/v1alpha1/eval.proto"
          },
          {
            "path": "google/api/expr/v1alpha1/syntax.proto"
          },
          {
            "path": "google/rpc/status.proto"
          }
        ],
        "package": {
          "name": "google.api.expr.v1alpha1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/expr/v1alpha1;expr"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ConformanceServiceProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.expr.v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:expr:/:v1alpha1:/:eval.proto",
      "def": {
        "messages": [
          {
            "name": "EvalState",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "ExprValue",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "results",
                "type": "Result",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Result",
                "fields": [
                  {
                    "id": 1,
                    "name": "expr",
                    "type": "int64"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "ExprValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "Value",
                "oneof_parent": "kind"
              },
              {
                "id": 2,
                "name": "error",
                "type": "ErrorSet",
                "oneof_parent": "kind"
              },
              {
                "id": 3,
                "name": "unknown",
                "type": "UnknownSet",
                "oneof_parent": "kind"
              }
            ]
          },
          {
            "name": "ErrorSet",
            "fields": [
              {
                "id": 1,
                "name": "errors",
                "type": "google.rpc.Status",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UnknownSet",
            "fields": [
              {
                "id": 1,
                "name": "exprs",
                "type": "int64",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/expr/v1alpha1/value.proto"
          },
          {
            "path": "google/rpc/status.proto"
          }
        ],
        "package": {
          "name": "google.api.expr.v1alpha1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/expr/v1alpha1;expr"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "EvalProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.expr.v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:expr:/:v1alpha1:/:explain.proto",
      "def": {
        "messages": [
          {
            "name": "Explain",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "Value",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "expr_steps",
                "type": "ExprStep",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ExprStep",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "int64"
                  },
                  {
                    "id": 2,
                    "name": "value_index",
                    "type": "int32"
                  }
                ]
              }
            ],
            "options": [
              {
                "name": "deprecated",
                "value": "true"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/expr/v1alpha1/value.proto"
          }
        ],
        "package": {
          "name": "google.api.expr.v1alpha1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/expr/v1alpha1;expr"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ExplainProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.expr.v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:expr:/:v1alpha1:/:syntax.proto",
      "def": {
        "messages": [
          {
            "name": "ParsedExpr",
            "fields": [
              {
                "id": 2,
                "name": "expr",
                "type": "Expr"
              },
              {
                "id": 3,
                "name": "source_info",
                "type": "SourceInfo"
              }
            ]
          },
          {
            "name": "Expr",
            "fields": [
              {
                "id": 2,
                "name": "id",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "const_expr",
                "type": "Constant",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 4,
                "name": "ident_expr",
                "type": "Ident",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 5,
                "name": "select_expr",
                "type": "Select",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 6,
                "name": "call_expr",
                "type": "Call",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 7,
                "name": "list_expr",
                "type": "CreateList",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 8,
                "name": "struct_expr",
                "type": "CreateStruct",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 9,
                "name": "comprehension_expr",
                "type": "Comprehension",
                "oneof_parent": "expr_kind"
              }
            ],
            "messages": [
              {
                "name": "Ident",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Select",
                "fields": [
                  {
                    "id": 1,
                    "name": "operand",
                    "type": "Expr"
                  },
                  {
                    "id": 2,
                    "name": "field",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "test_only",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "Call",
                "fields": [
                  {
                    "id": 1,
                    "name": "target",
                    "type": "Expr"
                  },
                  {
                    "id": 2,
                    "name": "function",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "args",
                    "type": "Expr",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "CreateList",
                "fields": [
                  {
                    "id": 1,
                    "name": "elements",
                    "type": "Expr",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "CreateStruct",
                "fields": [
                  {
                    "id": 1,
                    "name": "message_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "entries",
                    "type": "Entry",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "Entry",
                    "fields": [
                      {
                        "id": 1,
                        "name": "id",
                        "type": "int64"
                      },
                      {
                        "id": 2,
                        "name": "field_key",
                        "type": "string",
                        "oneof_parent": "key_kind"
                      },
                      {
                        "id": 3,
                        "name": "map_key",
                        "type": "Expr",
                        "oneof_parent": "key_kind"
                      },
                      {
                        "id": 4,
                        "name": "value",
                        "type": "Expr"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Comprehension",
                "fields": [
                  {
                    "id": 1,
                    "name": "iter_var",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "iter_range",
                    "type": "Expr"
                  },
                  {
                    "id": 3,
                    "name": "accu_var",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "accu_init",
                    "type": "Expr"
                  },
                  {
                    "id": 5,
                    "name": "loop_condition",
                    "type": "Expr"
                  },
                  {
                    "id": 6,
                    "name": "loop_step",
                    "type": "Expr"
                  },
                  {
                    "id": 7,
                    "name": "result",
                    "type": "Expr"
                  }
                ]
              }
            ]
          },
          {
            "name": "Constant",
            "fields": [
              {
                "id": 1,
                "name": "null_value",
                "type": "google.protobuf.NullValue",
                "oneof_parent": "constant_kind"
              },
              {
                "id": 2,
                "name": "bool_value",
                "type": "bool",
                "oneof_parent": "constant_kind"
              },
              {
                "id": 3,
                "name": "int64_value",
                "type": "int64",
                "oneof_parent": "constant_kind"
              },
              {
                "id": 4,
                "name": "uint64_value",
                "type": "uint64",
                "oneof_parent": "constant_kind"
              },
              {
                "id": 5,
                "name": "double_value",
                "type": "double",
                "oneof_parent": "constant_kind"
              },
              {
                "id": 6,
                "name": "string_value",
                "type": "string",
                "oneof_parent": "constant_kind"
              },
              {
                "id": 7,
                "name": "bytes_value",
                "type": "bytes",
                "oneof_parent": "constant_kind"
              },
              {
                "id": 8,
                "name": "duration_value",
                "type": "google.protobuf.Duration",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ],
                "oneof_parent": "constant_kind"
              },
              {
                "id": 9,
                "name": "timestamp_value",
                "type": "google.protobuf.Timestamp",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ],
                "oneof_parent": "constant_kind"
              }
            ]
          },
          {
            "name": "SourceInfo",
            "fields": [
              {
                "id": 1,
                "name": "syntax_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "location",
                "type": "string"
              },
              {
                "id": 3,
                "name": "line_offsets",
                "type": "int32",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "int64",
                "field": {
                  "id": 4,
                  "name": "positions",
                  "type": "int32"
                }
              }
            ]
          },
          {
            "name": "SourcePosition",
            "fields": [
              {
                "id": 1,
                "name": "location",
                "type": "string"
              },
              {
                "id": 2,
                "name": "offset",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "line",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "column",
                "type": "int32"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "google.api.expr.v1alpha1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/expr/v1alpha1;expr"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "SyntaxProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.expr.v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:expr:/:v1alpha1:/:value.proto",
      "def": {
        "messages": [
          {
            "name": "Value",
            "fields": [
              {
                "id": 1,
                "name": "null_value",
                "type": "google.protobuf.NullValue",
                "oneof_parent": "kind"
              },
              {
                "id": 2,
                "name": "bool_value",
                "type": "bool",
                "oneof_parent": "kind"
              },
              {
                "id": 3,
                "name": "int64_value",
                "type": "int64",
                "oneof_parent": "kind"
              },
              {
                "id": 4,
                "name": "uint64_value",
                "type": "uint64",
                "oneof_parent": "kind"
              },
              {
                "id": 5,
                "name": "double_value",
                "type": "double",
                "oneof_parent": "kind"
              },
              {
                "id": 6,
                "name": "string_value",
                "type": "string",
                "oneof_parent": "kind"
              },
              {
                "id": 7,
                "name": "bytes_value",
                "type": "bytes",
                "oneof_parent": "kind"
              },
              {
                "id": 9,
                "name": "enum_value",
                "type": "EnumValue",
                "oneof_parent": "kind"
              },
              {
                "id": 10,
                "name": "object_value",
                "type": "google.protobuf.Any",
                "oneof_parent": "kind"
              },
              {
                "id": 11,
                "name": "map_value",
                "type": "MapValue",
                "oneof_parent": "kind"
              },
              {
                "id": 12,
                "name": "list_value",
                "type": "ListValue",
                "oneof_parent": "kind"
              },
              {
                "id": 15,
                "name": "type_value",
                "type": "string",
                "oneof_parent": "kind"
              }
            ]
          },
          {
            "name": "EnumValue",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListValue",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "Value",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MapValue",
            "fields": [
              {
                "id": 1,
                "name": "entries",
                "type": "Entry",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Entry",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "Value"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "Value"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          }
        ],
        "package": {
          "name": "google.api.expr.v1alpha1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/expr/v1alpha1;expr"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ValueProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.expr.v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:expr:/:v1beta1:/:decl.proto",
      "def": {
        "messages": [
          {
            "name": "Decl",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "doc",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ident",
                "type": "IdentDecl",
                "oneof_parent": "kind"
              },
              {
                "id": 5,
                "name": "function",
                "type": "FunctionDecl",
                "oneof_parent": "kind"
              }
            ]
          },
          {
            "name": "DeclType",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type_params",
                "type": "DeclType",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IdentDecl",
            "fields": [
              {
                "id": 3,
                "name": "type",
                "type": "DeclType"
              },
              {
                "id": 4,
                "name": "value",
                "type": "Expr"
              }
            ]
          },
          {
            "name": "FunctionDecl",
            "fields": [
              {
                "id": 1,
                "name": "args",
                "type": "IdentDecl",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "return_type",
                "type": "DeclType"
              },
              {
                "id": 3,
                "name": "receiver_function",
                "type": "bool"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/expr/v1beta1/expr.proto"
          }
        ],
        "package": {
          "name": "google.api.expr.v1beta1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/expr/v1beta1;expr"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "DeclProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.expr.v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:expr:/:v1beta1:/:eval.proto",
      "def": {
        "messages": [
          {
            "name": "EvalState",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "ExprValue",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "results",
                "type": "Result",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Result",
                "fields": [
                  {
                    "id": 1,
                    "name": "expr",
                    "type": "IdRef"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "ExprValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "Value",
                "oneof_parent": "kind"
              },
              {
                "id": 2,
                "name": "error",
                "type": "ErrorSet",
                "oneof_parent": "kind"
              },
              {
                "id": 3,
                "name": "unknown",
                "type": "UnknownSet",
                "oneof_parent": "kind"
              }
            ]
          },
          {
            "name": "ErrorSet",
            "fields": [
              {
                "id": 1,
                "name": "errors",
                "type": "google.rpc.Status",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UnknownSet",
            "fields": [
              {
                "id": 1,
                "name": "exprs",
                "type": "IdRef",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IdRef",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "int32"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/expr/v1beta1/value.proto"
          },
          {
            "path": "google/rpc/status.proto"
          }
        ],
        "package": {
          "name": "google.api.expr.v1beta1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/expr/v1beta1;expr"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "EvalProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.expr.v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:expr:/:v1beta1:/:expr.proto",
      "def": {
        "messages": [
          {
            "name": "ParsedExpr",
            "fields": [
              {
                "id": 2,
                "name": "expr",
                "type": "Expr"
              },
              {
                "id": 3,
                "name": "source_info",
                "type": "SourceInfo"
              },
              {
                "id": 4,
                "name": "syntax_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "Expr",
            "fields": [
              {
                "id": 2,
                "name": "id",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "literal_expr",
                "type": "Literal",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 4,
                "name": "ident_expr",
                "type": "Ident",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 5,
                "name": "select_expr",
                "type": "Select",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 6,
                "name": "call_expr",
                "type": "Call",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 7,
                "name": "list_expr",
                "type": "CreateList",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 8,
                "name": "struct_expr",
                "type": "CreateStruct",
                "oneof_parent": "expr_kind"
              },
              {
                "id": 9,
                "name": "comprehension_expr",
                "type": "Comprehension",
                "oneof_parent": "expr_kind"
              }
            ],
            "messages": [
              {
                "name": "Ident",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Select",
                "fields": [
                  {
                    "id": 1,
                    "name": "operand",
                    "type": "Expr"
                  },
                  {
                    "id": 2,
                    "name": "field",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "test_only",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "Call",
                "fields": [
                  {
                    "id": 1,
                    "name": "target",
                    "type": "Expr"
                  },
                  {
                    "id": 2,
                    "name": "function",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "args",
                    "type": "Expr",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "CreateList",
                "fields": [
                  {
                    "id": 1,
                    "name": "elements",
                    "type": "Expr",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "CreateStruct",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "entries",
                    "type": "Entry",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "Entry",
                    "fields": [
                      {
                        "id": 1,
                        "name": "id",
                        "type": "int32"
                      },
                      {
                        "id": 2,
                        "name": "field_key",
                        "type": "string",
                        "oneof_parent": "key_kind"
                      },
                      {
                        "id": 3,
                        "name": "map_key",
                        "type": "Expr",
                        "oneof_parent": "key_kind"
                      },
                      {
                        "id": 4,
                        "name": "value",
                        "type": "Expr"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Comprehension",
                "fields": [
                  {
                    "id": 1,
                    "name": "iter_var",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "iter_range",
                    "type": "Expr"
                  },
                  {
                    "id": 3,
                    "name": "accu_var",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "accu_init",
                    "type": "Expr"
                  },
                  {
                    "id": 5,
                    "name": "loop_condition",
                    "type": "Expr"
                  },
                  {
                    "id": 6,
                    "name": "loop_step",
                    "type": "Expr"
                  },
                  {
                    "id": 7,
                    "name": "result",
                    "type": "Expr"
                  }
                ]
              }
            ]
          },
          {
            "name": "Literal",
            "fields": [
              {
                "id": 1,
                "name": "null_value",
                "type": "google.protobuf.NullValue",
                "oneof_parent": "constant_kind"
              },
              {
                "id": 2,
                "name": "bool_value",
                "type": "bool",
                "oneof_parent": "constant_kind"
              },
              {
                "id": 3,
                "name": "int64_value",
                "type": "int64",
                "oneof_parent": "constant_kind"
              },
              {
                "id": 4,
                "name": "uint64_value",
                "type": "uint64",
                "oneof_parent": "constant_kind"
              },
              {
                "id": 5,
                "name": "double_value",
                "type": "double",
                "oneof_parent": "constant_kind"
              },
              {
                "id": 6,
                "name": "string_value",
                "type": "string",
                "oneof_parent": "constant_kind"
              },
              {
                "id": 7,
                "name": "bytes_value",
                "type": "bytes",
                "oneof_parent": "constant_kind"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/expr/v1beta1/source.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          }
        ],
        "package": {
          "name": "google.api.expr.v1beta1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/expr/v1beta1;expr"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ExprProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.expr.v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:expr:/:v1beta1:/:source.proto",
      "def": {
        "messages": [
          {
            "name": "SourceInfo",
            "fields": [
              {
                "id": 2,
                "name": "location",
                "type": "string"
              },
              {
                "id": 3,
                "name": "line_offsets",
                "type": "int32",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 4,
                  "name": "positions",
                  "type": "int32"
                }
              }
            ]
          },
          {
            "name": "SourcePosition",
            "fields": [
              {
                "id": 1,
                "name": "location",
                "type": "string"
              },
              {
                "id": 2,
                "name": "offset",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "line",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "column",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api.expr.v1beta1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/expr/v1beta1;expr"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "SourceProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.expr.v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:expr:/:v1beta1:/:value.proto",
      "def": {
        "messages": [
          {
            "name": "Value",
            "fields": [
              {
                "id": 1,
                "name": "null_value",
                "type": "google.protobuf.NullValue",
                "oneof_parent": "kind"
              },
              {
                "id": 2,
                "name": "bool_value",
                "type": "bool",
                "oneof_parent": "kind"
              },
              {
                "id": 3,
                "name": "int64_value",
                "type": "int64",
                "oneof_parent": "kind"
              },
              {
                "id": 4,
                "name": "uint64_value",
                "type": "uint64",
                "oneof_parent": "kind"
              },
              {
                "id": 5,
                "name": "double_value",
                "type": "double",
                "oneof_parent": "kind"
              },
              {
                "id": 6,
                "name": "string_value",
                "type": "string",
                "oneof_parent": "kind"
              },
              {
                "id": 7,
                "name": "bytes_value",
                "type": "bytes",
                "oneof_parent": "kind"
              },
              {
                "id": 9,
                "name": "enum_value",
                "type": "EnumValue",
                "oneof_parent": "kind"
              },
              {
                "id": 10,
                "name": "object_value",
                "type": "google.protobuf.Any",
                "oneof_parent": "kind"
              },
              {
                "id": 11,
                "name": "map_value",
                "type": "MapValue",
                "oneof_parent": "kind"
              },
              {
                "id": 12,
                "name": "list_value",
                "type": "ListValue",
                "oneof_parent": "kind"
              },
              {
                "id": 15,
                "name": "type_value",
                "type": "string",
                "oneof_parent": "kind"
              }
            ]
          },
          {
            "name": "EnumValue",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListValue",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "Value",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MapValue",
            "fields": [
              {
                "id": 1,
                "name": "entries",
                "type": "Entry",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Entry",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "Value"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "Value"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          }
        ],
        "package": {
          "name": "google.api.expr.v1beta1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/expr/v1beta1;expr"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ValueProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.expr.v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:field_behavior.proto",
      "def": {
        "enums": [
          {
            "name": "FieldBehavior",
            "enum_fields": [
              {
                "name": "FIELD_BEHAVIOR_UNSPECIFIED"
              },
              {
                "name": "OPTIONAL",
                "integer": 1
              },
              {
                "name": "REQUIRED",
                "integer": 2
              },
              {
                "name": "OUTPUT_ONLY",
                "integer": 3
              },
              {
                "name": "INPUT_ONLY",
                "integer": 4
              },
              {
                "name": "IMMUTABLE",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "google.protobuf.FieldOptions",
            "fields": [
              {
                "id": 1052,
                "name": "field_behavior",
                "type": "google.api.FieldBehavior",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/annotations;annotations"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "FieldBehaviorProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:http.proto",
      "def": {
        "messages": [
          {
            "name": "Http",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "HttpRule",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "fully_decode_reserved_expansion",
                "type": "bool"
              }
            ]
          },
          {
            "name": "HttpRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "get",
                "type": "string",
                "oneof_parent": "pattern"
              },
              {
                "id": 3,
                "name": "put",
                "type": "string",
                "oneof_parent": "pattern"
              },
              {
                "id": 4,
                "name": "post",
                "type": "string",
                "oneof_parent": "pattern"
              },
              {
                "id": 5,
                "name": "delete",
                "type": "string",
                "oneof_parent": "pattern"
              },
              {
                "id": 6,
                "name": "patch",
                "type": "string",
                "oneof_parent": "pattern"
              },
              {
                "id": 8,
                "name": "custom",
                "type": "CustomHttpPattern",
                "oneof_parent": "pattern"
              },
              {
                "id": 7,
                "name": "body",
                "type": "string"
              },
              {
                "id": 12,
                "name": "response_body",
                "type": "string"
              },
              {
                "id": 11,
                "name": "additional_bindings",
                "type": "HttpRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CustomHttpPattern",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/annotations;annotations"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "HttpProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:httpbody.proto",
      "def": {
        "messages": [
          {
            "name": "HttpBody",
            "fields": [
              {
                "id": 1,
                "name": "content_type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "data",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "extensions",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/httpbody;httpbody"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "HttpBodyProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:label.proto",
      "def": {
        "enums": [
          {
            "name": "LabelDescriptor.ValueType",
            "enum_fields": [
              {
                "name": "STRING"
              },
              {
                "name": "BOOL",
                "integer": 1
              },
              {
                "name": "INT64",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LabelDescriptor",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value_type",
                "type": "ValueType"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/label;label"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "LabelProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:launch_stage.proto",
      "def": {
        "enums": [
          {
            "name": "LaunchStage",
            "enum_fields": [
              {
                "name": "LAUNCH_STAGE_UNSPECIFIED"
              },
              {
                "name": "EARLY_ACCESS",
                "integer": 1
              },
              {
                "name": "ALPHA",
                "integer": 2
              },
              {
                "name": "BETA",
                "integer": 3
              },
              {
                "name": "GA",
                "integer": 4
              },
              {
                "name": "DEPRECATED",
                "integer": 5
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api;api"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "LaunchStageProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:log.proto",
      "def": {
        "messages": [
          {
            "name": "LogDescriptor",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "labels",
                "type": "LabelDescriptor",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "display_name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/label.proto"
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "LogProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:logging.proto",
      "def": {
        "messages": [
          {
            "name": "Logging",
            "fields": [
              {
                "id": 1,
                "name": "producer_destinations",
                "type": "LoggingDestination",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "consumer_destinations",
                "type": "LoggingDestination",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "LoggingDestination",
                "fields": [
                  {
                    "id": 3,
                    "name": "monitored_resource",
                    "type": "string"
                  },
                  {
                    "id": 1,
                    "name": "logs",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "LoggingProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:metric.proto",
      "def": {
        "enums": [
          {
            "name": "MetricDescriptor.MetricKind",
            "enum_fields": [
              {
                "name": "METRIC_KIND_UNSPECIFIED"
              },
              {
                "name": "GAUGE",
                "integer": 1
              },
              {
                "name": "DELTA",
                "integer": 2
              },
              {
                "name": "CUMULATIVE",
                "integer": 3
              }
            ]
          },
          {
            "name": "MetricDescriptor.ValueType",
            "enum_fields": [
              {
                "name": "VALUE_TYPE_UNSPECIFIED"
              },
              {
                "name": "BOOL",
                "integer": 1
              },
              {
                "name": "INT64",
                "integer": 2
              },
              {
                "name": "DOUBLE",
                "integer": 3
              },
              {
                "name": "STRING",
                "integer": 4
              },
              {
                "name": "DISTRIBUTION",
                "integer": 5
              },
              {
                "name": "MONEY",
                "integer": 6
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "MetricDescriptor",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 8,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "labels",
                "type": "LabelDescriptor",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "metric_kind",
                "type": "MetricKind"
              },
              {
                "id": 4,
                "name": "value_type",
                "type": "ValueType"
              },
              {
                "id": 5,
                "name": "unit",
                "type": "string"
              },
              {
                "id": 6,
                "name": "description",
                "type": "string"
              },
              {
                "id": 7,
                "name": "display_name",
                "type": "string"
              },
              {
                "id": 10,
                "name": "metadata",
                "type": "MetricDescriptorMetadata"
              },
              {
                "id": 12,
                "name": "launch_stage",
                "type": "LaunchStage"
              }
            ],
            "messages": [
              {
                "name": "MetricDescriptorMetadata",
                "fields": [
                  {
                    "id": 1,
                    "name": "launch_stage",
                    "type": "LaunchStage",
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "sample_period",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 3,
                    "name": "ingest_delay",
                    "type": "google.protobuf.Duration"
                  }
                ]
              }
            ]
          },
          {
            "name": "Metric",
            "fields": [
              {
                "id": 3,
                "name": "type",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/label.proto"
          },
          {
            "path": "google/api/launch_stage.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/metric;metric"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "MetricProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:monitored_resource.proto",
      "def": {
        "messages": [
          {
            "name": "MonitoredResourceDescriptor",
            "fields": [
              {
                "id": 5,
                "name": "name",
                "type": "string"
              },
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "display_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "labels",
                "type": "LabelDescriptor",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "launch_stage",
                "type": "LaunchStage"
              }
            ]
          },
          {
            "name": "MonitoredResource",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "MonitoredResourceMetadata",
            "fields": [
              {
                "id": 1,
                "name": "system_labels",
                "type": "google.protobuf.Struct"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "user_labels",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/label.proto"
          },
          {
            "path": "google/api/launch_stage.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/monitoredres;monitoredres"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "MonitoredResourceProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:monitoring.proto",
      "def": {
        "messages": [
          {
            "name": "Monitoring",
            "fields": [
              {
                "id": 1,
                "name": "producer_destinations",
                "type": "MonitoringDestination",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "consumer_destinations",
                "type": "MonitoringDestination",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "MonitoringDestination",
                "fields": [
                  {
                    "id": 1,
                    "name": "monitored_resource",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "metrics",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "MonitoringProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:quota.proto",
      "def": {
        "messages": [
          {
            "name": "Quota",
            "fields": [
              {
                "id": 3,
                "name": "limits",
                "type": "QuotaLimit",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "metric_rules",
                "type": "MetricRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MetricRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "metric_costs",
                  "type": "int64"
                }
              }
            ]
          },
          {
            "name": "QuotaLimit",
            "fields": [
              {
                "id": 6,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "default_limit",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "max_limit",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "free_tier",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "duration",
                "type": "string"
              },
              {
                "id": 8,
                "name": "metric",
                "type": "string"
              },
              {
                "id": 9,
                "name": "unit",
                "type": "string"
              },
              {
                "id": 12,
                "name": "display_name",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 10,
                  "name": "values",
                  "type": "int64"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "QuotaProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:resource.proto",
      "def": {
        "enums": [
          {
            "name": "ResourceDescriptor.History",
            "enum_fields": [
              {
                "name": "HISTORY_UNSPECIFIED"
              },
              {
                "name": "ORIGINALLY_SINGLE_PATTERN",
                "integer": 1
              },
              {
                "name": "FUTURE_MULTI_PATTERN",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "google.protobuf.FieldOptions",
            "fields": [
              {
                "id": 1055,
                "name": "resource_reference",
                "type": "google.api.ResourceReference"
              }
            ]
          },
          {
            "name": "google.protobuf.MessageOptions",
            "fields": [
              {
                "id": 1053,
                "name": "resource",
                "type": "google.api.ResourceDescriptor"
              }
            ]
          },
          {
            "name": "ResourceDescriptor",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pattern",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "name_field",
                "type": "string"
              },
              {
                "id": 4,
                "name": "history",
                "type": "History"
              }
            ]
          },
          {
            "name": "ResourceReference",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "child_type",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/annotations;annotations"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ResourceProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:service.proto",
      "def": {
        "messages": [
          {
            "name": "Service",
            "fields": [
              {
                "id": 20,
                "name": "config_version",
                "type": "google.protobuf.UInt32Value"
              },
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 33,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "title",
                "type": "string"
              },
              {
                "id": 22,
                "name": "producer_project_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "apis",
                "type": "google.protobuf.Api",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "types",
                "type": "google.protobuf.Type",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "enums",
                "type": "google.protobuf.Enum",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "documentation",
                "type": "Documentation"
              },
              {
                "id": 8,
                "name": "backend",
                "type": "Backend"
              },
              {
                "id": 9,
                "name": "http",
                "type": "Http"
              },
              {
                "id": 10,
                "name": "quota",
                "type": "Quota"
              },
              {
                "id": 11,
                "name": "authentication",
                "type": "Authentication"
              },
              {
                "id": 12,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 15,
                "name": "usage",
                "type": "Usage"
              },
              {
                "id": 18,
                "name": "endpoints",
                "type": "Endpoint",
                "is_repeated": true
              },
              {
                "id": 21,
                "name": "control",
                "type": "Control"
              },
              {
                "id": 23,
                "name": "logs",
                "type": "LogDescriptor",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "metrics",
                "type": "MetricDescriptor",
                "is_repeated": true
              },
              {
                "id": 25,
                "name": "monitored_resources",
                "type": "MonitoredResourceDescriptor",
                "is_repeated": true
              },
              {
                "id": 26,
                "name": "billing",
                "type": "Billing"
              },
              {
                "id": 27,
                "name": "logging",
                "type": "Logging"
              },
              {
                "id": 28,
                "name": "monitoring",
                "type": "Monitoring"
              },
              {
                "id": 29,
                "name": "system_parameters",
                "type": "SystemParameters"
              },
              {
                "id": 37,
                "name": "source_info",
                "type": "SourceInfo"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/auth.proto"
          },
          {
            "path": "google/api/backend.proto"
          },
          {
            "path": "google/api/billing.proto"
          },
          {
            "path": "google/api/context.proto"
          },
          {
            "path": "google/api/control.proto"
          },
          {
            "path": "google/api/documentation.proto"
          },
          {
            "path": "google/api/endpoint.proto"
          },
          {
            "path": "google/api/http.proto"
          },
          {
            "path": "google/api/label.proto"
          },
          {
            "path": "google/api/log.proto"
          },
          {
            "path": "google/api/logging.proto"
          },
          {
            "path": "google/api/metric.proto"
          },
          {
            "path": "google/api/monitored_resource.proto"
          },
          {
            "path": "google/api/monitoring.proto"
          },
          {
            "path": "google/api/quota.proto"
          },
          {
            "path": "google/api/resource.proto"
          },
          {
            "path": "google/api/source_info.proto"
          },
          {
            "path": "google/api/system_parameter.proto"
          },
          {
            "path": "google/api/usage.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/api.proto"
          },
          {
            "path": "google/protobuf/type.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ServiceProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:servicecontrol:/:v1:/:check_error.proto",
      "def": {
        "enums": [
          {
            "name": "CheckError.Code",
            "enum_fields": [
              {
                "name": "ERROR_CODE_UNSPECIFIED"
              },
              {
                "name": "NOT_FOUND",
                "integer": 5
              },
              {
                "name": "PERMISSION_DENIED",
                "integer": 7
              },
              {
                "name": "RESOURCE_EXHAUSTED",
                "integer": 8
              },
              {
                "name": "SERVICE_NOT_ACTIVATED",
                "integer": 104
              },
              {
                "name": "BILLING_DISABLED",
                "integer": 107
              },
              {
                "name": "PROJECT_DELETED",
                "integer": 108
              },
              {
                "name": "PROJECT_INVALID",
                "integer": 114
              },
              {
                "name": "IP_ADDRESS_BLOCKED",
                "integer": 109
              },
              {
                "name": "REFERER_BLOCKED",
                "integer": 110
              },
              {
                "name": "CLIENT_APP_BLOCKED",
                "integer": 111
              },
              {
                "name": "API_TARGET_BLOCKED",
                "integer": 122
              },
              {
                "name": "API_KEY_INVALID",
                "integer": 105
              },
              {
                "name": "API_KEY_EXPIRED",
                "integer": 112
              },
              {
                "name": "API_KEY_NOT_FOUND",
                "integer": 113
              },
              {
                "name": "NAMESPACE_LOOKUP_UNAVAILABLE",
                "integer": 300
              },
              {
                "name": "SERVICE_STATUS_UNAVAILABLE",
                "integer": 301
              },
              {
                "name": "BILLING_STATUS_UNAVAILABLE",
                "integer": 302
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CheckError",
            "fields": [
              {
                "id": 1,
                "name": "code",
                "type": "Code"
              },
              {
                "id": 2,
                "name": "detail",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "google.api.servicecontrol.v1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/servicecontrol/v1;servicecontrol"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "CheckErrorProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.servicecontrol.v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:servicecontrol:/:v1:/:distribution.proto",
      "def": {
        "messages": [
          {
            "name": "Distribution",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "mean",
                "type": "double"
              },
              {
                "id": 3,
                "name": "minimum",
                "type": "double"
              },
              {
                "id": 4,
                "name": "maximum",
                "type": "double"
              },
              {
                "id": 5,
                "name": "sum_of_squared_deviation",
                "type": "double"
              },
              {
                "id": 6,
                "name": "bucket_counts",
                "type": "int64",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "linear_buckets",
                "type": "LinearBuckets",
                "oneof_parent": "bucket_option"
              },
              {
                "id": 8,
                "name": "exponential_buckets",
                "type": "ExponentialBuckets",
                "oneof_parent": "bucket_option"
              },
              {
                "id": 9,
                "name": "explicit_buckets",
                "type": "ExplicitBuckets",
                "oneof_parent": "bucket_option"
              }
            ],
            "messages": [
              {
                "name": "LinearBuckets",
                "fields": [
                  {
                    "id": 1,
                    "name": "num_finite_buckets",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "width",
                    "type": "double"
                  },
                  {
                    "id": 3,
                    "name": "offset",
                    "type": "double"
                  }
                ]
              },
              {
                "name": "ExponentialBuckets",
                "fields": [
                  {
                    "id": 1,
                    "name": "num_finite_buckets",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "growth_factor",
                    "type": "double"
                  },
                  {
                    "id": 3,
                    "name": "scale",
                    "type": "double"
                  }
                ]
              },
              {
                "name": "ExplicitBuckets",
                "fields": [
                  {
                    "id": 1,
                    "name": "bounds",
                    "type": "double",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.api.servicecontrol.v1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/servicecontrol/v1;servicecontrol"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "DistributionProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.servicecontrol.v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:servicecontrol:/:v1:/:log_entry.proto",
      "def": {
        "messages": [
          {
            "name": "LogEntry",
            "fields": [
              {
                "id": 10,
                "name": "name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 12,
                "name": "severity",
                "type": "google.logging.type.LogSeverity"
              },
              {
                "id": 4,
                "name": "insert_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "proto_payload",
                "type": "google.protobuf.Any",
                "oneof_parent": "payload"
              },
              {
                "id": 3,
                "name": "text_payload",
                "type": "string",
                "oneof_parent": "payload"
              },
              {
                "id": 6,
                "name": "struct_payload",
                "type": "google.protobuf.Struct",
                "oneof_parent": "payload"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 13,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/logging/type/log_severity.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "google.api.servicecontrol.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/servicecontrol/v1;servicecontrol"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "LogEntryProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.servicecontrol.v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:servicecontrol:/:v1:/:metric_value.proto",
      "def": {
        "messages": [
          {
            "name": "MetricValue",
            "fields": [
              {
                "id": 2,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "end_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "bool_value",
                "type": "bool",
                "oneof_parent": "value"
              },
              {
                "id": 5,
                "name": "int64_value",
                "type": "int64",
                "oneof_parent": "value"
              },
              {
                "id": 6,
                "name": "double_value",
                "type": "double",
                "oneof_parent": "value"
              },
              {
                "id": 7,
                "name": "string_value",
                "type": "string",
                "oneof_parent": "value"
              },
              {
                "id": 8,
                "name": "distribution_value",
                "type": "Distribution",
                "oneof_parent": "value"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "MetricValueSet",
            "fields": [
              {
                "id": 1,
                "name": "metric_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "metric_values",
                "type": "MetricValue",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/api/servicecontrol/v1/distribution.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/type/money.proto"
          }
        ],
        "package": {
          "name": "google.api.servicecontrol.v1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/servicecontrol/v1;servicecontrol"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "MetricValueSetProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.servicecontrol.v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:servicecontrol:/:v1:/:operation.proto",
      "def": {
        "enums": [
          {
            "name": "Operation.Importance",
            "enum_fields": [
              {
                "name": "LOW"
              },
              {
                "name": "HIGH",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Operation",
            "fields": [
              {
                "id": 1,
                "name": "operation_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operation_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "consumer_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "end_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "metric_value_sets",
                "type": "MetricValueSet",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "log_entries",
                "type": "LogEntry",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "importance",
                "type": "Importance"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/api/servicecontrol/v1/log_entry.proto"
          },
          {
            "path": "google/api/servicecontrol/v1/metric_value.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "google.api.servicecontrol.v1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/servicecontrol/v1;servicecontrol"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "OperationProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.servicecontrol.v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:servicecontrol:/:v1:/:quota_controller.proto",
      "def": {
        "enums": [
          {
            "name": "QuotaOperation.QuotaMode",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "NORMAL",
                "integer": 1
              },
              {
                "name": "BEST_EFFORT",
                "integer": 2
              },
              {
                "name": "CHECK_ONLY",
                "integer": 3
              }
            ]
          },
          {
            "name": "QuotaError.Code",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "RESOURCE_EXHAUSTED",
                "integer": 8
              },
              {
                "name": "BILLING_NOT_ACTIVE",
                "integer": 107
              },
              {
                "name": "PROJECT_DELETED",
                "integer": 108
              },
              {
                "name": "API_KEY_INVALID",
                "integer": 105
              },
              {
                "name": "API_KEY_EXPIRED",
                "integer": 112
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AllocateQuotaRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "allocate_operation",
                "type": "QuotaOperation"
              },
              {
                "id": 4,
                "name": "service_config_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "QuotaOperation",
            "fields": [
              {
                "id": 1,
                "name": "operation_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "method_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "consumer_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "quota_metrics",
                "type": "MetricValueSet",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "quota_mode",
                "type": "QuotaMode"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "AllocateQuotaResponse",
            "fields": [
              {
                "id": 1,
                "name": "operation_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "allocate_errors",
                "type": "QuotaError",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "quota_metrics",
                "type": "MetricValueSet",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "service_config_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "QuotaError",
            "fields": [
              {
                "id": 1,
                "name": "code",
                "type": "Code"
              },
              {
                "id": 2,
                "name": "subject",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "QuotaController",
            "rpcs": [
              {
                "name": "AllocateQuota",
                "in_type": "AllocateQuotaRequest",
                "out_type": "AllocateQuotaResponse",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "post",
                        "value": "/v1/services/{service_name}:allocateQuota"
                      },
                      {
                        "name": "body",
                        "value": "*"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/api/servicecontrol/v1/metric_value.proto"
          }
        ],
        "package": {
          "name": "google.api.servicecontrol.v1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/servicecontrol/v1;servicecontrol"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "QuotaControllerProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.servicecontrol.v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:servicecontrol:/:v1:/:service_controller.proto",
      "def": {
        "messages": [
          {
            "name": "CheckRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operation",
                "type": "Operation"
              },
              {
                "id": 4,
                "name": "service_config_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "CheckResponse",
            "fields": [
              {
                "id": 1,
                "name": "operation_id",
                "type": "string"
              },
              {
                "id": 11,
                "name": "service_rollout_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "check_errors",
                "type": "CheckError",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "service_config_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "check_info",
                "type": "CheckInfo"
              }
            ],
            "messages": [
              {
                "name": "CheckInfo",
                "fields": [
                  {
                    "id": 2,
                    "name": "consumer_info",
                    "type": "ConsumerInfo"
                  }
                ]
              },
              {
                "name": "ConsumerInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "project_number",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "ReportRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operations",
                "type": "Operation",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "service_config_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ReportResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_errors",
                "type": "ReportError",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "service_config_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "service_rollout_id",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "ReportError",
                "fields": [
                  {
                    "id": 1,
                    "name": "operation_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "status",
                    "type": "google.rpc.Status"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ServiceController",
            "rpcs": [
              {
                "name": "Check",
                "in_type": "CheckRequest",
                "out_type": "CheckResponse",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "post",
                        "value": "/v1/services/{service_name}:check"
                      },
                      {
                        "name": "body",
                        "value": "*"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Report",
                "in_type": "ReportRequest",
                "out_type": "ReportResponse",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "post",
                        "value": "/v1/services/{service_name}:report"
                      },
                      {
                        "name": "body",
                        "value": "*"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/api/servicecontrol/v1/check_error.proto"
          },
          {
            "path": "google/api/servicecontrol/v1/operation.proto"
          },
          {
            "path": "google/rpc/status.proto"
          }
        ],
        "package": {
          "name": "google.api.servicecontrol.v1"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/servicecontrol/v1;servicecontrol"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ServiceControllerProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.servicecontrol.v1"
          },
          {
            "name": "objc_class_prefix",
            "value": "GASC"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:servicemanagement:/:v1:/:resources.proto",
      "def": {
        "enums": [
          {
            "name": "OperationMetadata.Status",
            "enum_fields": [
              {
                "name": "STATUS_UNSPECIFIED"
              },
              {
                "name": "DONE",
                "integer": 1
              },
              {
                "name": "NOT_STARTED",
                "integer": 2
              },
              {
                "name": "IN_PROGRESS",
                "integer": 3
              },
              {
                "name": "FAILED",
                "integer": 4
              },
              {
                "name": "CANCELLED",
                "integer": 5
              }
            ]
          },
          {
            "name": "Diagnostic.Kind",
            "enum_fields": [
              {
                "name": "WARNING"
              },
              {
                "name": "ERROR",
                "integer": 1
              }
            ]
          },
          {
            "name": "ConfigFile.FileType",
            "enum_fields": [
              {
                "name": "FILE_TYPE_UNSPECIFIED"
              },
              {
                "name": "SERVICE_CONFIG_YAML",
                "integer": 1
              },
              {
                "name": "OPEN_API_JSON",
                "integer": 2
              },
              {
                "name": "OPEN_API_YAML",
                "integer": 3
              },
              {
                "name": "FILE_DESCRIPTOR_SET_PROTO",
                "integer": 4
              },
              {
                "name": "PROTO_FILE",
                "integer": 6
              }
            ]
          },
          {
            "name": "Rollout.RolloutStatus",
            "enum_fields": [
              {
                "name": "ROLLOUT_STATUS_UNSPECIFIED"
              },
              {
                "name": "IN_PROGRESS",
                "integer": 1
              },
              {
                "name": "SUCCESS",
                "integer": 2
              },
              {
                "name": "CANCELLED",
                "integer": 3
              },
              {
                "name": "FAILED",
                "integer": 4
              },
              {
                "name": "PENDING",
                "integer": 5
              },
              {
                "name": "FAILED_ROLLED_BACK",
                "integer": 6
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ManagedService",
            "fields": [
              {
                "id": 2,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "producer_project_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "OperationMetadata",
            "fields": [
              {
                "id": 1,
                "name": "resource_names",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "steps",
                "type": "Step",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "progress_percentage",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "messages": [
              {
                "name": "Step",
                "fields": [
                  {
                    "id": 2,
                    "name": "description",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "status",
                    "type": "Status"
                  }
                ]
              }
            ]
          },
          {
            "name": "Diagnostic",
            "fields": [
              {
                "id": 1,
                "name": "location",
                "type": "string"
              },
              {
                "id": 2,
                "name": "kind",
                "type": "Kind"
              },
              {
                "id": 3,
                "name": "message",
                "type": "string"
              }
            ]
          },
          {
            "name": "ConfigSource",
            "fields": [
              {
                "id": 5,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "files",
                "type": "ConfigFile",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ConfigFile",
            "fields": [
              {
                "id": 1,
                "name": "file_path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "file_contents",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "file_type",
                "type": "FileType"
              }
            ]
          },
          {
            "name": "ConfigRef",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ChangeReport",
            "fields": [
              {
                "id": 1,
                "name": "config_changes",
                "type": "google.api.ConfigChange",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Rollout",
            "fields": [
              {
                "id": 1,
                "name": "rollout_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "create_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "created_by",
                "type": "string"
              },
              {
                "id": 4,
                "name": "status",
                "type": "RolloutStatus"
              },
              {
                "id": 5,
                "name": "traffic_percent_strategy",
                "type": "TrafficPercentStrategy",
                "oneof_parent": "strategy"
              },
              {
                "id": 200,
                "name": "delete_service_strategy",
                "type": "DeleteServiceStrategy",
                "oneof_parent": "strategy"
              },
              {
                "id": 8,
                "name": "service_name",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "TrafficPercentStrategy",
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 1,
                      "name": "percentages",
                      "type": "double"
                    }
                  }
                ]
              },
              {
                "name": "DeleteServiceStrategy"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/api/config_change.proto"
          },
          {
            "path": "google/api/metric.proto"
          },
          {
            "path": "google/api/service.proto"
          },
          {
            "path": "google/longrunning/operations.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/field_mask.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/rpc/status.proto"
          }
        ],
        "package": {
          "name": "google.api.servicemanagement.v1"
        },
        "options": [
          {
            "name": "csharp_namespace",
            "value": "Google.Cloud.ServiceManagement.V1"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/servicemanagement/v1;servicemanagement"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ResourcesProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.servicemanagement.v1"
          },
          {
            "name": "objc_class_prefix",
            "value": "GASM"
          },
          {
            "name": "php_namespace",
            "value": "Google\\\\Cloud\\\\ServiceManagement\\\\V1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:servicemanagement:/:v1:/:servicemanager.proto",
      "def": {
        "enums": [
          {
            "name": "GetServiceConfigRequest.ConfigView",
            "enum_fields": [
              {
                "name": "BASIC"
              },
              {
                "name": "FULL",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ListServicesRequest",
            "fields": [
              {
                "id": 1,
                "name": "producer_project_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "page_size",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "page_token",
                "type": "string"
              },
              {
                "id": 7,
                "name": "consumer_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListServicesResponse",
            "fields": [
              {
                "id": 1,
                "name": "services",
                "type": "ManagedService",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "next_page_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetServiceRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "CreateServiceRequest",
            "fields": [
              {
                "id": 1,
                "name": "service",
                "type": "ManagedService"
              }
            ]
          },
          {
            "name": "DeleteServiceRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "UndeleteServiceRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "UndeleteServiceResponse",
            "fields": [
              {
                "id": 1,
                "name": "service",
                "type": "ManagedService"
              }
            ]
          },
          {
            "name": "GetServiceConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "config_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "view",
                "type": "ConfigView"
              }
            ]
          },
          {
            "name": "ListServiceConfigsRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "page_token",
                "type": "string"
              },
              {
                "id": 3,
                "name": "page_size",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListServiceConfigsResponse",
            "fields": [
              {
                "id": 1,
                "name": "service_configs",
                "type": "google.api.Service",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "next_page_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "CreateServiceConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "service_config",
                "type": "google.api.Service"
              }
            ]
          },
          {
            "name": "SubmitConfigSourceRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "config_source",
                "type": "ConfigSource"
              },
              {
                "id": 3,
                "name": "validate_only",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SubmitConfigSourceResponse",
            "fields": [
              {
                "id": 1,
                "name": "service_config",
                "type": "google.api.Service"
              }
            ]
          },
          {
            "name": "CreateServiceRolloutRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "rollout",
                "type": "Rollout"
              }
            ]
          },
          {
            "name": "ListServiceRolloutsRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "page_token",
                "type": "string"
              },
              {
                "id": 3,
                "name": "page_size",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "filter",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListServiceRolloutsResponse",
            "fields": [
              {
                "id": 1,
                "name": "rollouts",
                "type": "Rollout",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "next_page_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetServiceRolloutRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "rollout_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "EnableServiceRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "consumer_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DisableServiceRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "consumer_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GenerateConfigReportRequest",
            "fields": [
              {
                "id": 1,
                "name": "new_config",
                "type": "google.protobuf.Any"
              },
              {
                "id": 2,
                "name": "old_config",
                "type": "google.protobuf.Any"
              }
            ]
          },
          {
            "name": "GenerateConfigReportResponse",
            "fields": [
              {
                "id": 1,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "change_reports",
                "type": "ChangeReport",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "diagnostics",
                "type": "Diagnostic",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ServiceManager",
            "rpcs": [
              {
                "name": "ListServices",
                "in_type": "ListServicesRequest",
                "out_type": "ListServicesResponse",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "get",
                        "value": "/v1/services"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "GetService",
                "in_type": "GetServiceRequest",
                "out_type": "ManagedService",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "get",
                        "value": "/v1/services/{service_name}"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "CreateService",
                "in_type": "CreateServiceRequest",
                "out_type": "google.longrunning.Operation",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "post",
                        "value": "/v1/services"
                      },
                      {
                        "name": "body",
                        "value": "service"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "DeleteService",
                "in_type": "DeleteServiceRequest",
                "out_type": "google.longrunning.Operation",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "delete",
                        "value": "/v1/services/{service_name}"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "UndeleteService",
                "in_type": "UndeleteServiceRequest",
                "out_type": "google.longrunning.Operation",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "post",
                        "value": "/v1/services/{service_name}:undelete"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ListServiceConfigs",
                "in_type": "ListServiceConfigsRequest",
                "out_type": "ListServiceConfigsResponse",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "get",
                        "value": "/v1/services/{service_name}/configs"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "GetServiceConfig",
                "in_type": "GetServiceConfigRequest",
                "out_type": "google.api.Service",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "get",
                        "value": "/v1/services/{service_name}/configs/{config_id}"
                      },
                      {
                        "name": "additional_bindings",
                        "aggregated": [
                          {
                            "name": "get",
                            "value": "/v1/services/{service_name}/config"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "CreateServiceConfig",
                "in_type": "CreateServiceConfigRequest",
                "out_type": "google.api.Service",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "post",
                        "value": "/v1/services/{service_name}/configs"
                      },
                      {
                        "name": "body",
                        "value": "service_config"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "SubmitConfigSource",
                "in_type": "SubmitConfigSourceRequest",
                "out_type": "google.longrunning.Operation",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "post",
                        "value": "/v1/services/{service_name}/configs:submit"
                      },
                      {
                        "name": "body",
                        "value": "*"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ListServiceRollouts",
                "in_type": "ListServiceRolloutsRequest",
                "out_type": "ListServiceRolloutsResponse",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "get",
                        "value": "/v1/services/{service_name}/rollouts"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "GetServiceRollout",
                "in_type": "GetServiceRolloutRequest",
                "out_type": "Rollout",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "get",
                        "value": "/v1/services/{service_name}/rollouts/{rollout_id}"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "CreateServiceRollout",
                "in_type": "CreateServiceRolloutRequest",
                "out_type": "google.longrunning.Operation",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "post",
                        "value": "/v1/services/{service_name}/rollouts"
                      },
                      {
                        "name": "body",
                        "value": "rollout"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "GenerateConfigReport",
                "in_type": "GenerateConfigReportRequest",
                "out_type": "GenerateConfigReportResponse",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "post",
                        "value": "/v1/services:generateConfigReport"
                      },
                      {
                        "name": "body",
                        "value": "*"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "EnableService",
                "in_type": "EnableServiceRequest",
                "out_type": "google.longrunning.Operation",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "post",
                        "value": "/v1/services/{service_name}:enable"
                      },
                      {
                        "name": "body",
                        "value": "*"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "DisableService",
                "in_type": "DisableServiceRequest",
                "out_type": "google.longrunning.Operation",
                "options": [
                  {
                    "name": "(google.api.http)",
                    "aggregated": [
                      {
                        "name": "post",
                        "value": "/v1/services/{service_name}:disable"
                      },
                      {
                        "name": "body",
                        "value": "*"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/api/service.proto"
          },
          {
            "path": "google/api/servicemanagement/v1/resources.proto"
          },
          {
            "path": "google/longrunning/operations.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/field_mask.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          },
          {
            "path": "google/rpc/status.proto"
          }
        ],
        "package": {
          "name": "google.api.servicemanagement.v1"
        },
        "options": [
          {
            "name": "csharp_namespace",
            "value": "Google.Cloud.ServiceManagement.V1"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/servicemanagement/v1;servicemanagement"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ServiceManagerProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api.servicemanagement.v1"
          },
          {
            "name": "objc_class_prefix",
            "value": "GASM"
          },
          {
            "name": "php_namespace",
            "value": "Google\\\\Cloud\\\\ServiceManagement\\\\V1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:source_info.proto",
      "def": {
        "messages": [
          {
            "name": "SourceInfo",
            "fields": [
              {
                "id": 1,
                "name": "source_files",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "SourceInfoProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:system_parameter.proto",
      "def": {
        "messages": [
          {
            "name": "SystemParameters",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "SystemParameterRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SystemParameterRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parameters",
                "type": "SystemParameter",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SystemParameter",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "http_header",
                "type": "string"
              },
              {
                "id": 3,
                "name": "url_query_parameter",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "SystemParameterProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:api:/:usage.proto",
      "def": {
        "messages": [
          {
            "name": "Usage",
            "fields": [
              {
                "id": 1,
                "name": "requirements",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "rules",
                "type": "UsageRule",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "producer_notification_channel",
                "type": "string"
              }
            ]
          },
          {
            "name": "UsageRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "allow_unregistered_calls",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "skip_service_control",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "UsageProto"
          },
          {
            "name": "java_package",
            "value": "com.google.api"
          },
          {
            "name": "objc_class_prefix",
            "value": "GAPI"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:any.proto",
      "def": {
        "messages": [
          {
            "name": "Any",
            "fields": [
              {
                "id": 1,
                "name": "type_url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        },
        "options": [
          {
            "name": "csharp_namespace",
            "value": "Google.Protobuf.WellKnownTypes"
          },
          {
            "name": "go_package",
            "value": "github.com/golang/protobuf/ptypes/any"
          },
          {
            "name": "java_package",
            "value": "com.google.protobuf"
          },
          {
            "name": "java_outer_classname",
            "value": "AnyProto"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "objc_class_prefix",
            "value": "GPB"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:api.proto",
      "def": {
        "messages": [
          {
            "name": "Api",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "methods",
                "type": "Method",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 6,
                "name": "mixins",
                "type": "Mixin",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Method",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "request_type_url",
                "type": "string"
              },
              {
                "id": 3,
                "name": "request_streaming",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "response_type_url",
                "type": "string"
              },
              {
                "id": 5,
                "name": "response_streaming",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Mixin",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "root",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/source_context.proto"
          },
          {
            "path": "google/protobuf/type.proto"
          }
        ],
        "package": {
          "name": "google.protobuf"
        },
        "options": [
          {
            "name": "csharp_namespace",
            "value": "Google.Protobuf.WellKnownTypes"
          },
          {
            "name": "java_package",
            "value": "com.google.protobuf"
          },
          {
            "name": "java_outer_classname",
            "value": "ApiProto"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "objc_class_prefix",
            "value": "GPB"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/protobuf/api;api"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:compiler:/:plugin.proto",
      "def": {
        "messages": [
          {
            "name": "Version",
            "fields": [
              {
                "id": 1,
                "name": "major",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "minor",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "patch",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "suffix",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "CodeGeneratorRequest",
            "fields": [
              {
                "id": 1,
                "name": "file_to_generate",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "parameter",
                "type": "string",
                "optional": true
              },
              {
                "id": 15,
                "name": "proto_file",
                "type": "FileDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "compiler_version",
                "type": "Version",
                "optional": true
              }
            ]
          },
          {
            "name": "CodeGeneratorResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string",
                "optional": true
              },
              {
                "id": 15,
                "name": "file",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string",
                    "optional": true
                  },
                  {
                    "id": 2,
                    "name": "insertion_point",
                    "type": "string",
                    "optional": true
                  },
                  {
                    "id": 15,
                    "name": "content",
                    "type": "string",
                    "optional": true
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.protobuf.compiler"
        },
        "options": [
          {
            "name": "java_package",
            "value": "com.google.protobuf.compiler"
          },
          {
            "name": "java_outer_classname",
            "value": "PluginProtos"
          },
          {
            "name": "go_package",
            "value": "github.com/golang/protobuf/protoc-gen-go/plugin;plugin_go"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:descriptor.proto",
      "def": {
        "enums": [
          {
            "name": "FieldDescriptorProto.Type",
            "enum_fields": [
              {
                "name": "TYPE_DOUBLE",
                "integer": 1
              },
              {
                "name": "TYPE_FLOAT",
                "integer": 2
              },
              {
                "name": "TYPE_INT64",
                "integer": 3
              },
              {
                "name": "TYPE_UINT64",
                "integer": 4
              },
              {
                "name": "TYPE_INT32",
                "integer": 5
              },
              {
                "name": "TYPE_FIXED64",
                "integer": 6
              },
              {
                "name": "TYPE_FIXED32",
                "integer": 7
              },
              {
                "name": "TYPE_BOOL",
                "integer": 8
              },
              {
                "name": "TYPE_STRING",
                "integer": 9
              },
              {
                "name": "TYPE_GROUP",
                "integer": 10
              },
              {
                "name": "TYPE_MESSAGE",
                "integer": 11
              },
              {
                "name": "TYPE_BYTES",
                "integer": 12
              },
              {
                "name": "TYPE_UINT32",
                "integer": 13
              },
              {
                "name": "TYPE_ENUM",
                "integer": 14
              },
              {
                "name": "TYPE_SFIXED32",
                "integer": 15
              },
              {
                "name": "TYPE_SFIXED64",
                "integer": 16
              },
              {
                "name": "TYPE_SINT32",
                "integer": 17
              },
              {
                "name": "TYPE_SINT64",
                "integer": 18
              }
            ]
          },
          {
            "name": "FieldDescriptorProto.Label",
            "enum_fields": [
              {
                "name": "LABEL_OPTIONAL",
                "integer": 1
              },
              {
                "name": "LABEL_REQUIRED",
                "integer": 2
              },
              {
                "name": "LABEL_REPEATED",
                "integer": 3
              }
            ]
          },
          {
            "name": "FileOptions.OptimizeMode",
            "enum_fields": [
              {
                "name": "SPEED",
                "integer": 1
              },
              {
                "name": "CODE_SIZE",
                "integer": 2
              },
              {
                "name": "LITE_RUNTIME",
                "integer": 3
              }
            ]
          },
          {
            "name": "FieldOptions.CType",
            "enum_fields": [
              {
                "name": "STRING"
              },
              {
                "name": "CORD",
                "integer": 1
              },
              {
                "name": "STRING_PIECE",
                "integer": 2
              }
            ]
          },
          {
            "name": "FieldOptions.JSType",
            "enum_fields": [
              {
                "name": "JS_NORMAL"
              },
              {
                "name": "JS_STRING",
                "integer": 1
              },
              {
                "name": "JS_NUMBER",
                "integer": 2
              }
            ]
          },
          {
            "name": "MethodOptions.IdempotencyLevel",
            "enum_fields": [
              {
                "name": "IDEMPOTENCY_UNKNOWN"
              },
              {
                "name": "NO_SIDE_EFFECTS",
                "integer": 1
              },
              {
                "name": "IDEMPOTENT",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "FileDescriptorSet",
            "fields": [
              {
                "id": 1,
                "name": "file",
                "type": "FileDescriptorProto",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FileDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "package",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "dependency",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "public_dependency",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "weak_dependency",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "message_type",
                "type": "DescriptorProto",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "enum_type",
                "type": "EnumDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "service",
                "type": "ServiceDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "extension",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "options",
                "type": "FileOptions",
                "optional": true
              },
              {
                "id": 9,
                "name": "source_code_info",
                "type": "SourceCodeInfo",
                "optional": true
              },
              {
                "id": 12,
                "name": "syntax",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "DescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "field",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "extension",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "nested_type",
                "type": "DescriptorProto",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "enum_type",
                "type": "EnumDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "extension_range",
                "type": "ExtensionRange",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "oneof_decl",
                "type": "OneofDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "options",
                "type": "MessageOptions",
                "optional": true
              },
              {
                "id": 9,
                "name": "reserved_range",
                "type": "ReservedRange",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "reserved_name",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ExtensionRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32",
                    "optional": true
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32",
                    "optional": true
                  },
                  {
                    "id": 3,
                    "name": "options",
                    "type": "ExtensionRangeOptions",
                    "optional": true
                  }
                ]
              },
              {
                "name": "ReservedRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32",
                    "optional": true
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32",
                    "optional": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ExtensionRangeOptions",
            "fields": [
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FieldDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "number",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "label",
                "type": "Label",
                "optional": true
              },
              {
                "id": 5,
                "name": "type",
                "type": "Type",
                "optional": true
              },
              {
                "id": 6,
                "name": "type_name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "extendee",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "default_value",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "oneof_index",
                "type": "int32",
                "optional": true
              },
              {
                "id": 10,
                "name": "json_name",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "options",
                "type": "FieldOptions",
                "optional": true
              }
            ]
          },
          {
            "name": "OneofDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "options",
                "type": "OneofOptions",
                "optional": true
              }
            ]
          },
          {
            "name": "EnumDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "value",
                "type": "EnumValueDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "EnumOptions",
                "optional": true
              },
              {
                "id": 4,
                "name": "reserved_range",
                "type": "EnumReservedRange",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "reserved_name",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EnumReservedRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32",
                    "optional": true
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32",
                    "optional": true
                  }
                ]
              }
            ]
          },
          {
            "name": "EnumValueDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "number",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "EnumValueOptions",
                "optional": true
              }
            ]
          },
          {
            "name": "ServiceDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "method",
                "type": "MethodDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "ServiceOptions",
                "optional": true
              }
            ]
          },
          {
            "name": "MethodDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "input_type",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "output_type",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "options",
                "type": "MethodOptions",
                "optional": true
              },
              {
                "id": 5,
                "name": "client_streaming",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 6,
                "name": "server_streaming",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              }
            ]
          },
          {
            "name": "FileOptions",
            "fields": [
              {
                "id": 1,
                "name": "java_package",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "java_outer_classname",
                "type": "string",
                "optional": true
              },
              {
                "id": 10,
                "name": "java_multiple_files",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 20,
                "name": "java_generate_equals_and_hash",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 27,
                "name": "java_string_check_utf8",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 9,
                "name": "optimize_for",
                "type": "OptimizeMode",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "SPEED"
                  }
                ]
              },
              {
                "id": 11,
                "name": "go_package",
                "type": "string",
                "optional": true
              },
              {
                "id": 16,
                "name": "cc_generic_services",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 17,
                "name": "java_generic_services",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 18,
                "name": "py_generic_services",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 42,
                "name": "php_generic_services",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 23,
                "name": "deprecated",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 31,
                "name": "cc_enable_arenas",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 36,
                "name": "objc_class_prefix",
                "type": "string",
                "optional": true
              },
              {
                "id": 37,
                "name": "csharp_namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 39,
                "name": "swift_prefix",
                "type": "string",
                "optional": true
              },
              {
                "id": 40,
                "name": "php_class_prefix",
                "type": "string",
                "optional": true
              },
              {
                "id": 41,
                "name": "php_namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 44,
                "name": "php_metadata_namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 45,
                "name": "ruby_package",
                "type": "string",
                "optional": true
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              38
            ]
          },
          {
            "name": "MessageOptions",
            "fields": [
              {
                "id": 1,
                "name": "message_set_wire_format",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 2,
                "name": "no_standard_descriptor_accessor",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 7,
                "name": "map_entry",
                "type": "bool",
                "optional": true
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              8,
              9
            ]
          },
          {
            "name": "FieldOptions",
            "fields": [
              {
                "id": 1,
                "name": "ctype",
                "type": "CType",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "STRING"
                  }
                ]
              },
              {
                "id": 2,
                "name": "packed",
                "type": "bool",
                "optional": true
              },
              {
                "id": 6,
                "name": "jstype",
                "type": "JSType",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "JS_NORMAL"
                  }
                ]
              },
              {
                "id": 5,
                "name": "lazy",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 10,
                "name": "weak",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "OneofOptions",
            "fields": [
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnumOptions",
            "fields": [
              {
                "id": 2,
                "name": "allow_alias",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "EnumValueOptions",
            "fields": [
              {
                "id": 1,
                "name": "deprecated",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceOptions",
            "fields": [
              {
                "id": 33,
                "name": "deprecated",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MethodOptions",
            "fields": [
              {
                "id": 33,
                "name": "deprecated",
                "type": "bool",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 34,
                "name": "idempotency_level",
                "type": "IdempotencyLevel",
                "optional": true,
                "options": [
                  {
                    "name": "default",
                    "value": "IDEMPOTENCY_UNKNOWN"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UninterpretedOption",
            "fields": [
              {
                "id": 2,
                "name": "name",
                "type": "NamePart",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "identifier_value",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "positive_int_value",
                "type": "uint64",
                "optional": true
              },
              {
                "id": 5,
                "name": "negative_int_value",
                "type": "int64",
                "optional": true
              },
              {
                "id": 6,
                "name": "double_value",
                "type": "double",
                "optional": true
              },
              {
                "id": 7,
                "name": "string_value",
                "type": "bytes",
                "optional": true
              },
              {
                "id": 8,
                "name": "aggregate_value",
                "type": "string",
                "optional": true
              }
            ],
            "messages": [
              {
                "name": "NamePart",
                "fields": [
                  {
                    "id": 1,
                    "name": "name_part",
                    "type": "string",
                    "required": true
                  },
                  {
                    "id": 2,
                    "name": "is_extension",
                    "type": "bool",
                    "required": true
                  }
                ]
              }
            ]
          },
          {
            "name": "SourceCodeInfo",
            "fields": [
              {
                "id": 1,
                "name": "location",
                "type": "Location",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Location",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "span",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 3,
                    "name": "leading_comments",
                    "type": "string",
                    "optional": true
                  },
                  {
                    "id": 4,
                    "name": "trailing_comments",
                    "type": "string",
                    "optional": true
                  },
                  {
                    "id": 6,
                    "name": "leading_detached_comments",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "GeneratedCodeInfo",
            "fields": [
              {
                "id": 1,
                "name": "annotation",
                "type": "Annotation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Annotation",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "source_file",
                    "type": "string",
                    "optional": true
                  },
                  {
                    "id": 3,
                    "name": "begin",
                    "type": "int32",
                    "optional": true
                  },
                  {
                    "id": 4,
                    "name": "end",
                    "type": "int32",
                    "optional": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        },
        "options": [
          {
            "name": "go_package",
            "value": "github.com/golang/protobuf/protoc-gen-go/descriptor;descriptor"
          },
          {
            "name": "java_package",
            "value": "com.google.protobuf"
          },
          {
            "name": "java_outer_classname",
            "value": "DescriptorProtos"
          },
          {
            "name": "csharp_namespace",
            "value": "Google.Protobuf.Reflection"
          },
          {
            "name": "objc_class_prefix",
            "value": "GPB"
          },
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "optimize_for",
            "value": "SPEED"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:duration.proto",
      "def": {
        "messages": [
          {
            "name": "Duration",
            "fields": [
              {
                "id": 1,
                "name": "seconds",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        },
        "options": [
          {
            "name": "csharp_namespace",
            "value": "Google.Protobuf.WellKnownTypes"
          },
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "github.com/golang/protobuf/ptypes/duration"
          },
          {
            "name": "java_package",
            "value": "com.google.protobuf"
          },
          {
            "name": "java_outer_classname",
            "value": "DurationProto"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "objc_class_prefix",
            "value": "GPB"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:empty.proto",
      "def": {
        "messages": [
          {
            "name": "Empty"
          }
        ],
        "package": {
          "name": "google.protobuf"
        },
        "options": [
          {
            "name": "csharp_namespace",
            "value": "Google.Protobuf.WellKnownTypes"
          },
          {
            "name": "go_package",
            "value": "github.com/golang/protobuf/ptypes/empty"
          },
          {
            "name": "java_package",
            "value": "com.google.protobuf"
          },
          {
            "name": "java_outer_classname",
            "value": "EmptyProto"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "objc_class_prefix",
            "value": "GPB"
          },
          {
            "name": "cc_enable_arenas",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:field_mask.proto",
      "def": {
        "messages": [
          {
            "name": "FieldMask",
            "fields": [
              {
                "id": 1,
                "name": "paths",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        },
        "options": [
          {
            "name": "csharp_namespace",
            "value": "Google.Protobuf.WellKnownTypes"
          },
          {
            "name": "java_package",
            "value": "com.google.protobuf"
          },
          {
            "name": "java_outer_classname",
            "value": "FieldMaskProto"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "objc_class_prefix",
            "value": "GPB"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/protobuf/field_mask;field_mask"
          },
          {
            "name": "cc_enable_arenas",
            "value": "true"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:source_context.proto",
      "def": {
        "messages": [
          {
            "name": "SourceContext",
            "fields": [
              {
                "id": 1,
                "name": "file_name",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        },
        "options": [
          {
            "name": "csharp_namespace",
            "value": "Google.Protobuf.WellKnownTypes"
          },
          {
            "name": "java_package",
            "value": "com.google.protobuf"
          },
          {
            "name": "java_outer_classname",
            "value": "SourceContextProto"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "objc_class_prefix",
            "value": "GPB"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/protobuf/source_context;source_context"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:struct.proto",
      "def": {
        "enums": [
          {
            "name": "NullValue",
            "enum_fields": [
              {
                "name": "NULL_VALUE"
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Struct",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "fields",
                  "type": "Value"
                }
              }
            ]
          },
          {
            "name": "Value",
            "fields": [
              {
                "id": 1,
                "name": "null_value",
                "type": "NullValue",
                "oneof_parent": "kind"
              },
              {
                "id": 2,
                "name": "number_value",
                "type": "double",
                "oneof_parent": "kind"
              },
              {
                "id": 3,
                "name": "string_value",
                "type": "string",
                "oneof_parent": "kind"
              },
              {
                "id": 4,
                "name": "bool_value",
                "type": "bool",
                "oneof_parent": "kind"
              },
              {
                "id": 5,
                "name": "struct_value",
                "type": "Struct",
                "oneof_parent": "kind"
              },
              {
                "id": 6,
                "name": "list_value",
                "type": "ListValue",
                "oneof_parent": "kind"
              }
            ]
          },
          {
            "name": "ListValue",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "Value",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        },
        "options": [
          {
            "name": "csharp_namespace",
            "value": "Google.Protobuf.WellKnownTypes"
          },
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "github.com/golang/protobuf/ptypes/struct;structpb"
          },
          {
            "name": "java_package",
            "value": "com.google.protobuf"
          },
          {
            "name": "java_outer_classname",
            "value": "StructProto"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "objc_class_prefix",
            "value": "GPB"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:timestamp.proto",
      "def": {
        "messages": [
          {
            "name": "Timestamp",
            "fields": [
              {
                "id": 1,
                "name": "seconds",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        },
        "options": [
          {
            "name": "csharp_namespace",
            "value": "Google.Protobuf.WellKnownTypes"
          },
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "github.com/golang/protobuf/ptypes/timestamp"
          },
          {
            "name": "java_package",
            "value": "com.google.protobuf"
          },
          {
            "name": "java_outer_classname",
            "value": "TimestampProto"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "objc_class_prefix",
            "value": "GPB"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:type.proto",
      "def": {
        "enums": [
          {
            "name": "Field.Kind",
            "enum_fields": [
              {
                "name": "TYPE_UNKNOWN"
              },
              {
                "name": "TYPE_DOUBLE",
                "integer": 1
              },
              {
                "name": "TYPE_FLOAT",
                "integer": 2
              },
              {
                "name": "TYPE_INT64",
                "integer": 3
              },
              {
                "name": "TYPE_UINT64",
                "integer": 4
              },
              {
                "name": "TYPE_INT32",
                "integer": 5
              },
              {
                "name": "TYPE_FIXED64",
                "integer": 6
              },
              {
                "name": "TYPE_FIXED32",
                "integer": 7
              },
              {
                "name": "TYPE_BOOL",
                "integer": 8
              },
              {
                "name": "TYPE_STRING",
                "integer": 9
              },
              {
                "name": "TYPE_GROUP",
                "integer": 10
              },
              {
                "name": "TYPE_MESSAGE",
                "integer": 11
              },
              {
                "name": "TYPE_BYTES",
                "integer": 12
              },
              {
                "name": "TYPE_UINT32",
                "integer": 13
              },
              {
                "name": "TYPE_ENUM",
                "integer": 14
              },
              {
                "name": "TYPE_SFIXED32",
                "integer": 15
              },
              {
                "name": "TYPE_SFIXED64",
                "integer": 16
              },
              {
                "name": "TYPE_SINT32",
                "integer": 17
              },
              {
                "name": "TYPE_SINT64",
                "integer": 18
              }
            ]
          },
          {
            "name": "Field.Cardinality",
            "enum_fields": [
              {
                "name": "CARDINALITY_UNKNOWN"
              },
              {
                "name": "CARDINALITY_OPTIONAL",
                "integer": 1
              },
              {
                "name": "CARDINALITY_REQUIRED",
                "integer": 2
              },
              {
                "name": "CARDINALITY_REPEATED",
                "integer": 3
              }
            ]
          },
          {
            "name": "Syntax",
            "enum_fields": [
              {
                "name": "SYNTAX_PROTO2"
              },
              {
                "name": "SYNTAX_PROTO3",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Type",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "fields",
                "type": "Field",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "oneofs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 6,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Field",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "Kind"
              },
              {
                "id": 2,
                "name": "cardinality",
                "type": "Cardinality"
              },
              {
                "id": 3,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "type_url",
                "type": "string"
              },
              {
                "id": 7,
                "name": "oneof_index",
                "type": "int32"
              },
              {
                "id": 8,
                "name": "packed",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "json_name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "default_value",
                "type": "string"
              }
            ]
          },
          {
            "name": "Enum",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "enumvalue",
                "type": "EnumValue",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 5,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "EnumValue",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Option",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "Any"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/source_context.proto"
          }
        ],
        "package": {
          "name": "google.protobuf"
        },
        "options": [
          {
            "name": "csharp_namespace",
            "value": "Google.Protobuf.WellKnownTypes"
          },
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "com.google.protobuf"
          },
          {
            "name": "java_outer_classname",
            "value": "TypeProto"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "objc_class_prefix",
            "value": "GPB"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/protobuf/ptype;ptype"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:util:/:json_format.proto",
      "def": {
        "enums": [
          {
            "name": "TestNumbers.MyType",
            "enum_fields": [
              {
                "name": "OK"
              },
              {
                "name": "WARNING",
                "integer": 1
              },
              {
                "name": "ERROR",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TestFlagsAndStrings",
            "fields": [
              {
                "id": 1,
                "name": "A",
                "type": "int32",
                "required": true
              }
            ]
          },
          {
            "name": "TestBase64ByteArrays",
            "fields": [
              {
                "id": 1,
                "name": "a",
                "type": "bytes",
                "required": true
              }
            ]
          },
          {
            "name": "TestJavaScriptJSON",
            "fields": [
              {
                "id": 1,
                "name": "a",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "final",
                "type": "float",
                "optional": true
              },
              {
                "id": 3,
                "name": "in",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "Var",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "TestJavaScriptOrderJSON1",
            "fields": [
              {
                "id": 1,
                "name": "d",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "c",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "x",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "b",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "a",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "TestJavaScriptOrderJSON2",
            "fields": [
              {
                "id": 1,
                "name": "d",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "c",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "x",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "b",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "a",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "z",
                "type": "TestJavaScriptOrderJSON1",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TestLargeInt",
            "fields": [
              {
                "id": 1,
                "name": "a",
                "type": "int64",
                "required": true
              },
              {
                "id": 2,
                "name": "b",
                "type": "uint64",
                "required": true
              }
            ]
          },
          {
            "name": "TestNumbers",
            "fields": [
              {
                "id": 1,
                "name": "a",
                "type": "MyType",
                "optional": true
              },
              {
                "id": 2,
                "name": "b",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "c",
                "type": "float",
                "optional": true
              },
              {
                "id": 4,
                "name": "d",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "e",
                "type": "double",
                "optional": true
              },
              {
                "id": 6,
                "name": "f",
                "type": "uint32",
                "optional": true
              }
            ]
          },
          {
            "name": "TestCamelCase",
            "fields": [
              {
                "id": 1,
                "name": "normal_field",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "CAPITAL_FIELD",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "CamelCaseField",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "TestBoolMap",
            "maps": [
              {
                "key_type": "bool",
                "field": {
                  "id": 1,
                  "name": "bool_map",
                  "type": "int32"
                }
              }
            ]
          },
          {
            "name": "TestRecursion",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "child",
                "type": "TestRecursion",
                "optional": true
              }
            ]
          },
          {
            "name": "TestStringMap",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "string_map",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "TestStringSerializer",
            "fields": [
              {
                "id": 1,
                "name": "scalar_string",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "repeated_string",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "string_map",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "TestMessageWithExtension"
          },
          {
            "name": "TestExtension",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string",
                "optional": true
              }
            ],
            "messages": [
              {
                "name": "TestMessageWithExtension",
                "fields": [
                  {
                    "id": 100,
                    "name": "ext",
                    "type": "TestExtension",
                    "optional": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "protobuf_unittest"
        }
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:util:/:json_format_proto3.proto",
      "def": {
        "enums": [
          {
            "name": "EnumType",
            "enum_fields": [
              {
                "name": "FOO"
              },
              {
                "name": "BAR",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "MessageType",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "int32"
              }
            ]
          },
          {
            "name": "TestMessage",
            "fields": [
              {
                "id": 1,
                "name": "bool_value",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "int32_value",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "int64_value",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "uint32_value",
                "type": "uint32"
              },
              {
                "id": 5,
                "name": "uint64_value",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "float_value",
                "type": "float"
              },
              {
                "id": 7,
                "name": "double_value",
                "type": "double"
              },
              {
                "id": 8,
                "name": "string_value",
                "type": "string"
              },
              {
                "id": 9,
                "name": "bytes_value",
                "type": "bytes"
              },
              {
                "id": 10,
                "name": "enum_value",
                "type": "EnumType"
              },
              {
                "id": 11,
                "name": "message_value",
                "type": "MessageType"
              },
              {
                "id": 21,
                "name": "repeated_bool_value",
                "type": "bool",
                "is_repeated": true
              },
              {
                "id": 22,
                "name": "repeated_int32_value",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 23,
                "name": "repeated_int64_value",
                "type": "int64",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "repeated_uint32_value",
                "type": "uint32",
                "is_repeated": true
              },
              {
                "id": 25,
                "name": "repeated_uint64_value",
                "type": "uint64",
                "is_repeated": true
              },
              {
                "id": 26,
                "name": "repeated_float_value",
                "type": "float",
                "is_repeated": true
              },
              {
                "id": 27,
                "name": "repeated_double_value",
                "type": "double",
                "is_repeated": true
              },
              {
                "id": 28,
                "name": "repeated_string_value",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 29,
                "name": "repeated_bytes_value",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 30,
                "name": "repeated_enum_value",
                "type": "EnumType",
                "is_repeated": true
              },
              {
                "id": 31,
                "name": "repeated_message_value",
                "type": "MessageType",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TestOneof",
            "fields": [
              {
                "id": 1,
                "name": "oneof_int32_value",
                "type": "int32",
                "oneof_parent": "oneof_value"
              },
              {
                "id": 2,
                "name": "oneof_string_value",
                "type": "string",
                "oneof_parent": "oneof_value"
              },
              {
                "id": 3,
                "name": "oneof_bytes_value",
                "type": "bytes",
                "oneof_parent": "oneof_value"
              },
              {
                "id": 4,
                "name": "oneof_enum_value",
                "type": "EnumType",
                "oneof_parent": "oneof_value"
              },
              {
                "id": 5,
                "name": "oneof_message_value",
                "type": "MessageType",
                "oneof_parent": "oneof_value"
              }
            ]
          },
          {
            "name": "TestMap",
            "maps": [
              {
                "key_type": "bool",
                "field": {
                  "id": 1,
                  "name": "bool_map",
                  "type": "int32"
                }
              },
              {
                "key_type": "int32",
                "field": {
                  "id": 2,
                  "name": "int32_map",
                  "type": "int32"
                }
              },
              {
                "key_type": "int64",
                "field": {
                  "id": 3,
                  "name": "int64_map",
                  "type": "int32"
                }
              },
              {
                "key_type": "uint32",
                "field": {
                  "id": 4,
                  "name": "uint32_map",
                  "type": "int32"
                }
              },
              {
                "key_type": "uint64",
                "field": {
                  "id": 5,
                  "name": "uint64_map",
                  "type": "int32"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "string_map",
                  "type": "int32"
                }
              }
            ]
          },
          {
            "name": "TestNestedMap",
            "maps": [
              {
                "key_type": "bool",
                "field": {
                  "id": 1,
                  "name": "bool_map",
                  "type": "int32"
                }
              },
              {
                "key_type": "int32",
                "field": {
                  "id": 2,
                  "name": "int32_map",
                  "type": "int32"
                }
              },
              {
                "key_type": "int64",
                "field": {
                  "id": 3,
                  "name": "int64_map",
                  "type": "int32"
                }
              },
              {
                "key_type": "uint32",
                "field": {
                  "id": 4,
                  "name": "uint32_map",
                  "type": "int32"
                }
              },
              {
                "key_type": "uint64",
                "field": {
                  "id": 5,
                  "name": "uint64_map",
                  "type": "int32"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "string_map",
                  "type": "int32"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "map_map",
                  "type": "TestNestedMap"
                }
              }
            ]
          },
          {
            "name": "TestStringMap",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "string_map",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "TestWrapper",
            "fields": [
              {
                "id": 1,
                "name": "bool_value",
                "type": "google.protobuf.BoolValue"
              },
              {
                "id": 2,
                "name": "int32_value",
                "type": "google.protobuf.Int32Value"
              },
              {
                "id": 3,
                "name": "int64_value",
                "type": "google.protobuf.Int64Value"
              },
              {
                "id": 4,
                "name": "uint32_value",
                "type": "google.protobuf.UInt32Value"
              },
              {
                "id": 5,
                "name": "uint64_value",
                "type": "google.protobuf.UInt64Value"
              },
              {
                "id": 6,
                "name": "float_value",
                "type": "google.protobuf.FloatValue"
              },
              {
                "id": 7,
                "name": "double_value",
                "type": "google.protobuf.DoubleValue"
              },
              {
                "id": 8,
                "name": "string_value",
                "type": "google.protobuf.StringValue"
              },
              {
                "id": 9,
                "name": "bytes_value",
                "type": "google.protobuf.BytesValue"
              },
              {
                "id": 11,
                "name": "repeated_bool_value",
                "type": "google.protobuf.BoolValue",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "repeated_int32_value",
                "type": "google.protobuf.Int32Value",
                "is_repeated": true
              },
              {
                "id": 13,
                "name": "repeated_int64_value",
                "type": "google.protobuf.Int64Value",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "repeated_uint32_value",
                "type": "google.protobuf.UInt32Value",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "repeated_uint64_value",
                "type": "google.protobuf.UInt64Value",
                "is_repeated": true
              },
              {
                "id": 16,
                "name": "repeated_float_value",
                "type": "google.protobuf.FloatValue",
                "is_repeated": true
              },
              {
                "id": 17,
                "name": "repeated_double_value",
                "type": "google.protobuf.DoubleValue",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "repeated_string_value",
                "type": "google.protobuf.StringValue",
                "is_repeated": true
              },
              {
                "id": 19,
                "name": "repeated_bytes_value",
                "type": "google.protobuf.BytesValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TestTimestamp",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "repeated_value",
                "type": "google.protobuf.Timestamp",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TestDuration",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 2,
                "name": "repeated_value",
                "type": "google.protobuf.Duration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TestFieldMask",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "google.protobuf.FieldMask"
              }
            ]
          },
          {
            "name": "TestStruct",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 2,
                "name": "repeated_value",
                "type": "google.protobuf.Struct",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TestAny",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "google.protobuf.Any"
              },
              {
                "id": 2,
                "name": "repeated_value",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TestValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "google.protobuf.Value"
              },
              {
                "id": 2,
                "name": "repeated_value",
                "type": "google.protobuf.Value",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TestListValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "google.protobuf.ListValue"
              },
              {
                "id": 2,
                "name": "repeated_value",
                "type": "google.protobuf.ListValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TestBoolValue",
            "fields": [
              {
                "id": 1,
                "name": "bool_value",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "bool",
                "field": {
                  "id": 2,
                  "name": "bool_map",
                  "type": "int32"
                }
              }
            ]
          },
          {
            "name": "TestCustomJsonName",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "int32",
                "options": [
                  {
                    "name": "json_name",
                    "value": "@value"
                  }
                ]
              }
            ]
          },
          {
            "name": "TestExtensions",
            "fields": [
              {
                "id": 1,
                "name": "extensions",
                "type": ".protobuf_unittest.TestAllExtensions"
              }
            ]
          },
          {
            "name": "TestEnumValue",
            "fields": [
              {
                "id": 1,
                "name": "enum_value1",
                "type": "EnumType"
              },
              {
                "id": 2,
                "name": "enum_value2",
                "type": "EnumType"
              },
              {
                "id": 3,
                "name": "enum_value3",
                "type": "EnumType"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/field_mask.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "google/protobuf/unittest.proto"
          }
        ],
        "package": {
          "name": "proto3"
        },
        "options": [
          {
            "name": "java_package",
            "value": "com.google.protobuf.util"
          },
          {
            "name": "java_outer_classname",
            "value": "JsonFormatProto3"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:protobuf:/:wrappers.proto",
      "def": {
        "messages": [
          {
            "name": "DoubleValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "double"
              }
            ]
          },
          {
            "name": "FloatValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "float"
              }
            ]
          },
          {
            "name": "Int64Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "int64"
              }
            ]
          },
          {
            "name": "UInt64Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Int32Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "int32"
              }
            ]
          },
          {
            "name": "UInt32Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "BoolValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "bool"
              }
            ]
          },
          {
            "name": "StringValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "BytesValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        },
        "options": [
          {
            "name": "csharp_namespace",
            "value": "Google.Protobuf.WellKnownTypes"
          },
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "github.com/golang/protobuf/ptypes/wrappers"
          },
          {
            "name": "java_package",
            "value": "com.google.protobuf"
          },
          {
            "name": "java_outer_classname",
            "value": "WrappersProto"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "objc_class_prefix",
            "value": "GPB"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:rpc:/:code.proto",
      "def": {
        "enums": [
          {
            "name": "Code",
            "enum_fields": [
              {
                "name": "OK"
              },
              {
                "name": "CANCELLED",
                "integer": 1
              },
              {
                "name": "UNKNOWN",
                "integer": 2
              },
              {
                "name": "INVALID_ARGUMENT",
                "integer": 3
              },
              {
                "name": "DEADLINE_EXCEEDED",
                "integer": 4
              },
              {
                "name": "NOT_FOUND",
                "integer": 5
              },
              {
                "name": "ALREADY_EXISTS",
                "integer": 6
              },
              {
                "name": "PERMISSION_DENIED",
                "integer": 7
              },
              {
                "name": "UNAUTHENTICATED",
                "integer": 16
              },
              {
                "name": "RESOURCE_EXHAUSTED",
                "integer": 8
              },
              {
                "name": "FAILED_PRECONDITION",
                "integer": 9
              },
              {
                "name": "ABORTED",
                "integer": 10
              },
              {
                "name": "OUT_OF_RANGE",
                "integer": 11
              },
              {
                "name": "UNIMPLEMENTED",
                "integer": 12
              },
              {
                "name": "INTERNAL",
                "integer": 13
              },
              {
                "name": "UNAVAILABLE",
                "integer": 14
              },
              {
                "name": "DATA_LOSS",
                "integer": 15
              }
            ]
          }
        ],
        "package": {
          "name": "google.rpc"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/rpc/code;code"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "CodeProto"
          },
          {
            "name": "java_package",
            "value": "com.google.rpc"
          },
          {
            "name": "objc_class_prefix",
            "value": "RPC"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:rpc:/:error_details.proto",
      "def": {
        "messages": [
          {
            "name": "RetryInfo",
            "fields": [
              {
                "id": 1,
                "name": "retry_delay",
                "type": "google.protobuf.Duration"
              }
            ]
          },
          {
            "name": "DebugInfo",
            "fields": [
              {
                "id": 1,
                "name": "stack_entries",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "detail",
                "type": "string"
              }
            ]
          },
          {
            "name": "QuotaFailure",
            "fields": [
              {
                "id": 1,
                "name": "violations",
                "type": "Violation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Violation",
                "fields": [
                  {
                    "id": 1,
                    "name": "subject",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "description",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "PreconditionFailure",
            "fields": [
              {
                "id": 1,
                "name": "violations",
                "type": "Violation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Violation",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "subject",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "description",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "BadRequest",
            "fields": [
              {
                "id": 1,
                "name": "field_violations",
                "type": "FieldViolation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "FieldViolation",
                "fields": [
                  {
                    "id": 1,
                    "name": "field",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "description",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "RequestInfo",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "serving_data",
                "type": "string"
              }
            ]
          },
          {
            "name": "ResourceInfo",
            "fields": [
              {
                "id": 1,
                "name": "resource_type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "resource_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "owner",
                "type": "string"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              }
            ]
          },
          {
            "name": "Help",
            "fields": [
              {
                "id": 1,
                "name": "links",
                "type": "Link",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Link",
                "fields": [
                  {
                    "id": 1,
                    "name": "description",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "url",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "LocalizedMessage",
            "fields": [
              {
                "id": 1,
                "name": "locale",
                "type": "string"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "google.rpc"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/rpc/errdetails;errdetails"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ErrorDetailsProto"
          },
          {
            "name": "java_package",
            "value": "com.google.rpc"
          },
          {
            "name": "objc_class_prefix",
            "value": "RPC"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:rpc:/:status.proto",
      "def": {
        "messages": [
          {
            "name": "Status",
            "fields": [
              {
                "id": 1,
                "name": "code",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              },
              {
                "id": 3,
                "name": "details",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "google.rpc"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/rpc/status;status"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "StatusProto"
          },
          {
            "name": "java_package",
            "value": "com.google.rpc"
          },
          {
            "name": "objc_class_prefix",
            "value": "RPC"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:type:/:calendar_period.proto",
      "def": {
        "enums": [
          {
            "name": "CalendarPeriod",
            "enum_fields": [
              {
                "name": "CALENDAR_PERIOD_UNSPECIFIED"
              },
              {
                "name": "DAY",
                "integer": 1
              },
              {
                "name": "WEEK",
                "integer": 2
              },
              {
                "name": "FORTNIGHT",
                "integer": 3
              },
              {
                "name": "MONTH",
                "integer": 4
              },
              {
                "name": "QUARTER",
                "integer": 5
              },
              {
                "name": "HALF",
                "integer": 6
              },
              {
                "name": "YEAR",
                "integer": 7
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/type/calendarperiod;calendarperiod"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "CalendarPeriodProto"
          },
          {
            "name": "java_package",
            "value": "com.google.type"
          },
          {
            "name": "objc_class_prefix",
            "value": "GTP"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:type:/:color.proto",
      "def": {
        "messages": [
          {
            "name": "Color",
            "fields": [
              {
                "id": 1,
                "name": "red",
                "type": "float"
              },
              {
                "id": 2,
                "name": "green",
                "type": "float"
              },
              {
                "id": 3,
                "name": "blue",
                "type": "float"
              },
              {
                "id": 4,
                "name": "alpha",
                "type": "google.protobuf.FloatValue"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "google.type"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/type/color;color"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ColorProto"
          },
          {
            "name": "java_package",
            "value": "com.google.type"
          },
          {
            "name": "objc_class_prefix",
            "value": "GTP"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:type:/:date.proto",
      "def": {
        "messages": [
          {
            "name": "Date",
            "fields": [
              {
                "id": 1,
                "name": "year",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "month",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "day",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/type/date;date"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "DateProto"
          },
          {
            "name": "java_package",
            "value": "com.google.type"
          },
          {
            "name": "objc_class_prefix",
            "value": "GTP"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:type:/:dayofweek.proto",
      "def": {
        "enums": [
          {
            "name": "DayOfWeek",
            "enum_fields": [
              {
                "name": "DAY_OF_WEEK_UNSPECIFIED"
              },
              {
                "name": "MONDAY",
                "integer": 1
              },
              {
                "name": "TUESDAY",
                "integer": 2
              },
              {
                "name": "WEDNESDAY",
                "integer": 3
              },
              {
                "name": "THURSDAY",
                "integer": 4
              },
              {
                "name": "FRIDAY",
                "integer": 5
              },
              {
                "name": "SATURDAY",
                "integer": 6
              },
              {
                "name": "SUNDAY",
                "integer": 7
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/type/dayofweek;dayofweek"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "DayOfWeekProto"
          },
          {
            "name": "java_package",
            "value": "com.google.type"
          },
          {
            "name": "objc_class_prefix",
            "value": "GTP"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:type:/:expr.proto",
      "def": {
        "messages": [
          {
            "name": "Expr",
            "fields": [
              {
                "id": 1,
                "name": "expression",
                "type": "string"
              },
              {
                "id": 2,
                "name": "title",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "location",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/type/expr;expr"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "ExprProto"
          },
          {
            "name": "java_package",
            "value": "com.google.type"
          },
          {
            "name": "objc_class_prefix",
            "value": "GTP"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:type:/:fraction.proto",
      "def": {
        "messages": [
          {
            "name": "Fraction",
            "fields": [
              {
                "id": 1,
                "name": "numerator",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "denominator",
                "type": "int64"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/type/fraction;fraction"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "FractionProto"
          },
          {
            "name": "java_package",
            "value": "com.google.type"
          },
          {
            "name": "objc_class_prefix",
            "value": "GTP"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:type:/:latlng.proto",
      "def": {
        "messages": [
          {
            "name": "LatLng",
            "fields": [
              {
                "id": 1,
                "name": "latitude",
                "type": "double"
              },
              {
                "id": 2,
                "name": "longitude",
                "type": "double"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/type/latlng;latlng"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "LatLngProto"
          },
          {
            "name": "java_package",
            "value": "com.google.type"
          },
          {
            "name": "objc_class_prefix",
            "value": "GTP"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:type:/:money.proto",
      "def": {
        "messages": [
          {
            "name": "Money",
            "fields": [
              {
                "id": 1,
                "name": "currency_code",
                "type": "string"
              },
              {
                "id": 2,
                "name": "units",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/type/money;money"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "MoneyProto"
          },
          {
            "name": "java_package",
            "value": "com.google.type"
          },
          {
            "name": "objc_class_prefix",
            "value": "GTP"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:type:/:postal_address.proto",
      "def": {
        "messages": [
          {
            "name": "PostalAddress",
            "fields": [
              {
                "id": 1,
                "name": "revision",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "region_code",
                "type": "string"
              },
              {
                "id": 3,
                "name": "language_code",
                "type": "string"
              },
              {
                "id": 4,
                "name": "postal_code",
                "type": "string"
              },
              {
                "id": 5,
                "name": "sorting_code",
                "type": "string"
              },
              {
                "id": 6,
                "name": "administrative_area",
                "type": "string"
              },
              {
                "id": 7,
                "name": "locality",
                "type": "string"
              },
              {
                "id": 8,
                "name": "sublocality",
                "type": "string"
              },
              {
                "id": 9,
                "name": "address_lines",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "recipients",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "organization",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        },
        "options": [
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/type/postaladdress;postaladdress"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "PostalAddressProto"
          },
          {
            "name": "java_package",
            "value": "com.google.type"
          },
          {
            "name": "objc_class_prefix",
            "value": "GTP"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:type:/:quaternion.proto",
      "def": {
        "messages": [
          {
            "name": "Quaternion",
            "fields": [
              {
                "id": 1,
                "name": "x",
                "type": "double"
              },
              {
                "id": 2,
                "name": "y",
                "type": "double"
              },
              {
                "id": 3,
                "name": "z",
                "type": "double"
              },
              {
                "id": 4,
                "name": "w",
                "type": "double"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/type/quaternion;quaternion"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "QuaternionProto"
          },
          {
            "name": "java_package",
            "value": "com.google.type"
          },
          {
            "name": "objc_class_prefix",
            "value": "GTP"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:google:/:type:/:timeofday.proto",
      "def": {
        "messages": [
          {
            "name": "TimeOfDay",
            "fields": [
              {
                "id": 1,
                "name": "hours",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "minutes",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "seconds",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        },
        "options": [
          {
            "name": "cc_enable_arenas",
            "value": "true"
          },
          {
            "name": "go_package",
            "value": "google.golang.org/genproto/googleapis/type/timeofday;timeofday"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_outer_classname",
            "value": "TimeOfDayProto"
          },
          {
            "name": "java_package",
            "value": "com.google.type"
          },
          {
            "name": "objc_class_prefix",
            "value": "GTP"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:istio.io:/:extensions:/:field_rules.proto",
      "def": {
        "messages": [
          {
            "name": "google.protobuf.FieldOptions",
            "fields": [
              {
                "id": 1200,
                "name": "rules",
                "type": "FieldRules"
              }
            ]
          },
          {
            "name": "FieldRules",
            "fields": [
              {
                "id": 1,
                "name": "float",
                "type": "FloatRules",
                "oneof_parent": "type"
              },
              {
                "id": 2,
                "name": "double",
                "type": "DoubleRules",
                "oneof_parent": "type"
              },
              {
                "id": 3,
                "name": "string",
                "type": "StringRules",
                "oneof_parent": "type"
              },
              {
                "id": 4,
                "name": "bool",
                "type": "BoolRules",
                "oneof_parent": "type"
              },
              {
                "id": 5,
                "name": "int32",
                "type": "Int32Rules",
                "oneof_parent": "type"
              },
              {
                "id": 6,
                "name": "int64",
                "type": "Int64Rules",
                "oneof_parent": "type"
              }
            ]
          },
          {
            "name": "FloatRules",
            "fields": [
              {
                "id": 1,
                "name": "default",
                "type": "float"
              }
            ]
          },
          {
            "name": "DoubleRules",
            "fields": [
              {
                "id": 1,
                "name": "default",
                "type": "double"
              }
            ]
          },
          {
            "name": "StringRules",
            "fields": [
              {
                "id": 1,
                "name": "default",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pattern",
                "type": "string"
              }
            ]
          },
          {
            "name": "BoolRules",
            "fields": [
              {
                "id": 1,
                "name": "default",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Int32Rules",
            "fields": [
              {
                "id": 1,
                "name": "default",
                "type": "int32"
              }
            ]
          },
          {
            "name": "Int64Rules",
            "fields": [
              {
                "id": 1,
                "name": "default",
                "type": "int64"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "istio.extensions"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/extensions"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:admission:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "AdmissionRequest",
            "fields": [
              {
                "id": 1,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "kind",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionKind",
                "optional": true
              },
              {
                "id": 3,
                "name": "resource",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionResource",
                "optional": true
              },
              {
                "id": 4,
                "name": "subResource",
                "type": "string",
                "optional": true
              },
              {
                "id": 13,
                "name": "requestKind",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionKind",
                "optional": true
              },
              {
                "id": 14,
                "name": "requestResource",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionResource",
                "optional": true
              },
              {
                "id": 15,
                "name": "requestSubResource",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "operation",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "userInfo",
                "type": "k8s.io.api.authentication.v1.UserInfo",
                "optional": true
              },
              {
                "id": 9,
                "name": "object",
                "type": "k8s.io.apimachinery.pkg.runtime.RawExtension",
                "optional": true
              },
              {
                "id": 10,
                "name": "oldObject",
                "type": "k8s.io.apimachinery.pkg.runtime.RawExtension",
                "optional": true
              },
              {
                "id": 11,
                "name": "dryRun",
                "type": "bool",
                "optional": true
              },
              {
                "id": 12,
                "name": "options",
                "type": "k8s.io.apimachinery.pkg.runtime.RawExtension",
                "optional": true
              }
            ]
          },
          {
            "name": "AdmissionResponse",
            "fields": [
              {
                "id": 1,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "allowed",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Status",
                "optional": true
              },
              {
                "id": 4,
                "name": "patch",
                "type": "bytes",
                "optional": true
              },
              {
                "id": 5,
                "name": "patchType",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "warnings",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "auditAnnotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "AdmissionReview",
            "fields": [
              {
                "id": 1,
                "name": "request",
                "type": "AdmissionRequest",
                "optional": true
              },
              {
                "id": 2,
                "name": "response",
                "type": "AdmissionResponse",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/authentication/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.admission.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/admission/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:admission:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "AdmissionRequest",
            "fields": [
              {
                "id": 1,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "kind",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionKind",
                "optional": true
              },
              {
                "id": 3,
                "name": "resource",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionResource",
                "optional": true
              },
              {
                "id": 4,
                "name": "subResource",
                "type": "string",
                "optional": true
              },
              {
                "id": 13,
                "name": "requestKind",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionKind",
                "optional": true
              },
              {
                "id": 14,
                "name": "requestResource",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionResource",
                "optional": true
              },
              {
                "id": 15,
                "name": "requestSubResource",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "operation",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "userInfo",
                "type": "k8s.io.api.authentication.v1.UserInfo",
                "optional": true
              },
              {
                "id": 9,
                "name": "object",
                "type": "k8s.io.apimachinery.pkg.runtime.RawExtension",
                "optional": true
              },
              {
                "id": 10,
                "name": "oldObject",
                "type": "k8s.io.apimachinery.pkg.runtime.RawExtension",
                "optional": true
              },
              {
                "id": 11,
                "name": "dryRun",
                "type": "bool",
                "optional": true
              },
              {
                "id": 12,
                "name": "options",
                "type": "k8s.io.apimachinery.pkg.runtime.RawExtension",
                "optional": true
              }
            ]
          },
          {
            "name": "AdmissionResponse",
            "fields": [
              {
                "id": 1,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "allowed",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Status",
                "optional": true
              },
              {
                "id": 4,
                "name": "patch",
                "type": "bytes",
                "optional": true
              },
              {
                "id": 5,
                "name": "patchType",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "warnings",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "auditAnnotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "AdmissionReview",
            "fields": [
              {
                "id": 1,
                "name": "request",
                "type": "AdmissionRequest",
                "optional": true
              },
              {
                "id": 2,
                "name": "response",
                "type": "AdmissionResponse",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/authentication/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.admission.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/admission/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:admissionregistration:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "MutatingWebhook",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "clientConfig",
                "type": "WebhookClientConfig",
                "optional": true
              },
              {
                "id": 3,
                "name": "rules",
                "type": "RuleWithOperations",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "failurePolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "matchPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "namespaceSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 11,
                "name": "objectSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 6,
                "name": "sideEffects",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "timeoutSeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 8,
                "name": "admissionReviewVersions",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "reinvocationPolicy",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "MutatingWebhookConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "Webhooks",
                "type": "MutatingWebhook",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MutatingWebhookConfigurationList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "MutatingWebhookConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Rule",
            "fields": [
              {
                "id": 1,
                "name": "apiGroups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "apiVersions",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "scope",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "RuleWithOperations",
            "fields": [
              {
                "id": 1,
                "name": "operations",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "rule",
                "type": "Rule",
                "optional": true
              }
            ]
          },
          {
            "name": "ServiceReference",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "port",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ValidatingWebhook",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "clientConfig",
                "type": "WebhookClientConfig",
                "optional": true
              },
              {
                "id": 3,
                "name": "rules",
                "type": "RuleWithOperations",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "failurePolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "matchPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "namespaceSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 10,
                "name": "objectSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 6,
                "name": "sideEffects",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "timeoutSeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 8,
                "name": "admissionReviewVersions",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ValidatingWebhookConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "Webhooks",
                "type": "ValidatingWebhook",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ValidatingWebhookConfigurationList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ValidatingWebhookConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "WebhookClientConfig",
            "fields": [
              {
                "id": 3,
                "name": "url",
                "type": "string",
                "optional": true
              },
              {
                "id": 1,
                "name": "service",
                "type": "ServiceReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "caBundle",
                "type": "bytes",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.admissionregistration.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/admissionregistration/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:admissionregistration:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "MutatingWebhook",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "clientConfig",
                "type": "WebhookClientConfig",
                "optional": true
              },
              {
                "id": 3,
                "name": "rules",
                "type": "RuleWithOperations",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "failurePolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "matchPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "namespaceSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 11,
                "name": "objectSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 6,
                "name": "sideEffects",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "timeoutSeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 8,
                "name": "admissionReviewVersions",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "reinvocationPolicy",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "MutatingWebhookConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "Webhooks",
                "type": "MutatingWebhook",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MutatingWebhookConfigurationList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "MutatingWebhookConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Rule",
            "fields": [
              {
                "id": 1,
                "name": "apiGroups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "apiVersions",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "scope",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "RuleWithOperations",
            "fields": [
              {
                "id": 1,
                "name": "operations",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "rule",
                "type": "Rule",
                "optional": true
              }
            ]
          },
          {
            "name": "ServiceReference",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "port",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ValidatingWebhook",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "clientConfig",
                "type": "WebhookClientConfig",
                "optional": true
              },
              {
                "id": 3,
                "name": "rules",
                "type": "RuleWithOperations",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "failurePolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "matchPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "namespaceSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 10,
                "name": "objectSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 6,
                "name": "sideEffects",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "timeoutSeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 8,
                "name": "admissionReviewVersions",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ValidatingWebhookConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "Webhooks",
                "type": "ValidatingWebhook",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ValidatingWebhookConfigurationList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ValidatingWebhookConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "WebhookClientConfig",
            "fields": [
              {
                "id": 3,
                "name": "url",
                "type": "string",
                "optional": true
              },
              {
                "id": 1,
                "name": "service",
                "type": "ServiceReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "caBundle",
                "type": "bytes",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.admissionregistration.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/admissionregistration/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:apiserverinternal:/:v1alpha1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "ServerStorageVersion",
            "fields": [
              {
                "id": 1,
                "name": "apiServerID",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "encodingVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "decodableVersions",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "StorageVersion",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "StorageVersionSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "StorageVersionStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "StorageVersionCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 4,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 5,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "StorageVersionList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "StorageVersion",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "StorageVersionSpec"
          },
          {
            "name": "StorageVersionStatus",
            "fields": [
              {
                "id": 1,
                "name": "storageVersions",
                "type": "ServerStorageVersion",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "commonEncodingVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "conditions",
                "type": "StorageVersionCondition",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.apiserverinternal.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/apiserverinternal/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:apps:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "ControllerRevision",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "data",
                "type": "k8s.io.apimachinery.pkg.runtime.RawExtension",
                "optional": true
              },
              {
                "id": 3,
                "name": "revision",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "ControllerRevisionList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ControllerRevision",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DaemonSet",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "DaemonSetSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "DaemonSetStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "DaemonSetCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "DaemonSetList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "DaemonSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DaemonSetSpec",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 2,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "updateStrategy",
                "type": "DaemonSetUpdateStrategy",
                "optional": true
              },
              {
                "id": 4,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "revisionHistoryLimit",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "DaemonSetStatus",
            "fields": [
              {
                "id": 1,
                "name": "currentNumberScheduled",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "numberMisscheduled",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "desiredNumberScheduled",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "numberReady",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 6,
                "name": "updatedNumberScheduled",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "numberAvailable",
                "type": "int32",
                "optional": true
              },
              {
                "id": 8,
                "name": "numberUnavailable",
                "type": "int32",
                "optional": true
              },
              {
                "id": 9,
                "name": "collisionCount",
                "type": "int32",
                "optional": true
              },
              {
                "id": 10,
                "name": "conditions",
                "type": "DaemonSetCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DaemonSetUpdateStrategy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "rollingUpdate",
                "type": "RollingUpdateDaemonSet",
                "optional": true
              }
            ]
          },
          {
            "name": "Deployment",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "DeploymentSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "DeploymentStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "lastUpdateTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 7,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Deployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeploymentSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              },
              {
                "id": 4,
                "name": "strategy",
                "type": "DeploymentStrategy",
                "optional": true
              },
              {
                "id": 5,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "revisionHistoryLimit",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "paused",
                "type": "bool",
                "optional": true
              },
              {
                "id": 9,
                "name": "progressDeadlineSeconds",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentStatus",
            "fields": [
              {
                "id": 1,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "updatedReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "readyReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "availableReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "unavailableReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "conditions",
                "type": "DeploymentCondition",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "collisionCount",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentStrategy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "rollingUpdate",
                "type": "RollingUpdateDeployment",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicaSet",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "ReplicaSetSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "ReplicaSetStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicaSetCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicaSetList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ReplicaSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReplicaSetSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicaSetStatus",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "fullyLabeledReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "readyReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "availableReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 6,
                "name": "conditions",
                "type": "ReplicaSetCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RollingUpdateDaemonSet",
            "fields": [
              {
                "id": 1,
                "name": "maxUnavailable",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 2,
                "name": "maxSurge",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              }
            ]
          },
          {
            "name": "RollingUpdateDeployment",
            "fields": [
              {
                "id": 1,
                "name": "maxUnavailable",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 2,
                "name": "maxSurge",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              }
            ]
          },
          {
            "name": "RollingUpdateStatefulSetStrategy",
            "fields": [
              {
                "id": 1,
                "name": "partition",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSet",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "StatefulSetSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "StatefulSetStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "StatefulSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "StatefulSetPersistentVolumeClaimRetentionPolicy",
            "fields": [
              {
                "id": 1,
                "name": "whenDeleted",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "whenScaled",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              },
              {
                "id": 4,
                "name": "volumeClaimTemplates",
                "type": "k8s.io.api.core.v1.PersistentVolumeClaim",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "serviceName",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "podManagementPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "updateStrategy",
                "type": "StatefulSetUpdateStrategy",
                "optional": true
              },
              {
                "id": 8,
                "name": "revisionHistoryLimit",
                "type": "int32",
                "optional": true
              },
              {
                "id": 9,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 10,
                "name": "persistentVolumeClaimRetentionPolicy",
                "type": "StatefulSetPersistentVolumeClaimRetentionPolicy",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetStatus",
            "fields": [
              {
                "id": 1,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "readyReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "currentReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "updatedReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "currentRevision",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "updateRevision",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "collisionCount",
                "type": "int32",
                "optional": true
              },
              {
                "id": 10,
                "name": "conditions",
                "type": "StatefulSetCondition",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "availableReplicas",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetUpdateStrategy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "rollingUpdate",
                "type": "RollingUpdateStatefulSetStrategy",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/util/intstr/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.apps.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/apps/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:apps:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "ControllerRevision",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "data",
                "type": "k8s.io.apimachinery.pkg.runtime.RawExtension",
                "optional": true
              },
              {
                "id": 3,
                "name": "revision",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "ControllerRevisionList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ControllerRevision",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Deployment",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "DeploymentSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "DeploymentStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "lastUpdateTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 7,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Deployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeploymentRollback",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "rollbackTo",
                "type": "RollbackConfig",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "updatedAnnotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "DeploymentSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              },
              {
                "id": 4,
                "name": "strategy",
                "type": "DeploymentStrategy",
                "optional": true
              },
              {
                "id": 5,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "revisionHistoryLimit",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "paused",
                "type": "bool",
                "optional": true
              },
              {
                "id": 8,
                "name": "rollbackTo",
                "type": "RollbackConfig",
                "optional": true
              },
              {
                "id": 9,
                "name": "progressDeadlineSeconds",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentStatus",
            "fields": [
              {
                "id": 1,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "updatedReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "readyReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "availableReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "unavailableReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "conditions",
                "type": "DeploymentCondition",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "collisionCount",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentStrategy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "rollingUpdate",
                "type": "RollingUpdateDeployment",
                "optional": true
              }
            ]
          },
          {
            "name": "RollbackConfig",
            "fields": [
              {
                "id": 1,
                "name": "revision",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "RollingUpdateDeployment",
            "fields": [
              {
                "id": 1,
                "name": "maxUnavailable",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 2,
                "name": "maxSurge",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              }
            ]
          },
          {
            "name": "RollingUpdateStatefulSetStrategy",
            "fields": [
              {
                "id": 1,
                "name": "partition",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "Scale",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "ScaleSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "ScaleStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ScaleSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ScaleStatus",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "targetSelector",
                "type": "string",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "selector",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "StatefulSet",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "StatefulSetSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "StatefulSetStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "StatefulSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "StatefulSetPersistentVolumeClaimRetentionPolicy",
            "fields": [
              {
                "id": 1,
                "name": "whenDeleted",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "whenScaled",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              },
              {
                "id": 4,
                "name": "volumeClaimTemplates",
                "type": "k8s.io.api.core.v1.PersistentVolumeClaim",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "serviceName",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "podManagementPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "updateStrategy",
                "type": "StatefulSetUpdateStrategy",
                "optional": true
              },
              {
                "id": 8,
                "name": "revisionHistoryLimit",
                "type": "int32",
                "optional": true
              },
              {
                "id": 9,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 10,
                "name": "persistentVolumeClaimRetentionPolicy",
                "type": "StatefulSetPersistentVolumeClaimRetentionPolicy",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetStatus",
            "fields": [
              {
                "id": 1,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "readyReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "currentReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "updatedReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "currentRevision",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "updateRevision",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "collisionCount",
                "type": "int32",
                "optional": true
              },
              {
                "id": 10,
                "name": "conditions",
                "type": "StatefulSetCondition",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "availableReplicas",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetUpdateStrategy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "rollingUpdate",
                "type": "RollingUpdateStatefulSetStrategy",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/util/intstr/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.apps.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/apps/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:apps:/:v1beta2:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "ControllerRevision",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "data",
                "type": "k8s.io.apimachinery.pkg.runtime.RawExtension",
                "optional": true
              },
              {
                "id": 3,
                "name": "revision",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "ControllerRevisionList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ControllerRevision",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DaemonSet",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "DaemonSetSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "DaemonSetStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "DaemonSetCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "DaemonSetList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "DaemonSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DaemonSetSpec",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 2,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "updateStrategy",
                "type": "DaemonSetUpdateStrategy",
                "optional": true
              },
              {
                "id": 4,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "revisionHistoryLimit",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "DaemonSetStatus",
            "fields": [
              {
                "id": 1,
                "name": "currentNumberScheduled",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "numberMisscheduled",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "desiredNumberScheduled",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "numberReady",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 6,
                "name": "updatedNumberScheduled",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "numberAvailable",
                "type": "int32",
                "optional": true
              },
              {
                "id": 8,
                "name": "numberUnavailable",
                "type": "int32",
                "optional": true
              },
              {
                "id": 9,
                "name": "collisionCount",
                "type": "int32",
                "optional": true
              },
              {
                "id": 10,
                "name": "conditions",
                "type": "DaemonSetCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DaemonSetUpdateStrategy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "rollingUpdate",
                "type": "RollingUpdateDaemonSet",
                "optional": true
              }
            ]
          },
          {
            "name": "Deployment",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "DeploymentSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "DeploymentStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "lastUpdateTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 7,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Deployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeploymentSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              },
              {
                "id": 4,
                "name": "strategy",
                "type": "DeploymentStrategy",
                "optional": true
              },
              {
                "id": 5,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "revisionHistoryLimit",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "paused",
                "type": "bool",
                "optional": true
              },
              {
                "id": 9,
                "name": "progressDeadlineSeconds",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentStatus",
            "fields": [
              {
                "id": 1,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "updatedReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "readyReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "availableReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "unavailableReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "conditions",
                "type": "DeploymentCondition",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "collisionCount",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentStrategy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "rollingUpdate",
                "type": "RollingUpdateDeployment",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicaSet",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "ReplicaSetSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "ReplicaSetStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicaSetCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicaSetList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ReplicaSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReplicaSetSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicaSetStatus",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "fullyLabeledReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "readyReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "availableReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 6,
                "name": "conditions",
                "type": "ReplicaSetCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RollingUpdateDaemonSet",
            "fields": [
              {
                "id": 1,
                "name": "maxUnavailable",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 2,
                "name": "maxSurge",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              }
            ]
          },
          {
            "name": "RollingUpdateDeployment",
            "fields": [
              {
                "id": 1,
                "name": "maxUnavailable",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 2,
                "name": "maxSurge",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              }
            ]
          },
          {
            "name": "RollingUpdateStatefulSetStrategy",
            "fields": [
              {
                "id": 1,
                "name": "partition",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "Scale",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "ScaleSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "ScaleStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ScaleSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ScaleStatus",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "targetSelector",
                "type": "string",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "selector",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "StatefulSet",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "StatefulSetSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "StatefulSetStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "StatefulSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "StatefulSetPersistentVolumeClaimRetentionPolicy",
            "fields": [
              {
                "id": 1,
                "name": "whenDeleted",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "whenScaled",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              },
              {
                "id": 4,
                "name": "volumeClaimTemplates",
                "type": "k8s.io.api.core.v1.PersistentVolumeClaim",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "serviceName",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "podManagementPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "updateStrategy",
                "type": "StatefulSetUpdateStrategy",
                "optional": true
              },
              {
                "id": 8,
                "name": "revisionHistoryLimit",
                "type": "int32",
                "optional": true
              },
              {
                "id": 9,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 10,
                "name": "persistentVolumeClaimRetentionPolicy",
                "type": "StatefulSetPersistentVolumeClaimRetentionPolicy",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetStatus",
            "fields": [
              {
                "id": 1,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "readyReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "currentReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "updatedReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "currentRevision",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "updateRevision",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "collisionCount",
                "type": "int32",
                "optional": true
              },
              {
                "id": 10,
                "name": "conditions",
                "type": "StatefulSetCondition",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "availableReplicas",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "StatefulSetUpdateStrategy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "rollingUpdate",
                "type": "RollingUpdateStatefulSetStrategy",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/util/intstr/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.apps.v1beta2"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/apps/v1beta2"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:authentication:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "BoundObjectReference",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "apiVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "uID",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ExtraValue",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TokenRequest",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "TokenRequestSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "TokenRequestStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "TokenRequestSpec",
            "fields": [
              {
                "id": 1,
                "name": "audiences",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "expirationSeconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 3,
                "name": "boundObjectRef",
                "type": "BoundObjectReference",
                "optional": true
              }
            ]
          },
          {
            "name": "TokenRequestStatus",
            "fields": [
              {
                "id": 1,
                "name": "token",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "expirationTimestamp",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              }
            ]
          },
          {
            "name": "TokenReview",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "TokenReviewSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "TokenReviewStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "TokenReviewSpec",
            "fields": [
              {
                "id": 1,
                "name": "token",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "audiences",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TokenReviewStatus",
            "fields": [
              {
                "id": 1,
                "name": "authenticated",
                "type": "bool",
                "optional": true
              },
              {
                "id": 2,
                "name": "user",
                "type": "UserInfo",
                "optional": true
              },
              {
                "id": 4,
                "name": "audiences",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "error",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "UserInfo",
            "fields": [
              {
                "id": 1,
                "name": "username",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "groups",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "extra",
                  "type": "ExtraValue"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.authentication.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/authentication/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:authentication:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "ExtraValue",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TokenReview",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "TokenReviewSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "TokenReviewStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "TokenReviewSpec",
            "fields": [
              {
                "id": 1,
                "name": "token",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "audiences",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TokenReviewStatus",
            "fields": [
              {
                "id": 1,
                "name": "authenticated",
                "type": "bool",
                "optional": true
              },
              {
                "id": 2,
                "name": "user",
                "type": "UserInfo",
                "optional": true
              },
              {
                "id": 4,
                "name": "audiences",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "error",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "UserInfo",
            "fields": [
              {
                "id": 1,
                "name": "username",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "groups",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "extra",
                  "type": "ExtraValue"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.authentication.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/authentication/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:authorization:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "ExtraValue",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LocalSubjectAccessReview",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "SubjectAccessReviewSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "SubjectAccessReviewStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "NonResourceAttributes",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "verb",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "NonResourceRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "nonResourceURLs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ResourceAttributes",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "verb",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "group",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "version",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "resource",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "subresource",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourceRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "apiGroups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "resourceNames",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SelfSubjectAccessReview",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "SelfSubjectAccessReviewSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "SubjectAccessReviewStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "SelfSubjectAccessReviewSpec",
            "fields": [
              {
                "id": 1,
                "name": "resourceAttributes",
                "type": "ResourceAttributes",
                "optional": true
              },
              {
                "id": 2,
                "name": "nonResourceAttributes",
                "type": "NonResourceAttributes",
                "optional": true
              }
            ]
          },
          {
            "name": "SelfSubjectRulesReview",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "SelfSubjectRulesReviewSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "SubjectRulesReviewStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "SelfSubjectRulesReviewSpec",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "SubjectAccessReview",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "SubjectAccessReviewSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "SubjectAccessReviewStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "SubjectAccessReviewSpec",
            "fields": [
              {
                "id": 1,
                "name": "resourceAttributes",
                "type": "ResourceAttributes",
                "optional": true
              },
              {
                "id": 2,
                "name": "nonResourceAttributes",
                "type": "NonResourceAttributes",
                "optional": true
              },
              {
                "id": 3,
                "name": "user",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "groups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "uid",
                "type": "string",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "extra",
                  "type": "ExtraValue"
                }
              }
            ]
          },
          {
            "name": "SubjectAccessReviewStatus",
            "fields": [
              {
                "id": 1,
                "name": "allowed",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "denied",
                "type": "bool",
                "optional": true
              },
              {
                "id": 2,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "evaluationError",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "SubjectRulesReviewStatus",
            "fields": [
              {
                "id": 1,
                "name": "resourceRules",
                "type": "ResourceRule",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "nonResourceRules",
                "type": "NonResourceRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "incomplete",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "evaluationError",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.authorization.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/authorization/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:authorization:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "ExtraValue",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LocalSubjectAccessReview",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "SubjectAccessReviewSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "SubjectAccessReviewStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "NonResourceAttributes",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "verb",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "NonResourceRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "nonResourceURLs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ResourceAttributes",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "verb",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "group",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "version",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "resource",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "subresource",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourceRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "apiGroups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "resourceNames",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SelfSubjectAccessReview",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "SelfSubjectAccessReviewSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "SubjectAccessReviewStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "SelfSubjectAccessReviewSpec",
            "fields": [
              {
                "id": 1,
                "name": "resourceAttributes",
                "type": "ResourceAttributes",
                "optional": true
              },
              {
                "id": 2,
                "name": "nonResourceAttributes",
                "type": "NonResourceAttributes",
                "optional": true
              }
            ]
          },
          {
            "name": "SelfSubjectRulesReview",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "SelfSubjectRulesReviewSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "SubjectRulesReviewStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "SelfSubjectRulesReviewSpec",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "SubjectAccessReview",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "SubjectAccessReviewSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "SubjectAccessReviewStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "SubjectAccessReviewSpec",
            "fields": [
              {
                "id": 1,
                "name": "resourceAttributes",
                "type": "ResourceAttributes",
                "optional": true
              },
              {
                "id": 2,
                "name": "nonResourceAttributes",
                "type": "NonResourceAttributes",
                "optional": true
              },
              {
                "id": 3,
                "name": "user",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "group",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "uid",
                "type": "string",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "extra",
                  "type": "ExtraValue"
                }
              }
            ]
          },
          {
            "name": "SubjectAccessReviewStatus",
            "fields": [
              {
                "id": 1,
                "name": "allowed",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "denied",
                "type": "bool",
                "optional": true
              },
              {
                "id": 2,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "evaluationError",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "SubjectRulesReviewStatus",
            "fields": [
              {
                "id": 1,
                "name": "resourceRules",
                "type": "ResourceRule",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "nonResourceRules",
                "type": "NonResourceRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "incomplete",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "evaluationError",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.authorization.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/authorization/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:autoscaling:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "ContainerResourceMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "targetAverageUtilization",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "targetAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 5,
                "name": "container",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ContainerResourceMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "currentAverageUtilization",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "currentAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 4,
                "name": "container",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "CrossVersionObjectReference",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "apiVersion",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ExternalMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "metricName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "metricSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "targetValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 4,
                "name": "targetAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "ExternalMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "metricName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "metricSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "currentValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 4,
                "name": "currentAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscaler",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "HorizontalPodAutoscalerSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "HorizontalPodAutoscalerStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "HorizontalPodAutoscaler",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerSpec",
            "fields": [
              {
                "id": 1,
                "name": "scaleTargetRef",
                "type": "CrossVersionObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "minReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "maxReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "targetCPUUtilizationPercentage",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerStatus",
            "fields": [
              {
                "id": 1,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "lastScaleTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 3,
                "name": "currentReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "desiredReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "currentCPUUtilizationPercentage",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "MetricSpec",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "object",
                "type": "ObjectMetricSource",
                "optional": true
              },
              {
                "id": 3,
                "name": "pods",
                "type": "PodsMetricSource",
                "optional": true
              },
              {
                "id": 4,
                "name": "resource",
                "type": "ResourceMetricSource",
                "optional": true
              },
              {
                "id": 7,
                "name": "containerResource",
                "type": "ContainerResourceMetricSource",
                "optional": true
              },
              {
                "id": 5,
                "name": "external",
                "type": "ExternalMetricSource",
                "optional": true
              }
            ]
          },
          {
            "name": "MetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "object",
                "type": "ObjectMetricStatus",
                "optional": true
              },
              {
                "id": 3,
                "name": "pods",
                "type": "PodsMetricStatus",
                "optional": true
              },
              {
                "id": 4,
                "name": "resource",
                "type": "ResourceMetricStatus",
                "optional": true
              },
              {
                "id": 7,
                "name": "containerResource",
                "type": "ContainerResourceMetricStatus",
                "optional": true
              },
              {
                "id": 5,
                "name": "external",
                "type": "ExternalMetricStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ObjectMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "target",
                "type": "CrossVersionObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "metricName",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "targetValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 4,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 5,
                "name": "averageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "ObjectMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "target",
                "type": "CrossVersionObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "metricName",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "currentValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 4,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 5,
                "name": "averageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "PodsMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "metricName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "targetAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 3,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              }
            ]
          },
          {
            "name": "PodsMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "metricName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "currentAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 3,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourceMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "targetAverageUtilization",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "targetAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourceMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "currentAverageUtilization",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "currentAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "Scale",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "ScaleSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "ScaleStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ScaleSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ScaleStatus",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/api/resource/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.autoscaling.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/autoscaling/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:autoscaling:/:v2:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "ContainerResourceMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "target",
                "type": "MetricTarget",
                "optional": true
              },
              {
                "id": 3,
                "name": "container",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ContainerResourceMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus",
                "optional": true
              },
              {
                "id": 3,
                "name": "container",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "CrossVersionObjectReference",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "apiVersion",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ExternalMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "MetricIdentifier",
                "optional": true
              },
              {
                "id": 2,
                "name": "target",
                "type": "MetricTarget",
                "optional": true
              }
            ]
          },
          {
            "name": "ExternalMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "MetricIdentifier",
                "optional": true
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "HPAScalingPolicy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "value",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "periodSeconds",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "HPAScalingRules",
            "fields": [
              {
                "id": 3,
                "name": "stabilizationWindowSeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 1,
                "name": "selectPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "policies",
                "type": "HPAScalingPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscaler",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "HorizontalPodAutoscalerSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "HorizontalPodAutoscalerStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerBehavior",
            "fields": [
              {
                "id": 1,
                "name": "scaleUp",
                "type": "HPAScalingRules",
                "optional": true
              },
              {
                "id": 2,
                "name": "scaleDown",
                "type": "HPAScalingRules",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "HorizontalPodAutoscaler",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerSpec",
            "fields": [
              {
                "id": 1,
                "name": "scaleTargetRef",
                "type": "CrossVersionObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "minReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "maxReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "metrics",
                "type": "MetricSpec",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "behavior",
                "type": "HorizontalPodAutoscalerBehavior",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerStatus",
            "fields": [
              {
                "id": 1,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "lastScaleTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 3,
                "name": "currentReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "desiredReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "currentMetrics",
                "type": "MetricStatus",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "conditions",
                "type": "HorizontalPodAutoscalerCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MetricIdentifier",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              }
            ]
          },
          {
            "name": "MetricSpec",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "object",
                "type": "ObjectMetricSource",
                "optional": true
              },
              {
                "id": 3,
                "name": "pods",
                "type": "PodsMetricSource",
                "optional": true
              },
              {
                "id": 4,
                "name": "resource",
                "type": "ResourceMetricSource",
                "optional": true
              },
              {
                "id": 7,
                "name": "containerResource",
                "type": "ContainerResourceMetricSource",
                "optional": true
              },
              {
                "id": 5,
                "name": "external",
                "type": "ExternalMetricSource",
                "optional": true
              }
            ]
          },
          {
            "name": "MetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "object",
                "type": "ObjectMetricStatus",
                "optional": true
              },
              {
                "id": 3,
                "name": "pods",
                "type": "PodsMetricStatus",
                "optional": true
              },
              {
                "id": 4,
                "name": "resource",
                "type": "ResourceMetricStatus",
                "optional": true
              },
              {
                "id": 7,
                "name": "containerResource",
                "type": "ContainerResourceMetricStatus",
                "optional": true
              },
              {
                "id": 5,
                "name": "external",
                "type": "ExternalMetricStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "MetricTarget",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "value",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 3,
                "name": "averageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 4,
                "name": "averageUtilization",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "MetricValueStatus",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 2,
                "name": "averageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 3,
                "name": "averageUtilization",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ObjectMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "describedObject",
                "type": "CrossVersionObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "target",
                "type": "MetricTarget",
                "optional": true
              },
              {
                "id": 3,
                "name": "metric",
                "type": "MetricIdentifier",
                "optional": true
              }
            ]
          },
          {
            "name": "ObjectMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "MetricIdentifier",
                "optional": true
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus",
                "optional": true
              },
              {
                "id": 3,
                "name": "describedObject",
                "type": "CrossVersionObjectReference",
                "optional": true
              }
            ]
          },
          {
            "name": "PodsMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "MetricIdentifier",
                "optional": true
              },
              {
                "id": 2,
                "name": "target",
                "type": "MetricTarget",
                "optional": true
              }
            ]
          },
          {
            "name": "PodsMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "MetricIdentifier",
                "optional": true
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourceMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "target",
                "type": "MetricTarget",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourceMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/api/resource/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.autoscaling.v2"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/autoscaling/v2"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:autoscaling:/:v2beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "ContainerResourceMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "targetAverageUtilization",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "targetAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 4,
                "name": "container",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ContainerResourceMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "currentAverageUtilization",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "currentAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 4,
                "name": "container",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "CrossVersionObjectReference",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "apiVersion",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ExternalMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "metricName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "metricSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "targetValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 4,
                "name": "targetAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "ExternalMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "metricName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "metricSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "currentValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 4,
                "name": "currentAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscaler",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "HorizontalPodAutoscalerSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "HorizontalPodAutoscalerStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "HorizontalPodAutoscaler",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerSpec",
            "fields": [
              {
                "id": 1,
                "name": "scaleTargetRef",
                "type": "CrossVersionObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "minReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "maxReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "metrics",
                "type": "MetricSpec",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerStatus",
            "fields": [
              {
                "id": 1,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "lastScaleTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 3,
                "name": "currentReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "desiredReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "currentMetrics",
                "type": "MetricStatus",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "conditions",
                "type": "HorizontalPodAutoscalerCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MetricSpec",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "object",
                "type": "ObjectMetricSource",
                "optional": true
              },
              {
                "id": 3,
                "name": "pods",
                "type": "PodsMetricSource",
                "optional": true
              },
              {
                "id": 4,
                "name": "resource",
                "type": "ResourceMetricSource",
                "optional": true
              },
              {
                "id": 7,
                "name": "containerResource",
                "type": "ContainerResourceMetricSource",
                "optional": true
              },
              {
                "id": 5,
                "name": "external",
                "type": "ExternalMetricSource",
                "optional": true
              }
            ]
          },
          {
            "name": "MetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "object",
                "type": "ObjectMetricStatus",
                "optional": true
              },
              {
                "id": 3,
                "name": "pods",
                "type": "PodsMetricStatus",
                "optional": true
              },
              {
                "id": 4,
                "name": "resource",
                "type": "ResourceMetricStatus",
                "optional": true
              },
              {
                "id": 7,
                "name": "containerResource",
                "type": "ContainerResourceMetricStatus",
                "optional": true
              },
              {
                "id": 5,
                "name": "external",
                "type": "ExternalMetricStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ObjectMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "target",
                "type": "CrossVersionObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "metricName",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "targetValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 4,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 5,
                "name": "averageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "ObjectMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "target",
                "type": "CrossVersionObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "metricName",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "currentValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 4,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 5,
                "name": "averageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "PodsMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "metricName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "targetAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 3,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              }
            ]
          },
          {
            "name": "PodsMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "metricName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "currentAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 3,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourceMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "targetAverageUtilization",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "targetAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourceMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "currentAverageUtilization",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "currentAverageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/api/resource/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.autoscaling.v2beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/autoscaling/v2beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:autoscaling:/:v2beta2:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "ContainerResourceMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "target",
                "type": "MetricTarget",
                "optional": true
              },
              {
                "id": 3,
                "name": "container",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ContainerResourceMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus",
                "optional": true
              },
              {
                "id": 3,
                "name": "container",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "CrossVersionObjectReference",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "apiVersion",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ExternalMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "MetricIdentifier",
                "optional": true
              },
              {
                "id": 2,
                "name": "target",
                "type": "MetricTarget",
                "optional": true
              }
            ]
          },
          {
            "name": "ExternalMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "MetricIdentifier",
                "optional": true
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "HPAScalingPolicy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "value",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "periodSeconds",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "HPAScalingRules",
            "fields": [
              {
                "id": 3,
                "name": "stabilizationWindowSeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 1,
                "name": "selectPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "policies",
                "type": "HPAScalingPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscaler",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "HorizontalPodAutoscalerSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "HorizontalPodAutoscalerStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerBehavior",
            "fields": [
              {
                "id": 1,
                "name": "scaleUp",
                "type": "HPAScalingRules",
                "optional": true
              },
              {
                "id": 2,
                "name": "scaleDown",
                "type": "HPAScalingRules",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "HorizontalPodAutoscaler",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerSpec",
            "fields": [
              {
                "id": 1,
                "name": "scaleTargetRef",
                "type": "CrossVersionObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "minReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "maxReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "metrics",
                "type": "MetricSpec",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "behavior",
                "type": "HorizontalPodAutoscalerBehavior",
                "optional": true
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerStatus",
            "fields": [
              {
                "id": 1,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "lastScaleTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 3,
                "name": "currentReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "desiredReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "currentMetrics",
                "type": "MetricStatus",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "conditions",
                "type": "HorizontalPodAutoscalerCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MetricIdentifier",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              }
            ]
          },
          {
            "name": "MetricSpec",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "object",
                "type": "ObjectMetricSource",
                "optional": true
              },
              {
                "id": 3,
                "name": "pods",
                "type": "PodsMetricSource",
                "optional": true
              },
              {
                "id": 4,
                "name": "resource",
                "type": "ResourceMetricSource",
                "optional": true
              },
              {
                "id": 7,
                "name": "containerResource",
                "type": "ContainerResourceMetricSource",
                "optional": true
              },
              {
                "id": 5,
                "name": "external",
                "type": "ExternalMetricSource",
                "optional": true
              }
            ]
          },
          {
            "name": "MetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "object",
                "type": "ObjectMetricStatus",
                "optional": true
              },
              {
                "id": 3,
                "name": "pods",
                "type": "PodsMetricStatus",
                "optional": true
              },
              {
                "id": 4,
                "name": "resource",
                "type": "ResourceMetricStatus",
                "optional": true
              },
              {
                "id": 7,
                "name": "containerResource",
                "type": "ContainerResourceMetricStatus",
                "optional": true
              },
              {
                "id": 5,
                "name": "external",
                "type": "ExternalMetricStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "MetricTarget",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "value",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 3,
                "name": "averageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 4,
                "name": "averageUtilization",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "MetricValueStatus",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 2,
                "name": "averageValue",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 3,
                "name": "averageUtilization",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ObjectMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "describedObject",
                "type": "CrossVersionObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "target",
                "type": "MetricTarget",
                "optional": true
              },
              {
                "id": 3,
                "name": "metric",
                "type": "MetricIdentifier",
                "optional": true
              }
            ]
          },
          {
            "name": "ObjectMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "MetricIdentifier",
                "optional": true
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus",
                "optional": true
              },
              {
                "id": 3,
                "name": "describedObject",
                "type": "CrossVersionObjectReference",
                "optional": true
              }
            ]
          },
          {
            "name": "PodsMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "MetricIdentifier",
                "optional": true
              },
              {
                "id": 2,
                "name": "target",
                "type": "MetricTarget",
                "optional": true
              }
            ]
          },
          {
            "name": "PodsMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "MetricIdentifier",
                "optional": true
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourceMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "target",
                "type": "MetricTarget",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourceMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/api/resource/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.autoscaling.v2beta2"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/autoscaling/v2beta2"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:batch:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "CronJob",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "CronJobSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "CronJobStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "CronJobList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "CronJob",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CronJobSpec",
            "fields": [
              {
                "id": 1,
                "name": "schedule",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "startingDeadlineSeconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 3,
                "name": "concurrencyPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "suspend",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "jobTemplate",
                "type": "JobTemplateSpec",
                "optional": true
              },
              {
                "id": 6,
                "name": "successfulJobsHistoryLimit",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "failedJobsHistoryLimit",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "CronJobStatus",
            "fields": [
              {
                "id": 1,
                "name": "active",
                "type": "k8s.io.api.core.v1.ObjectReference",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "lastScheduleTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 5,
                "name": "lastSuccessfulTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              }
            ]
          },
          {
            "name": "Job",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "JobSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "JobStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "JobCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastProbeTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 5,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "JobList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Job",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "JobSpec",
            "fields": [
              {
                "id": 1,
                "name": "parallelism",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "completions",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "activeDeadlineSeconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 7,
                "name": "backoffLimit",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 5,
                "name": "manualSelector",
                "type": "bool",
                "optional": true
              },
              {
                "id": 6,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              },
              {
                "id": 8,
                "name": "ttlSecondsAfterFinished",
                "type": "int32",
                "optional": true
              },
              {
                "id": 9,
                "name": "completionMode",
                "type": "string",
                "optional": true
              },
              {
                "id": 10,
                "name": "suspend",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "JobStatus",
            "fields": [
              {
                "id": 1,
                "name": "conditions",
                "type": "JobCondition",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "startTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 3,
                "name": "completionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "active",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "succeeded",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "failed",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "completedIndexes",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "uncountedTerminatedPods",
                "type": "UncountedTerminatedPods",
                "optional": true
              },
              {
                "id": 9,
                "name": "ready",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "JobTemplateSpec",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "JobSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "UncountedTerminatedPods",
            "fields": [
              {
                "id": 1,
                "name": "succeeded",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "failed",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.batch.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/batch/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:batch:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "CronJob",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "CronJobSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "CronJobStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "CronJobList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "CronJob",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CronJobSpec",
            "fields": [
              {
                "id": 1,
                "name": "schedule",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "startingDeadlineSeconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 3,
                "name": "concurrencyPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "suspend",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "jobTemplate",
                "type": "JobTemplateSpec",
                "optional": true
              },
              {
                "id": 6,
                "name": "successfulJobsHistoryLimit",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "failedJobsHistoryLimit",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "CronJobStatus",
            "fields": [
              {
                "id": 1,
                "name": "active",
                "type": "k8s.io.api.core.v1.ObjectReference",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "lastScheduleTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 5,
                "name": "lastSuccessfulTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              }
            ]
          },
          {
            "name": "JobTemplate",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "template",
                "type": "JobTemplateSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "JobTemplateSpec",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "k8s.io.api.batch.v1.JobSpec",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/batch/v1/generated.proto"
          },
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.batch.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/batch/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:certificates:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "CertificateSigningRequest",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "CertificateSigningRequestSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "CertificateSigningRequestStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "CertificateSigningRequestCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "message",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "lastUpdateTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 5,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              }
            ]
          },
          {
            "name": "CertificateSigningRequestList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "CertificateSigningRequest",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CertificateSigningRequestSpec",
            "fields": [
              {
                "id": 1,
                "name": "request",
                "type": "bytes",
                "optional": true
              },
              {
                "id": 7,
                "name": "signerName",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "expirationSeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "usages",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "username",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "groups",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "extra",
                  "type": "ExtraValue"
                }
              }
            ]
          },
          {
            "name": "CertificateSigningRequestStatus",
            "fields": [
              {
                "id": 1,
                "name": "conditions",
                "type": "CertificateSigningRequestCondition",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "certificate",
                "type": "bytes",
                "optional": true
              }
            ]
          },
          {
            "name": "ExtraValue",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.certificates.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/certificates/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:certificates:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "CertificateSigningRequest",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "CertificateSigningRequestSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "CertificateSigningRequestStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "CertificateSigningRequestCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "message",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "lastUpdateTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 5,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              }
            ]
          },
          {
            "name": "CertificateSigningRequestList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "CertificateSigningRequest",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CertificateSigningRequestSpec",
            "fields": [
              {
                "id": 1,
                "name": "request",
                "type": "bytes",
                "optional": true
              },
              {
                "id": 7,
                "name": "signerName",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "expirationSeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "usages",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "username",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "groups",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "extra",
                  "type": "ExtraValue"
                }
              }
            ]
          },
          {
            "name": "CertificateSigningRequestStatus",
            "fields": [
              {
                "id": 1,
                "name": "conditions",
                "type": "CertificateSigningRequestCondition",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "certificate",
                "type": "bytes",
                "optional": true
              }
            ]
          },
          {
            "name": "ExtraValue",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.certificates.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/certificates/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:coordination:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "Lease",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "LeaseSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "LeaseList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Lease",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LeaseSpec",
            "fields": [
              {
                "id": 1,
                "name": "holderIdentity",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "leaseDurationSeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "acquireTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime",
                "optional": true
              },
              {
                "id": 4,
                "name": "renewTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime",
                "optional": true
              },
              {
                "id": 5,
                "name": "leaseTransitions",
                "type": "int32",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.coordination.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/coordination/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:coordination:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "Lease",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "LeaseSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "LeaseList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Lease",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LeaseSpec",
            "fields": [
              {
                "id": 1,
                "name": "holderIdentity",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "leaseDurationSeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "acquireTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime",
                "optional": true
              },
              {
                "id": 4,
                "name": "renewTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime",
                "optional": true
              },
              {
                "id": 5,
                "name": "leaseTransitions",
                "type": "int32",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.coordination.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/coordination/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:core:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "AWSElasticBlockStoreVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "volumeID",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "partition",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "Affinity",
            "fields": [
              {
                "id": 1,
                "name": "nodeAffinity",
                "type": "NodeAffinity",
                "optional": true
              },
              {
                "id": 2,
                "name": "podAffinity",
                "type": "PodAffinity",
                "optional": true
              },
              {
                "id": 3,
                "name": "podAntiAffinity",
                "type": "PodAntiAffinity",
                "optional": true
              }
            ]
          },
          {
            "name": "AttachedVolume",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "devicePath",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "AvoidPods",
            "fields": [
              {
                "id": 1,
                "name": "preferAvoidPods",
                "type": "PreferAvoidPodsEntry",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AzureDiskVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "diskName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "diskURI",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "cachingMode",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 6,
                "name": "kind",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "AzureFilePersistentVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "secretName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "shareName",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "secretNamespace",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "AzureFileVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "secretName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "shareName",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "Binding",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "target",
                "type": "ObjectReference",
                "optional": true
              }
            ]
          },
          {
            "name": "CSIPersistentVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "driver",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "volumeHandle",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "controllerPublishSecretRef",
                "type": "SecretReference",
                "optional": true
              },
              {
                "id": 7,
                "name": "nodeStageSecretRef",
                "type": "SecretReference",
                "optional": true
              },
              {
                "id": 8,
                "name": "nodePublishSecretRef",
                "type": "SecretReference",
                "optional": true
              },
              {
                "id": 9,
                "name": "controllerExpandSecretRef",
                "type": "SecretReference",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "volumeAttributes",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "CSIVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "driver",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "nodePublishSecretRef",
                "type": "LocalObjectReference",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "volumeAttributes",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "Capabilities",
            "fields": [
              {
                "id": 1,
                "name": "add",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "drop",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CephFSPersistentVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "monitors",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "user",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "secretFile",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "secretRef",
                "type": "SecretReference",
                "optional": true
              },
              {
                "id": 6,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "CephFSVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "monitors",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "user",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "secretFile",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "secretRef",
                "type": "LocalObjectReference",
                "optional": true
              },
              {
                "id": 6,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "CinderPersistentVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "volumeID",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "secretRef",
                "type": "SecretReference",
                "optional": true
              }
            ]
          },
          {
            "name": "CinderVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "volumeID",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "secretRef",
                "type": "LocalObjectReference",
                "optional": true
              }
            ]
          },
          {
            "name": "ClientIPConfig",
            "fields": [
              {
                "id": 1,
                "name": "timeoutSeconds",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ComponentCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "message",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "error",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ComponentStatus",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "conditions",
                "type": "ComponentCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComponentStatusList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ComponentStatus",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ConfigMap",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 4,
                "name": "immutable",
                "type": "bool",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "data",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "binaryData",
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "name": "ConfigMapEnvSource",
            "fields": [
              {
                "id": 1,
                "name": "localObjectReference",
                "type": "LocalObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "optional",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "ConfigMapKeySelector",
            "fields": [
              {
                "id": 1,
                "name": "localObjectReference",
                "type": "LocalObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "key",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "optional",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "ConfigMapList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ConfigMap",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ConfigMapNodeConfigSource",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "resourceVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "kubeletConfigKey",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ConfigMapProjection",
            "fields": [
              {
                "id": 1,
                "name": "localObjectReference",
                "type": "LocalObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "KeyToPath",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "optional",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "ConfigMapVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "localObjectReference",
                "type": "LocalObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "KeyToPath",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "defaultMode",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "optional",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "Container",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "image",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "args",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "workingDir",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "ports",
                "type": "ContainerPort",
                "is_repeated": true
              },
              {
                "id": 19,
                "name": "envFrom",
                "type": "EnvFromSource",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "env",
                "type": "EnvVar",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "resources",
                "type": "ResourceRequirements",
                "optional": true
              },
              {
                "id": 9,
                "name": "volumeMounts",
                "type": "VolumeMount",
                "is_repeated": true
              },
              {
                "id": 21,
                "name": "volumeDevices",
                "type": "VolumeDevice",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "livenessProbe",
                "type": "Probe",
                "optional": true
              },
              {
                "id": 11,
                "name": "readinessProbe",
                "type": "Probe",
                "optional": true
              },
              {
                "id": 22,
                "name": "startupProbe",
                "type": "Probe",
                "optional": true
              },
              {
                "id": 12,
                "name": "lifecycle",
                "type": "Lifecycle",
                "optional": true
              },
              {
                "id": 13,
                "name": "terminationMessagePath",
                "type": "string",
                "optional": true
              },
              {
                "id": 20,
                "name": "terminationMessagePolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 14,
                "name": "imagePullPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 15,
                "name": "securityContext",
                "type": "SecurityContext",
                "optional": true
              },
              {
                "id": 16,
                "name": "stdin",
                "type": "bool",
                "optional": true
              },
              {
                "id": 17,
                "name": "stdinOnce",
                "type": "bool",
                "optional": true
              },
              {
                "id": 18,
                "name": "tty",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "ContainerImage",
            "fields": [
              {
                "id": 1,
                "name": "names",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "sizeBytes",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "ContainerPort",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "hostPort",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "containerPort",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "protocol",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "hostIP",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ContainerState",
            "fields": [
              {
                "id": 1,
                "name": "waiting",
                "type": "ContainerStateWaiting",
                "optional": true
              },
              {
                "id": 2,
                "name": "running",
                "type": "ContainerStateRunning",
                "optional": true
              },
              {
                "id": 3,
                "name": "terminated",
                "type": "ContainerStateTerminated",
                "optional": true
              }
            ]
          },
          {
            "name": "ContainerStateRunning",
            "fields": [
              {
                "id": 1,
                "name": "startedAt",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              }
            ]
          },
          {
            "name": "ContainerStateTerminated",
            "fields": [
              {
                "id": 1,
                "name": "exitCode",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "signal",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "message",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "startedAt",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 6,
                "name": "finishedAt",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 7,
                "name": "containerID",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ContainerStateWaiting",
            "fields": [
              {
                "id": 1,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ContainerStatus",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "state",
                "type": "ContainerState",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastState",
                "type": "ContainerState",
                "optional": true
              },
              {
                "id": 4,
                "name": "ready",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "restartCount",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "image",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "imageID",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "containerID",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "started",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "DaemonEndpoint",
            "fields": [
              {
                "id": 1,
                "name": "Port",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "DownwardAPIProjection",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "DownwardAPIVolumeFile",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DownwardAPIVolumeFile",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "fieldRef",
                "type": "ObjectFieldSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "resourceFieldRef",
                "type": "ResourceFieldSelector",
                "optional": true
              },
              {
                "id": 4,
                "name": "mode",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "DownwardAPIVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "DownwardAPIVolumeFile",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "defaultMode",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "EmptyDirVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "medium",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "sizeLimit",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "EndpointAddress",
            "fields": [
              {
                "id": 1,
                "name": "ip",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "hostname",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "nodeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "targetRef",
                "type": "ObjectReference",
                "optional": true
              }
            ]
          },
          {
            "name": "EndpointPort",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "port",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "appProtocol",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "EndpointSubset",
            "fields": [
              {
                "id": 1,
                "name": "addresses",
                "type": "EndpointAddress",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "notReadyAddresses",
                "type": "EndpointAddress",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "ports",
                "type": "EndpointPort",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Endpoints",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "subsets",
                "type": "EndpointSubset",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EndpointsList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Endpoints",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnvFromSource",
            "fields": [
              {
                "id": 1,
                "name": "prefix",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "configMapRef",
                "type": "ConfigMapEnvSource",
                "optional": true
              },
              {
                "id": 3,
                "name": "secretRef",
                "type": "SecretEnvSource",
                "optional": true
              }
            ]
          },
          {
            "name": "EnvVar",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "value",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "valueFrom",
                "type": "EnvVarSource",
                "optional": true
              }
            ]
          },
          {
            "name": "EnvVarSource",
            "fields": [
              {
                "id": 1,
                "name": "fieldRef",
                "type": "ObjectFieldSelector",
                "optional": true
              },
              {
                "id": 2,
                "name": "resourceFieldRef",
                "type": "ResourceFieldSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "configMapKeyRef",
                "type": "ConfigMapKeySelector",
                "optional": true
              },
              {
                "id": 4,
                "name": "secretKeyRef",
                "type": "SecretKeySelector",
                "optional": true
              }
            ]
          },
          {
            "name": "EphemeralContainer",
            "fields": [
              {
                "id": 1,
                "name": "ephemeralContainerCommon",
                "type": "EphemeralContainerCommon",
                "optional": true
              },
              {
                "id": 2,
                "name": "targetContainerName",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "EphemeralContainerCommon",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "image",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "args",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "workingDir",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "ports",
                "type": "ContainerPort",
                "is_repeated": true
              },
              {
                "id": 19,
                "name": "envFrom",
                "type": "EnvFromSource",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "env",
                "type": "EnvVar",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "resources",
                "type": "ResourceRequirements",
                "optional": true
              },
              {
                "id": 9,
                "name": "volumeMounts",
                "type": "VolumeMount",
                "is_repeated": true
              },
              {
                "id": 21,
                "name": "volumeDevices",
                "type": "VolumeDevice",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "livenessProbe",
                "type": "Probe",
                "optional": true
              },
              {
                "id": 11,
                "name": "readinessProbe",
                "type": "Probe",
                "optional": true
              },
              {
                "id": 22,
                "name": "startupProbe",
                "type": "Probe",
                "optional": true
              },
              {
                "id": 12,
                "name": "lifecycle",
                "type": "Lifecycle",
                "optional": true
              },
              {
                "id": 13,
                "name": "terminationMessagePath",
                "type": "string",
                "optional": true
              },
              {
                "id": 20,
                "name": "terminationMessagePolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 14,
                "name": "imagePullPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 15,
                "name": "securityContext",
                "type": "SecurityContext",
                "optional": true
              },
              {
                "id": 16,
                "name": "stdin",
                "type": "bool",
                "optional": true
              },
              {
                "id": 17,
                "name": "stdinOnce",
                "type": "bool",
                "optional": true
              },
              {
                "id": 18,
                "name": "tty",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "EphemeralVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "volumeClaimTemplate",
                "type": "PersistentVolumeClaimTemplate",
                "optional": true
              }
            ]
          },
          {
            "name": "Event",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "involvedObject",
                "type": "ObjectReference",
                "optional": true
              },
              {
                "id": 3,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "message",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "source",
                "type": "EventSource",
                "optional": true
              },
              {
                "id": 6,
                "name": "firstTimestamp",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 7,
                "name": "lastTimestamp",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 8,
                "name": "count",
                "type": "int32",
                "optional": true
              },
              {
                "id": 9,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 10,
                "name": "eventTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime",
                "optional": true
              },
              {
                "id": 11,
                "name": "series",
                "type": "EventSeries",
                "optional": true
              },
              {
                "id": 12,
                "name": "action",
                "type": "string",
                "optional": true
              },
              {
                "id": 13,
                "name": "related",
                "type": "ObjectReference",
                "optional": true
              },
              {
                "id": 14,
                "name": "reportingComponent",
                "type": "string",
                "optional": true
              },
              {
                "id": 15,
                "name": "reportingInstance",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "EventList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Event",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EventSeries",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "lastObservedTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime",
                "optional": true
              }
            ]
          },
          {
            "name": "EventSource",
            "fields": [
              {
                "id": 1,
                "name": "component",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "host",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ExecAction",
            "fields": [
              {
                "id": 1,
                "name": "command",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FCVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "targetWWNs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "lun",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "wwids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FlexPersistentVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "driver",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "secretRef",
                "type": "SecretReference",
                "optional": true
              },
              {
                "id": 4,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "options",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "FlexVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "driver",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "secretRef",
                "type": "LocalObjectReference",
                "optional": true
              },
              {
                "id": 4,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "options",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "FlockerVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "datasetName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "datasetUUID",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "GCEPersistentDiskVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "pdName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "partition",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "GRPCAction",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "service",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "GitRepoVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "repository",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "revision",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "directory",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "GlusterfsPersistentVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "endpoints",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "endpointsNamespace",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "GlusterfsVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "endpoints",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "HTTPGetAction",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "port",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 3,
                "name": "host",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "scheme",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "httpHeaders",
                "type": "HTTPHeader",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HTTPHeader",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "value",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "HostAlias",
            "fields": [
              {
                "id": 1,
                "name": "ip",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "hostnames",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HostPathVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "type",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ISCSIPersistentVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "targetPortal",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "iqn",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lun",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "iscsiInterface",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 7,
                "name": "portals",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "chapAuthDiscovery",
                "type": "bool",
                "optional": true
              },
              {
                "id": 11,
                "name": "chapAuthSession",
                "type": "bool",
                "optional": true
              },
              {
                "id": 10,
                "name": "secretRef",
                "type": "SecretReference",
                "optional": true
              },
              {
                "id": 12,
                "name": "initiatorName",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ISCSIVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "targetPortal",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "iqn",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lun",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "iscsiInterface",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 7,
                "name": "portals",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "chapAuthDiscovery",
                "type": "bool",
                "optional": true
              },
              {
                "id": 11,
                "name": "chapAuthSession",
                "type": "bool",
                "optional": true
              },
              {
                "id": 10,
                "name": "secretRef",
                "type": "LocalObjectReference",
                "optional": true
              },
              {
                "id": 12,
                "name": "initiatorName",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "KeyToPath",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "mode",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "Lifecycle",
            "fields": [
              {
                "id": 1,
                "name": "postStart",
                "type": "LifecycleHandler",
                "optional": true
              },
              {
                "id": 2,
                "name": "preStop",
                "type": "LifecycleHandler",
                "optional": true
              }
            ]
          },
          {
            "name": "LifecycleHandler",
            "fields": [
              {
                "id": 1,
                "name": "exec",
                "type": "ExecAction",
                "optional": true
              },
              {
                "id": 2,
                "name": "httpGet",
                "type": "HTTPGetAction",
                "optional": true
              },
              {
                "id": 3,
                "name": "tcpSocket",
                "type": "TCPSocketAction",
                "optional": true
              }
            ]
          },
          {
            "name": "LimitRange",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "LimitRangeSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "LimitRangeItem",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "max",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "min",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "default",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "defaultRequest",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "maxLimitRequestRatio",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              }
            ]
          },
          {
            "name": "LimitRangeList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "LimitRange",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LimitRangeSpec",
            "fields": [
              {
                "id": 1,
                "name": "limits",
                "type": "LimitRangeItem",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "List",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "k8s.io.apimachinery.pkg.runtime.RawExtension",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LoadBalancerIngress",
            "fields": [
              {
                "id": 1,
                "name": "ip",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "hostname",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "ports",
                "type": "PortStatus",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LoadBalancerStatus",
            "fields": [
              {
                "id": 1,
                "name": "ingress",
                "type": "LoadBalancerIngress",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LocalObjectReference",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "LocalVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "fsType",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "NFSVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "server",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "Namespace",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "NamespaceSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "NamespaceStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "NamespaceCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 5,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "NamespaceList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Namespace",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NamespaceSpec",
            "fields": [
              {
                "id": 1,
                "name": "finalizers",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NamespaceStatus",
            "fields": [
              {
                "id": 1,
                "name": "phase",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "conditions",
                "type": "NamespaceCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Node",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "NodeSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "NodeStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "NodeAddress",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "address",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "NodeAffinity",
            "fields": [
              {
                "id": 1,
                "name": "requiredDuringSchedulingIgnoredDuringExecution",
                "type": "NodeSelector",
                "optional": true
              },
              {
                "id": 2,
                "name": "preferredDuringSchedulingIgnoredDuringExecution",
                "type": "PreferredSchedulingTerm",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NodeCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastHeartbeatTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 5,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "NodeConfigSource",
            "fields": [
              {
                "id": 2,
                "name": "configMap",
                "type": "ConfigMapNodeConfigSource",
                "optional": true
              }
            ]
          },
          {
            "name": "NodeConfigStatus",
            "fields": [
              {
                "id": 1,
                "name": "assigned",
                "type": "NodeConfigSource",
                "optional": true
              },
              {
                "id": 2,
                "name": "active",
                "type": "NodeConfigSource",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastKnownGood",
                "type": "NodeConfigSource",
                "optional": true
              },
              {
                "id": 4,
                "name": "error",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "NodeDaemonEndpoints",
            "fields": [
              {
                "id": 1,
                "name": "kubeletEndpoint",
                "type": "DaemonEndpoint",
                "optional": true
              }
            ]
          },
          {
            "name": "NodeList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Node",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NodeProxyOptions",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "NodeResources",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "capacity",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              }
            ]
          },
          {
            "name": "NodeSelector",
            "fields": [
              {
                "id": 1,
                "name": "nodeSelectorTerms",
                "type": "NodeSelectorTerm",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NodeSelectorRequirement",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "operator",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NodeSelectorTerm",
            "fields": [
              {
                "id": 1,
                "name": "matchExpressions",
                "type": "NodeSelectorRequirement",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "matchFields",
                "type": "NodeSelectorRequirement",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NodeSpec",
            "fields": [
              {
                "id": 1,
                "name": "podCIDR",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "podCIDRs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "providerID",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "unschedulable",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "taints",
                "type": "Taint",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "configSource",
                "type": "NodeConfigSource",
                "optional": true
              },
              {
                "id": 2,
                "name": "externalID",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "NodeStatus",
            "fields": [
              {
                "id": 3,
                "name": "phase",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "conditions",
                "type": "NodeCondition",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "addresses",
                "type": "NodeAddress",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "daemonEndpoints",
                "type": "NodeDaemonEndpoints",
                "optional": true
              },
              {
                "id": 7,
                "name": "nodeInfo",
                "type": "NodeSystemInfo",
                "optional": true
              },
              {
                "id": 8,
                "name": "images",
                "type": "ContainerImage",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "volumesInUse",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "volumesAttached",
                "type": "AttachedVolume",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "config",
                "type": "NodeConfigStatus",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "capacity",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "allocatable",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              }
            ]
          },
          {
            "name": "NodeSystemInfo",
            "fields": [
              {
                "id": 1,
                "name": "machineID",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "systemUUID",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "bootID",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "kernelVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "osImage",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "containerRuntimeVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "kubeletVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "kubeProxyVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "operatingSystem",
                "type": "string",
                "optional": true
              },
              {
                "id": 10,
                "name": "architecture",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ObjectFieldSelector",
            "fields": [
              {
                "id": 1,
                "name": "apiVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "fieldPath",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ObjectReference",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "apiVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "resourceVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "fieldPath",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PersistentVolume",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "PersistentVolumeSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "PersistentVolumeStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "PersistentVolumeClaim",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "PersistentVolumeClaimSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "PersistentVolumeClaimStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "PersistentVolumeClaimCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastProbeTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 5,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PersistentVolumeClaimList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PersistentVolumeClaim",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PersistentVolumeClaimSpec",
            "fields": [
              {
                "id": 1,
                "name": "accessModes",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 2,
                "name": "resources",
                "type": "ResourceRequirements",
                "optional": true
              },
              {
                "id": 3,
                "name": "volumeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "storageClassName",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "volumeMode",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "dataSource",
                "type": "TypedLocalObjectReference",
                "optional": true
              },
              {
                "id": 8,
                "name": "dataSourceRef",
                "type": "TypedLocalObjectReference",
                "optional": true
              }
            ]
          },
          {
            "name": "PersistentVolumeClaimStatus",
            "fields": [
              {
                "id": 1,
                "name": "phase",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "accessModes",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "conditions",
                "type": "PersistentVolumeClaimCondition",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "resizeStatus",
                "type": "string",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "capacity",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "allocatedResources",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              }
            ]
          },
          {
            "name": "PersistentVolumeClaimTemplate",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "PersistentVolumeClaimSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "PersistentVolumeClaimVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "claimName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "PersistentVolumeList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PersistentVolume",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PersistentVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "gcePersistentDisk",
                "type": "GCEPersistentDiskVolumeSource",
                "optional": true
              },
              {
                "id": 2,
                "name": "awsElasticBlockStore",
                "type": "AWSElasticBlockStoreVolumeSource",
                "optional": true
              },
              {
                "id": 3,
                "name": "hostPath",
                "type": "HostPathVolumeSource",
                "optional": true
              },
              {
                "id": 4,
                "name": "glusterfs",
                "type": "GlusterfsPersistentVolumeSource",
                "optional": true
              },
              {
                "id": 5,
                "name": "nfs",
                "type": "NFSVolumeSource",
                "optional": true
              },
              {
                "id": 6,
                "name": "rbd",
                "type": "RBDPersistentVolumeSource",
                "optional": true
              },
              {
                "id": 7,
                "name": "iscsi",
                "type": "ISCSIPersistentVolumeSource",
                "optional": true
              },
              {
                "id": 8,
                "name": "cinder",
                "type": "CinderPersistentVolumeSource",
                "optional": true
              },
              {
                "id": 9,
                "name": "cephfs",
                "type": "CephFSPersistentVolumeSource",
                "optional": true
              },
              {
                "id": 10,
                "name": "fc",
                "type": "FCVolumeSource",
                "optional": true
              },
              {
                "id": 11,
                "name": "flocker",
                "type": "FlockerVolumeSource",
                "optional": true
              },
              {
                "id": 12,
                "name": "flexVolume",
                "type": "FlexPersistentVolumeSource",
                "optional": true
              },
              {
                "id": 13,
                "name": "azureFile",
                "type": "AzureFilePersistentVolumeSource",
                "optional": true
              },
              {
                "id": 14,
                "name": "vsphereVolume",
                "type": "VsphereVirtualDiskVolumeSource",
                "optional": true
              },
              {
                "id": 15,
                "name": "quobyte",
                "type": "QuobyteVolumeSource",
                "optional": true
              },
              {
                "id": 16,
                "name": "azureDisk",
                "type": "AzureDiskVolumeSource",
                "optional": true
              },
              {
                "id": 17,
                "name": "photonPersistentDisk",
                "type": "PhotonPersistentDiskVolumeSource",
                "optional": true
              },
              {
                "id": 18,
                "name": "portworxVolume",
                "type": "PortworxVolumeSource",
                "optional": true
              },
              {
                "id": 19,
                "name": "scaleIO",
                "type": "ScaleIOPersistentVolumeSource",
                "optional": true
              },
              {
                "id": 20,
                "name": "local",
                "type": "LocalVolumeSource",
                "optional": true
              },
              {
                "id": 21,
                "name": "storageos",
                "type": "StorageOSPersistentVolumeSource",
                "optional": true
              },
              {
                "id": 22,
                "name": "csi",
                "type": "CSIPersistentVolumeSource",
                "optional": true
              }
            ]
          },
          {
            "name": "PersistentVolumeSpec",
            "fields": [
              {
                "id": 2,
                "name": "persistentVolumeSource",
                "type": "PersistentVolumeSource",
                "optional": true
              },
              {
                "id": 3,
                "name": "accessModes",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "claimRef",
                "type": "ObjectReference",
                "optional": true
              },
              {
                "id": 5,
                "name": "persistentVolumeReclaimPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "storageClassName",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "mountOptions",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "volumeMode",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "nodeAffinity",
                "type": "VolumeNodeAffinity",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "capacity",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              }
            ]
          },
          {
            "name": "PersistentVolumeStatus",
            "fields": [
              {
                "id": 1,
                "name": "phase",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "message",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "reason",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PhotonPersistentDiskVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "pdID",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "fsType",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Pod",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "PodSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "PodStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "PodAffinity",
            "fields": [
              {
                "id": 1,
                "name": "requiredDuringSchedulingIgnoredDuringExecution",
                "type": "PodAffinityTerm",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "preferredDuringSchedulingIgnoredDuringExecution",
                "type": "WeightedPodAffinityTerm",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodAffinityTerm",
            "fields": [
              {
                "id": 1,
                "name": "labelSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 2,
                "name": "namespaces",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "topologyKey",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "namespaceSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              }
            ]
          },
          {
            "name": "PodAntiAffinity",
            "fields": [
              {
                "id": 1,
                "name": "requiredDuringSchedulingIgnoredDuringExecution",
                "type": "PodAffinityTerm",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "preferredDuringSchedulingIgnoredDuringExecution",
                "type": "WeightedPodAffinityTerm",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodAttachOptions",
            "fields": [
              {
                "id": 1,
                "name": "stdin",
                "type": "bool",
                "optional": true
              },
              {
                "id": 2,
                "name": "stdout",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "stderr",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "tty",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "container",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PodCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastProbeTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 5,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PodDNSConfig",
            "fields": [
              {
                "id": 1,
                "name": "nameservers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "searches",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "PodDNSConfigOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodDNSConfigOption",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "value",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PodExecOptions",
            "fields": [
              {
                "id": 1,
                "name": "stdin",
                "type": "bool",
                "optional": true
              },
              {
                "id": 2,
                "name": "stdout",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "stderr",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "tty",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "container",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "command",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodIP",
            "fields": [
              {
                "id": 1,
                "name": "ip",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PodList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Pod",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodLogOptions",
            "fields": [
              {
                "id": 1,
                "name": "container",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "follow",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "previous",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "sinceSeconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 5,
                "name": "sinceTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 6,
                "name": "timestamps",
                "type": "bool",
                "optional": true
              },
              {
                "id": 7,
                "name": "tailLines",
                "type": "int64",
                "optional": true
              },
              {
                "id": 8,
                "name": "limitBytes",
                "type": "int64",
                "optional": true
              },
              {
                "id": 9,
                "name": "insecureSkipTLSVerifyBackend",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "PodOS",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PodPortForwardOptions",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "int32",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodProxyOptions",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PodReadinessGate",
            "fields": [
              {
                "id": 1,
                "name": "conditionType",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PodSecurityContext",
            "fields": [
              {
                "id": 1,
                "name": "seLinuxOptions",
                "type": "SELinuxOptions",
                "optional": true
              },
              {
                "id": 8,
                "name": "windowsOptions",
                "type": "WindowsSecurityContextOptions",
                "optional": true
              },
              {
                "id": 2,
                "name": "runAsUser",
                "type": "int64",
                "optional": true
              },
              {
                "id": 6,
                "name": "runAsGroup",
                "type": "int64",
                "optional": true
              },
              {
                "id": 3,
                "name": "runAsNonRoot",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "supplementalGroups",
                "type": "int64",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "fsGroup",
                "type": "int64",
                "optional": true
              },
              {
                "id": 7,
                "name": "sysctls",
                "type": "Sysctl",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "fsGroupChangePolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 10,
                "name": "seccompProfile",
                "type": "SeccompProfile",
                "optional": true
              }
            ]
          },
          {
            "name": "PodSignature",
            "fields": [
              {
                "id": 1,
                "name": "podController",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference",
                "optional": true
              }
            ]
          },
          {
            "name": "PodSpec",
            "fields": [
              {
                "id": 1,
                "name": "volumes",
                "type": "Volume",
                "is_repeated": true
              },
              {
                "id": 20,
                "name": "initContainers",
                "type": "Container",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "containers",
                "type": "Container",
                "is_repeated": true
              },
              {
                "id": 34,
                "name": "ephemeralContainers",
                "type": "EphemeralContainer",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "restartPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "terminationGracePeriodSeconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 5,
                "name": "activeDeadlineSeconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 6,
                "name": "dnsPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "serviceAccountName",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "serviceAccount",
                "type": "string",
                "optional": true
              },
              {
                "id": 21,
                "name": "automountServiceAccountToken",
                "type": "bool",
                "optional": true
              },
              {
                "id": 10,
                "name": "nodeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 11,
                "name": "hostNetwork",
                "type": "bool",
                "optional": true
              },
              {
                "id": 12,
                "name": "hostPID",
                "type": "bool",
                "optional": true
              },
              {
                "id": 13,
                "name": "hostIPC",
                "type": "bool",
                "optional": true
              },
              {
                "id": 27,
                "name": "shareProcessNamespace",
                "type": "bool",
                "optional": true
              },
              {
                "id": 14,
                "name": "securityContext",
                "type": "PodSecurityContext",
                "optional": true
              },
              {
                "id": 15,
                "name": "imagePullSecrets",
                "type": "LocalObjectReference",
                "is_repeated": true
              },
              {
                "id": 16,
                "name": "hostname",
                "type": "string",
                "optional": true
              },
              {
                "id": 17,
                "name": "subdomain",
                "type": "string",
                "optional": true
              },
              {
                "id": 18,
                "name": "affinity",
                "type": "Affinity",
                "optional": true
              },
              {
                "id": 19,
                "name": "schedulerName",
                "type": "string",
                "optional": true
              },
              {
                "id": 22,
                "name": "tolerations",
                "type": "Toleration",
                "is_repeated": true
              },
              {
                "id": 23,
                "name": "hostAliases",
                "type": "HostAlias",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "priorityClassName",
                "type": "string",
                "optional": true
              },
              {
                "id": 25,
                "name": "priority",
                "type": "int32",
                "optional": true
              },
              {
                "id": 26,
                "name": "dnsConfig",
                "type": "PodDNSConfig",
                "optional": true
              },
              {
                "id": 28,
                "name": "readinessGates",
                "type": "PodReadinessGate",
                "is_repeated": true
              },
              {
                "id": 29,
                "name": "runtimeClassName",
                "type": "string",
                "optional": true
              },
              {
                "id": 30,
                "name": "enableServiceLinks",
                "type": "bool",
                "optional": true
              },
              {
                "id": 31,
                "name": "preemptionPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 33,
                "name": "topologySpreadConstraints",
                "type": "TopologySpreadConstraint",
                "is_repeated": true
              },
              {
                "id": 35,
                "name": "setHostnameAsFQDN",
                "type": "bool",
                "optional": true
              },
              {
                "id": 36,
                "name": "os",
                "type": "PodOS",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "nodeSelector",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 32,
                  "name": "overhead",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              }
            ]
          },
          {
            "name": "PodStatus",
            "fields": [
              {
                "id": 1,
                "name": "phase",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "conditions",
                "type": "PodCondition",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "message",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 11,
                "name": "nominatedNodeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "hostIP",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "podIP",
                "type": "string",
                "optional": true
              },
              {
                "id": 12,
                "name": "podIPs",
                "type": "PodIP",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "startTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 10,
                "name": "initContainerStatuses",
                "type": "ContainerStatus",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "containerStatuses",
                "type": "ContainerStatus",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "qosClass",
                "type": "string",
                "optional": true
              },
              {
                "id": 13,
                "name": "ephemeralContainerStatuses",
                "type": "ContainerStatus",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodStatusResult",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "PodStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "PodTemplate",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "template",
                "type": "PodTemplateSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "PodTemplateList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PodTemplate",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodTemplateSpec",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "PodSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "PortStatus",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "error",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PortworxVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "volumeID",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "Preconditions",
            "fields": [
              {
                "id": 1,
                "name": "uid",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PreferAvoidPodsEntry",
            "fields": [
              {
                "id": 1,
                "name": "podSignature",
                "type": "PodSignature",
                "optional": true
              },
              {
                "id": 2,
                "name": "evictionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 3,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PreferredSchedulingTerm",
            "fields": [
              {
                "id": 1,
                "name": "weight",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "preference",
                "type": "NodeSelectorTerm",
                "optional": true
              }
            ]
          },
          {
            "name": "Probe",
            "fields": [
              {
                "id": 1,
                "name": "handler",
                "type": "ProbeHandler",
                "optional": true
              },
              {
                "id": 2,
                "name": "initialDelaySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "timeoutSeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "periodSeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "successThreshold",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "failureThreshold",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "terminationGracePeriodSeconds",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "ProbeHandler",
            "fields": [
              {
                "id": 1,
                "name": "exec",
                "type": "ExecAction",
                "optional": true
              },
              {
                "id": 2,
                "name": "httpGet",
                "type": "HTTPGetAction",
                "optional": true
              },
              {
                "id": 3,
                "name": "tcpSocket",
                "type": "TCPSocketAction",
                "optional": true
              },
              {
                "id": 4,
                "name": "grpc",
                "type": "GRPCAction",
                "optional": true
              }
            ]
          },
          {
            "name": "ProjectedVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "sources",
                "type": "VolumeProjection",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "defaultMode",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "QuobyteVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "registry",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "volume",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "user",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "group",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "tenant",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "RBDPersistentVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "monitors",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "image",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "pool",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "user",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "keyring",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "secretRef",
                "type": "SecretReference",
                "optional": true
              },
              {
                "id": 8,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "RBDVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "monitors",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "image",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "pool",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "user",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "keyring",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "secretRef",
                "type": "LocalObjectReference",
                "optional": true
              },
              {
                "id": 8,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "RangeAllocation",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "range",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "data",
                "type": "bytes",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicationController",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "ReplicationControllerSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "ReplicationControllerStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicationControllerCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicationControllerList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ReplicationController",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReplicationControllerSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "template",
                "type": "PodTemplateSpec",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "selector",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ReplicationControllerStatus",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "fullyLabeledReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "readyReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "availableReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 6,
                "name": "conditions",
                "type": "ReplicationControllerCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ResourceFieldSelector",
            "fields": [
              {
                "id": 1,
                "name": "containerName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "resource",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "divisor",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourceQuota",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "ResourceQuotaSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "ResourceQuotaStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourceQuotaList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ResourceQuota",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ResourceQuotaSpec",
            "fields": [
              {
                "id": 2,
                "name": "scopes",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "scopeSelector",
                "type": "ScopeSelector",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "hard",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              }
            ]
          },
          {
            "name": "ResourceQuotaStatus",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "hard",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "used",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              }
            ]
          },
          {
            "name": "ResourceRequirements",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "limits",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "requests",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              }
            ]
          },
          {
            "name": "SELinuxOptions",
            "fields": [
              {
                "id": 1,
                "name": "user",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "role",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "level",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ScaleIOPersistentVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "gateway",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "system",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "secretRef",
                "type": "SecretReference",
                "optional": true
              },
              {
                "id": 4,
                "name": "sslEnabled",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "protectionDomain",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "storagePool",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "storageMode",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "volumeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 10,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "ScaleIOVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "gateway",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "system",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "secretRef",
                "type": "LocalObjectReference",
                "optional": true
              },
              {
                "id": 4,
                "name": "sslEnabled",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "protectionDomain",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "storagePool",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "storageMode",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "volumeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 10,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "ScopeSelector",
            "fields": [
              {
                "id": 1,
                "name": "matchExpressions",
                "type": "ScopedResourceSelectorRequirement",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScopedResourceSelectorRequirement",
            "fields": [
              {
                "id": 1,
                "name": "scopeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "operator",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SeccompProfile",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "localhostProfile",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Secret",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 5,
                "name": "immutable",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "type",
                "type": "string",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "data",
                  "type": "bytes"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "stringData",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "SecretEnvSource",
            "fields": [
              {
                "id": 1,
                "name": "localObjectReference",
                "type": "LocalObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "optional",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "SecretKeySelector",
            "fields": [
              {
                "id": 1,
                "name": "localObjectReference",
                "type": "LocalObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "key",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "optional",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "SecretList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Secret",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SecretProjection",
            "fields": [
              {
                "id": 1,
                "name": "localObjectReference",
                "type": "LocalObjectReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "KeyToPath",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "optional",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "SecretReference",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "SecretVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "secretName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "KeyToPath",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "defaultMode",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "optional",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "SecurityContext",
            "fields": [
              {
                "id": 1,
                "name": "capabilities",
                "type": "Capabilities",
                "optional": true
              },
              {
                "id": 2,
                "name": "privileged",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "seLinuxOptions",
                "type": "SELinuxOptions",
                "optional": true
              },
              {
                "id": 10,
                "name": "windowsOptions",
                "type": "WindowsSecurityContextOptions",
                "optional": true
              },
              {
                "id": 4,
                "name": "runAsUser",
                "type": "int64",
                "optional": true
              },
              {
                "id": 8,
                "name": "runAsGroup",
                "type": "int64",
                "optional": true
              },
              {
                "id": 5,
                "name": "runAsNonRoot",
                "type": "bool",
                "optional": true
              },
              {
                "id": 6,
                "name": "readOnlyRootFilesystem",
                "type": "bool",
                "optional": true
              },
              {
                "id": 7,
                "name": "allowPrivilegeEscalation",
                "type": "bool",
                "optional": true
              },
              {
                "id": 9,
                "name": "procMount",
                "type": "string",
                "optional": true
              },
              {
                "id": 11,
                "name": "seccompProfile",
                "type": "SeccompProfile",
                "optional": true
              }
            ]
          },
          {
            "name": "SerializedReference",
            "fields": [
              {
                "id": 1,
                "name": "reference",
                "type": "ObjectReference",
                "optional": true
              }
            ]
          },
          {
            "name": "Service",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "ServiceSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "ServiceStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ServiceAccount",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "secrets",
                "type": "ObjectReference",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "imagePullSecrets",
                "type": "LocalObjectReference",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "automountServiceAccountToken",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "ServiceAccountList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ServiceAccount",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceAccountTokenProjection",
            "fields": [
              {
                "id": 1,
                "name": "audience",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "expirationSeconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 3,
                "name": "path",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ServiceList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Service",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServicePort",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "appProtocol",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "port",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "targetPort",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 5,
                "name": "nodePort",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ServiceProxyOptions",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ServiceSpec",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "ServicePort",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "clusterIP",
                "type": "string",
                "optional": true
              },
              {
                "id": 18,
                "name": "clusterIPs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "externalIPs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "sessionAffinity",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "loadBalancerIP",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "loadBalancerSourceRanges",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "externalName",
                "type": "string",
                "optional": true
              },
              {
                "id": 11,
                "name": "externalTrafficPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 12,
                "name": "healthCheckNodePort",
                "type": "int32",
                "optional": true
              },
              {
                "id": 13,
                "name": "publishNotReadyAddresses",
                "type": "bool",
                "optional": true
              },
              {
                "id": 14,
                "name": "sessionAffinityConfig",
                "type": "SessionAffinityConfig",
                "optional": true
              },
              {
                "id": 19,
                "name": "ipFamilies",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 17,
                "name": "ipFamilyPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 20,
                "name": "allocateLoadBalancerNodePorts",
                "type": "bool",
                "optional": true
              },
              {
                "id": 21,
                "name": "loadBalancerClass",
                "type": "string",
                "optional": true
              },
              {
                "id": 22,
                "name": "internalTrafficPolicy",
                "type": "string",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "selector",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ServiceStatus",
            "fields": [
              {
                "id": 1,
                "name": "loadBalancer",
                "type": "LoadBalancerStatus",
                "optional": true
              },
              {
                "id": 2,
                "name": "conditions",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Condition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SessionAffinityConfig",
            "fields": [
              {
                "id": 1,
                "name": "clientIP",
                "type": "ClientIPConfig",
                "optional": true
              }
            ]
          },
          {
            "name": "StorageOSPersistentVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "volumeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "volumeNamespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "secretRef",
                "type": "ObjectReference",
                "optional": true
              }
            ]
          },
          {
            "name": "StorageOSVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "volumeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "volumeNamespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "secretRef",
                "type": "LocalObjectReference",
                "optional": true
              }
            ]
          },
          {
            "name": "Sysctl",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "value",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "TCPSocketAction",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 2,
                "name": "host",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Taint",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "value",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "effect",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "timeAdded",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              }
            ]
          },
          {
            "name": "Toleration",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "operator",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "value",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "effect",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "tolerationSeconds",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "TopologySelectorLabelRequirement",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TopologySelectorTerm",
            "fields": [
              {
                "id": 1,
                "name": "matchLabelExpressions",
                "type": "TopologySelectorLabelRequirement",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TopologySpreadConstraint",
            "fields": [
              {
                "id": 1,
                "name": "maxSkew",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "topologyKey",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "whenUnsatisfiable",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "labelSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              }
            ]
          },
          {
            "name": "TypedLocalObjectReference",
            "fields": [
              {
                "id": 1,
                "name": "apiGroup",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Volume",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "volumeSource",
                "type": "VolumeSource",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeDevice",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "devicePath",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeMount",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "mountPath",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "subPath",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "mountPropagation",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "subPathExpr",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeNodeAffinity",
            "fields": [
              {
                "id": 1,
                "name": "required",
                "type": "NodeSelector",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeProjection",
            "fields": [
              {
                "id": 1,
                "name": "secret",
                "type": "SecretProjection",
                "optional": true
              },
              {
                "id": 2,
                "name": "downwardAPI",
                "type": "DownwardAPIProjection",
                "optional": true
              },
              {
                "id": 3,
                "name": "configMap",
                "type": "ConfigMapProjection",
                "optional": true
              },
              {
                "id": 4,
                "name": "serviceAccountToken",
                "type": "ServiceAccountTokenProjection",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "hostPath",
                "type": "HostPathVolumeSource",
                "optional": true
              },
              {
                "id": 2,
                "name": "emptyDir",
                "type": "EmptyDirVolumeSource",
                "optional": true
              },
              {
                "id": 3,
                "name": "gcePersistentDisk",
                "type": "GCEPersistentDiskVolumeSource",
                "optional": true
              },
              {
                "id": 4,
                "name": "awsElasticBlockStore",
                "type": "AWSElasticBlockStoreVolumeSource",
                "optional": true
              },
              {
                "id": 5,
                "name": "gitRepo",
                "type": "GitRepoVolumeSource",
                "optional": true
              },
              {
                "id": 6,
                "name": "secret",
                "type": "SecretVolumeSource",
                "optional": true
              },
              {
                "id": 7,
                "name": "nfs",
                "type": "NFSVolumeSource",
                "optional": true
              },
              {
                "id": 8,
                "name": "iscsi",
                "type": "ISCSIVolumeSource",
                "optional": true
              },
              {
                "id": 9,
                "name": "glusterfs",
                "type": "GlusterfsVolumeSource",
                "optional": true
              },
              {
                "id": 10,
                "name": "persistentVolumeClaim",
                "type": "PersistentVolumeClaimVolumeSource",
                "optional": true
              },
              {
                "id": 11,
                "name": "rbd",
                "type": "RBDVolumeSource",
                "optional": true
              },
              {
                "id": 12,
                "name": "flexVolume",
                "type": "FlexVolumeSource",
                "optional": true
              },
              {
                "id": 13,
                "name": "cinder",
                "type": "CinderVolumeSource",
                "optional": true
              },
              {
                "id": 14,
                "name": "cephfs",
                "type": "CephFSVolumeSource",
                "optional": true
              },
              {
                "id": 15,
                "name": "flocker",
                "type": "FlockerVolumeSource",
                "optional": true
              },
              {
                "id": 16,
                "name": "downwardAPI",
                "type": "DownwardAPIVolumeSource",
                "optional": true
              },
              {
                "id": 17,
                "name": "fc",
                "type": "FCVolumeSource",
                "optional": true
              },
              {
                "id": 18,
                "name": "azureFile",
                "type": "AzureFileVolumeSource",
                "optional": true
              },
              {
                "id": 19,
                "name": "configMap",
                "type": "ConfigMapVolumeSource",
                "optional": true
              },
              {
                "id": 20,
                "name": "vsphereVolume",
                "type": "VsphereVirtualDiskVolumeSource",
                "optional": true
              },
              {
                "id": 21,
                "name": "quobyte",
                "type": "QuobyteVolumeSource",
                "optional": true
              },
              {
                "id": 22,
                "name": "azureDisk",
                "type": "AzureDiskVolumeSource",
                "optional": true
              },
              {
                "id": 23,
                "name": "photonPersistentDisk",
                "type": "PhotonPersistentDiskVolumeSource",
                "optional": true
              },
              {
                "id": 26,
                "name": "projected",
                "type": "ProjectedVolumeSource",
                "optional": true
              },
              {
                "id": 24,
                "name": "portworxVolume",
                "type": "PortworxVolumeSource",
                "optional": true
              },
              {
                "id": 25,
                "name": "scaleIO",
                "type": "ScaleIOVolumeSource",
                "optional": true
              },
              {
                "id": 27,
                "name": "storageos",
                "type": "StorageOSVolumeSource",
                "optional": true
              },
              {
                "id": 28,
                "name": "csi",
                "type": "CSIVolumeSource",
                "optional": true
              },
              {
                "id": 29,
                "name": "ephemeral",
                "type": "EphemeralVolumeSource",
                "optional": true
              }
            ]
          },
          {
            "name": "VsphereVirtualDiskVolumeSource",
            "fields": [
              {
                "id": 1,
                "name": "volumePath",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "fsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "storagePolicyName",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "storagePolicyID",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "WeightedPodAffinityTerm",
            "fields": [
              {
                "id": 1,
                "name": "weight",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "podAffinityTerm",
                "type": "PodAffinityTerm",
                "optional": true
              }
            ]
          },
          {
            "name": "WindowsSecurityContextOptions",
            "fields": [
              {
                "id": 1,
                "name": "gmsaCredentialSpecName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "gmsaCredentialSpec",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "runAsUserName",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "hostProcess",
                "type": "bool",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/api/resource/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/util/intstr/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.core.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/core/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:discovery:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "Endpoint",
            "fields": [
              {
                "id": 1,
                "name": "addresses",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "conditions",
                "type": "EndpointConditions",
                "optional": true
              },
              {
                "id": 3,
                "name": "hostname",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "targetRef",
                "type": "k8s.io.api.core.v1.ObjectReference",
                "optional": true
              },
              {
                "id": 6,
                "name": "nodeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "zone",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "hints",
                "type": "EndpointHints",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "deprecatedTopology",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "EndpointConditions",
            "fields": [
              {
                "id": 1,
                "name": "ready",
                "type": "bool",
                "optional": true
              },
              {
                "id": 2,
                "name": "serving",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "terminating",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "EndpointHints",
            "fields": [
              {
                "id": 1,
                "name": "forZones",
                "type": "ForZone",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EndpointPort",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "port",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "appProtocol",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "EndpointSlice",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 4,
                "name": "addressType",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "endpoints",
                "type": "Endpoint",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "ports",
                "type": "EndpointPort",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EndpointSliceList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "EndpointSlice",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ForZone",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.discovery.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/discovery/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:discovery:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "Endpoint",
            "fields": [
              {
                "id": 1,
                "name": "addresses",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "conditions",
                "type": "EndpointConditions",
                "optional": true
              },
              {
                "id": 3,
                "name": "hostname",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "targetRef",
                "type": "k8s.io.api.core.v1.ObjectReference",
                "optional": true
              },
              {
                "id": 6,
                "name": "nodeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "hints",
                "type": "EndpointHints",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "topology",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "EndpointConditions",
            "fields": [
              {
                "id": 1,
                "name": "ready",
                "type": "bool",
                "optional": true
              },
              {
                "id": 2,
                "name": "serving",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "terminating",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "EndpointHints",
            "fields": [
              {
                "id": 1,
                "name": "forZones",
                "type": "ForZone",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EndpointPort",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "port",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "appProtocol",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "EndpointSlice",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 4,
                "name": "addressType",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "endpoints",
                "type": "Endpoint",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "ports",
                "type": "EndpointPort",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EndpointSliceList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "EndpointSlice",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ForZone",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.discovery.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/discovery/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:events:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "Event",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "eventTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime",
                "optional": true
              },
              {
                "id": 3,
                "name": "series",
                "type": "EventSeries",
                "optional": true
              },
              {
                "id": 4,
                "name": "reportingController",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "reportingInstance",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "action",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "regarding",
                "type": "k8s.io.api.core.v1.ObjectReference",
                "optional": true
              },
              {
                "id": 9,
                "name": "related",
                "type": "k8s.io.api.core.v1.ObjectReference",
                "optional": true
              },
              {
                "id": 10,
                "name": "note",
                "type": "string",
                "optional": true
              },
              {
                "id": 11,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 12,
                "name": "deprecatedSource",
                "type": "k8s.io.api.core.v1.EventSource",
                "optional": true
              },
              {
                "id": 13,
                "name": "deprecatedFirstTimestamp",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 14,
                "name": "deprecatedLastTimestamp",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 15,
                "name": "deprecatedCount",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "EventList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Event",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EventSeries",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "lastObservedTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.events.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/events/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:events:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "Event",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "eventTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime",
                "optional": true
              },
              {
                "id": 3,
                "name": "series",
                "type": "EventSeries",
                "optional": true
              },
              {
                "id": 4,
                "name": "reportingController",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "reportingInstance",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "action",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "regarding",
                "type": "k8s.io.api.core.v1.ObjectReference",
                "optional": true
              },
              {
                "id": 9,
                "name": "related",
                "type": "k8s.io.api.core.v1.ObjectReference",
                "optional": true
              },
              {
                "id": 10,
                "name": "note",
                "type": "string",
                "optional": true
              },
              {
                "id": 11,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 12,
                "name": "deprecatedSource",
                "type": "k8s.io.api.core.v1.EventSource",
                "optional": true
              },
              {
                "id": 13,
                "name": "deprecatedFirstTimestamp",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 14,
                "name": "deprecatedLastTimestamp",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 15,
                "name": "deprecatedCount",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "EventList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Event",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EventSeries",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "lastObservedTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.events.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/events/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:extensions:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "AllowedCSIDriver",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "AllowedFlexVolume",
            "fields": [
              {
                "id": 1,
                "name": "driver",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "AllowedHostPath",
            "fields": [
              {
                "id": 1,
                "name": "pathPrefix",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "DaemonSet",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "DaemonSetSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "DaemonSetStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "DaemonSetCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "DaemonSetList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "DaemonSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DaemonSetSpec",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 2,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "updateStrategy",
                "type": "DaemonSetUpdateStrategy",
                "optional": true
              },
              {
                "id": 4,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "templateGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 6,
                "name": "revisionHistoryLimit",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "DaemonSetStatus",
            "fields": [
              {
                "id": 1,
                "name": "currentNumberScheduled",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "numberMisscheduled",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "desiredNumberScheduled",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "numberReady",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 6,
                "name": "updatedNumberScheduled",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "numberAvailable",
                "type": "int32",
                "optional": true
              },
              {
                "id": 8,
                "name": "numberUnavailable",
                "type": "int32",
                "optional": true
              },
              {
                "id": 9,
                "name": "collisionCount",
                "type": "int32",
                "optional": true
              },
              {
                "id": 10,
                "name": "conditions",
                "type": "DaemonSetCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DaemonSetUpdateStrategy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "rollingUpdate",
                "type": "RollingUpdateDaemonSet",
                "optional": true
              }
            ]
          },
          {
            "name": "Deployment",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "DeploymentSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "DeploymentStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "lastUpdateTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 7,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Deployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeploymentRollback",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "rollbackTo",
                "type": "RollbackConfig",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "updatedAnnotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "DeploymentSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              },
              {
                "id": 4,
                "name": "strategy",
                "type": "DeploymentStrategy",
                "optional": true
              },
              {
                "id": 5,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "revisionHistoryLimit",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "paused",
                "type": "bool",
                "optional": true
              },
              {
                "id": 8,
                "name": "rollbackTo",
                "type": "RollbackConfig",
                "optional": true
              },
              {
                "id": 9,
                "name": "progressDeadlineSeconds",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentStatus",
            "fields": [
              {
                "id": 1,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "updatedReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "readyReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "availableReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "unavailableReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "conditions",
                "type": "DeploymentCondition",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "collisionCount",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "DeploymentStrategy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "rollingUpdate",
                "type": "RollingUpdateDeployment",
                "optional": true
              }
            ]
          },
          {
            "name": "FSGroupStrategyOptions",
            "fields": [
              {
                "id": 1,
                "name": "rule",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "ranges",
                "type": "IDRange",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HTTPIngressPath",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "pathType",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "backend",
                "type": "IngressBackend",
                "optional": true
              }
            ]
          },
          {
            "name": "HTTPIngressRuleValue",
            "fields": [
              {
                "id": 1,
                "name": "paths",
                "type": "HTTPIngressPath",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HostPortRange",
            "fields": [
              {
                "id": 1,
                "name": "min",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "max",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "IDRange",
            "fields": [
              {
                "id": 1,
                "name": "min",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "max",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "IPBlock",
            "fields": [
              {
                "id": 1,
                "name": "cidr",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "except",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Ingress",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "IngressSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "IngressStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressBackend",
            "fields": [
              {
                "id": 1,
                "name": "serviceName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "servicePort",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 3,
                "name": "resource",
                "type": "k8s.io.api.core.v1.TypedLocalObjectReference",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Ingress",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IngressRule",
            "fields": [
              {
                "id": 1,
                "name": "host",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "ingressRuleValue",
                "type": "IngressRuleValue",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressRuleValue",
            "fields": [
              {
                "id": 1,
                "name": "http",
                "type": "HTTPIngressRuleValue",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressSpec",
            "fields": [
              {
                "id": 4,
                "name": "ingressClassName",
                "type": "string",
                "optional": true
              },
              {
                "id": 1,
                "name": "backend",
                "type": "IngressBackend",
                "optional": true
              },
              {
                "id": 2,
                "name": "tls",
                "type": "IngressTLS",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "rules",
                "type": "IngressRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IngressStatus",
            "fields": [
              {
                "id": 1,
                "name": "loadBalancer",
                "type": "k8s.io.api.core.v1.LoadBalancerStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressTLS",
            "fields": [
              {
                "id": 1,
                "name": "hosts",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "secretName",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "NetworkPolicy",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "NetworkPolicySpec",
                "optional": true
              }
            ]
          },
          {
            "name": "NetworkPolicyEgressRule",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "NetworkPolicyPort",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "to",
                "type": "NetworkPolicyPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyIngressRule",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "NetworkPolicyPort",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "from",
                "type": "NetworkPolicyPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "NetworkPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyPeer",
            "fields": [
              {
                "id": 1,
                "name": "podSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 2,
                "name": "namespaceSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "ipBlock",
                "type": "IPBlock",
                "optional": true
              }
            ]
          },
          {
            "name": "NetworkPolicyPort",
            "fields": [
              {
                "id": 1,
                "name": "protocol",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "port",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 3,
                "name": "endPort",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "NetworkPolicySpec",
            "fields": [
              {
                "id": 1,
                "name": "podSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 2,
                "name": "ingress",
                "type": "NetworkPolicyIngressRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "egress",
                "type": "NetworkPolicyEgressRule",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "policyTypes",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodSecurityPolicy",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "PodSecurityPolicySpec",
                "optional": true
              }
            ]
          },
          {
            "name": "PodSecurityPolicyList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PodSecurityPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodSecurityPolicySpec",
            "fields": [
              {
                "id": 1,
                "name": "privileged",
                "type": "bool",
                "optional": true
              },
              {
                "id": 2,
                "name": "defaultAddCapabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "requiredDropCapabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "allowedCapabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "volumes",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "hostNetwork",
                "type": "bool",
                "optional": true
              },
              {
                "id": 7,
                "name": "hostPorts",
                "type": "HostPortRange",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "hostPID",
                "type": "bool",
                "optional": true
              },
              {
                "id": 9,
                "name": "hostIPC",
                "type": "bool",
                "optional": true
              },
              {
                "id": 10,
                "name": "seLinux",
                "type": "SELinuxStrategyOptions",
                "optional": true
              },
              {
                "id": 11,
                "name": "runAsUser",
                "type": "RunAsUserStrategyOptions",
                "optional": true
              },
              {
                "id": 22,
                "name": "runAsGroup",
                "type": "RunAsGroupStrategyOptions",
                "optional": true
              },
              {
                "id": 12,
                "name": "supplementalGroups",
                "type": "SupplementalGroupsStrategyOptions",
                "optional": true
              },
              {
                "id": 13,
                "name": "fsGroup",
                "type": "FSGroupStrategyOptions",
                "optional": true
              },
              {
                "id": 14,
                "name": "readOnlyRootFilesystem",
                "type": "bool",
                "optional": true
              },
              {
                "id": 15,
                "name": "defaultAllowPrivilegeEscalation",
                "type": "bool",
                "optional": true
              },
              {
                "id": 16,
                "name": "allowPrivilegeEscalation",
                "type": "bool",
                "optional": true
              },
              {
                "id": 17,
                "name": "allowedHostPaths",
                "type": "AllowedHostPath",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "allowedFlexVolumes",
                "type": "AllowedFlexVolume",
                "is_repeated": true
              },
              {
                "id": 23,
                "name": "allowedCSIDrivers",
                "type": "AllowedCSIDriver",
                "is_repeated": true
              },
              {
                "id": 19,
                "name": "allowedUnsafeSysctls",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 20,
                "name": "forbiddenSysctls",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 21,
                "name": "allowedProcMountTypes",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "runtimeClass",
                "type": "RuntimeClassStrategyOptions",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicaSet",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "ReplicaSetSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "ReplicaSetStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicaSetCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicaSetList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ReplicaSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReplicaSetSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "minReadySeconds",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "template",
                "type": "k8s.io.api.core.v1.PodTemplateSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "ReplicaSetStatus",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "fullyLabeledReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "readyReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "availableReplicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 6,
                "name": "conditions",
                "type": "ReplicaSetCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RollbackConfig",
            "fields": [
              {
                "id": 1,
                "name": "revision",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "RollingUpdateDaemonSet",
            "fields": [
              {
                "id": 1,
                "name": "maxUnavailable",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 2,
                "name": "maxSurge",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              }
            ]
          },
          {
            "name": "RollingUpdateDeployment",
            "fields": [
              {
                "id": 1,
                "name": "maxUnavailable",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 2,
                "name": "maxSurge",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              }
            ]
          },
          {
            "name": "RunAsGroupStrategyOptions",
            "fields": [
              {
                "id": 1,
                "name": "rule",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "ranges",
                "type": "IDRange",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RunAsUserStrategyOptions",
            "fields": [
              {
                "id": 1,
                "name": "rule",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "ranges",
                "type": "IDRange",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RuntimeClassStrategyOptions",
            "fields": [
              {
                "id": 1,
                "name": "allowedRuntimeClassNames",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "defaultRuntimeClassName",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "SELinuxStrategyOptions",
            "fields": [
              {
                "id": 1,
                "name": "rule",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "seLinuxOptions",
                "type": "k8s.io.api.core.v1.SELinuxOptions",
                "optional": true
              }
            ]
          },
          {
            "name": "Scale",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "ScaleSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "ScaleStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ScaleSpec",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ScaleStatus",
            "fields": [
              {
                "id": 1,
                "name": "replicas",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "targetSelector",
                "type": "string",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "selector",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "SupplementalGroupsStrategyOptions",
            "fields": [
              {
                "id": 1,
                "name": "rule",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "ranges",
                "type": "IDRange",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/util/intstr/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.extensions.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/extensions/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:flowcontrol:/:v1alpha1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "FlowDistinguisherMethod",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "FlowSchema",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "FlowSchemaSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "FlowSchemaStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "FlowSchemaCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "FlowSchemaList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "FlowSchema",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FlowSchemaSpec",
            "fields": [
              {
                "id": 1,
                "name": "priorityLevelConfiguration",
                "type": "PriorityLevelConfigurationReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "matchingPrecedence",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "distinguisherMethod",
                "type": "FlowDistinguisherMethod",
                "optional": true
              },
              {
                "id": 4,
                "name": "rules",
                "type": "PolicyRulesWithSubjects",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FlowSchemaStatus",
            "fields": [
              {
                "id": 1,
                "name": "conditions",
                "type": "FlowSchemaCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GroupSubject",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "LimitResponse",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "queuing",
                "type": "QueuingConfiguration",
                "optional": true
              }
            ]
          },
          {
            "name": "LimitedPriorityLevelConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "assuredConcurrencyShares",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "limitResponse",
                "type": "LimitResponse",
                "optional": true
              }
            ]
          },
          {
            "name": "NonResourcePolicyRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "nonResourceURLs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyRulesWithSubjects",
            "fields": [
              {
                "id": 1,
                "name": "subjects",
                "type": "Subject",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "resourceRules",
                "type": "ResourcePolicyRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "nonResourceRules",
                "type": "NonResourcePolicyRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "PriorityLevelConfigurationSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "PriorityLevelConfigurationStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PriorityLevelConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationReference",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationSpec",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "limited",
                "type": "LimitedPriorityLevelConfiguration",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationStatus",
            "fields": [
              {
                "id": 1,
                "name": "conditions",
                "type": "PriorityLevelConfigurationCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "QueuingConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "queues",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "handSize",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "queueLengthLimit",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourcePolicyRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "apiGroups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "clusterScope",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "namespaces",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceAccountSubject",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Subject",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "user",
                "type": "UserSubject",
                "optional": true
              },
              {
                "id": 3,
                "name": "group",
                "type": "GroupSubject",
                "optional": true
              },
              {
                "id": 4,
                "name": "serviceAccount",
                "type": "ServiceAccountSubject",
                "optional": true
              }
            ]
          },
          {
            "name": "UserSubject",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.flowcontrol.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/flowcontrol/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:flowcontrol:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "FlowDistinguisherMethod",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "FlowSchema",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "FlowSchemaSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "FlowSchemaStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "FlowSchemaCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "FlowSchemaList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "FlowSchema",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FlowSchemaSpec",
            "fields": [
              {
                "id": 1,
                "name": "priorityLevelConfiguration",
                "type": "PriorityLevelConfigurationReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "matchingPrecedence",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "distinguisherMethod",
                "type": "FlowDistinguisherMethod",
                "optional": true
              },
              {
                "id": 4,
                "name": "rules",
                "type": "PolicyRulesWithSubjects",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FlowSchemaStatus",
            "fields": [
              {
                "id": 1,
                "name": "conditions",
                "type": "FlowSchemaCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GroupSubject",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "LimitResponse",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "queuing",
                "type": "QueuingConfiguration",
                "optional": true
              }
            ]
          },
          {
            "name": "LimitedPriorityLevelConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "assuredConcurrencyShares",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "limitResponse",
                "type": "LimitResponse",
                "optional": true
              }
            ]
          },
          {
            "name": "NonResourcePolicyRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "nonResourceURLs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyRulesWithSubjects",
            "fields": [
              {
                "id": 1,
                "name": "subjects",
                "type": "Subject",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "resourceRules",
                "type": "ResourcePolicyRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "nonResourceRules",
                "type": "NonResourcePolicyRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "PriorityLevelConfigurationSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "PriorityLevelConfigurationStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PriorityLevelConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationReference",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationSpec",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "limited",
                "type": "LimitedPriorityLevelConfiguration",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationStatus",
            "fields": [
              {
                "id": 1,
                "name": "conditions",
                "type": "PriorityLevelConfigurationCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "QueuingConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "queues",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "handSize",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "queueLengthLimit",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourcePolicyRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "apiGroups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "clusterScope",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "namespaces",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceAccountSubject",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Subject",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "user",
                "type": "UserSubject",
                "optional": true
              },
              {
                "id": 3,
                "name": "group",
                "type": "GroupSubject",
                "optional": true
              },
              {
                "id": 4,
                "name": "serviceAccount",
                "type": "ServiceAccountSubject",
                "optional": true
              }
            ]
          },
          {
            "name": "UserSubject",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.flowcontrol.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/flowcontrol/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:flowcontrol:/:v1beta2:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "FlowDistinguisherMethod",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "FlowSchema",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "FlowSchemaSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "FlowSchemaStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "FlowSchemaCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "FlowSchemaList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "FlowSchema",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FlowSchemaSpec",
            "fields": [
              {
                "id": 1,
                "name": "priorityLevelConfiguration",
                "type": "PriorityLevelConfigurationReference",
                "optional": true
              },
              {
                "id": 2,
                "name": "matchingPrecedence",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "distinguisherMethod",
                "type": "FlowDistinguisherMethod",
                "optional": true
              },
              {
                "id": 4,
                "name": "rules",
                "type": "PolicyRulesWithSubjects",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FlowSchemaStatus",
            "fields": [
              {
                "id": 1,
                "name": "conditions",
                "type": "FlowSchemaCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GroupSubject",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "LimitResponse",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "queuing",
                "type": "QueuingConfiguration",
                "optional": true
              }
            ]
          },
          {
            "name": "LimitedPriorityLevelConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "assuredConcurrencyShares",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "limitResponse",
                "type": "LimitResponse",
                "optional": true
              }
            ]
          },
          {
            "name": "NonResourcePolicyRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "nonResourceURLs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyRulesWithSubjects",
            "fields": [
              {
                "id": 1,
                "name": "subjects",
                "type": "Subject",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "resourceRules",
                "type": "ResourcePolicyRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "nonResourceRules",
                "type": "NonResourcePolicyRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "PriorityLevelConfigurationSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "PriorityLevelConfigurationStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "lastTransitionTime",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PriorityLevelConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationReference",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationSpec",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "limited",
                "type": "LimitedPriorityLevelConfiguration",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityLevelConfigurationStatus",
            "fields": [
              {
                "id": 1,
                "name": "conditions",
                "type": "PriorityLevelConfigurationCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "QueuingConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "queues",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "handSize",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "queueLengthLimit",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ResourcePolicyRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "apiGroups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "clusterScope",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "namespaces",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceAccountSubject",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Subject",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "user",
                "type": "UserSubject",
                "optional": true
              },
              {
                "id": 3,
                "name": "group",
                "type": "GroupSubject",
                "optional": true
              },
              {
                "id": 4,
                "name": "serviceAccount",
                "type": "ServiceAccountSubject",
                "optional": true
              }
            ]
          },
          {
            "name": "UserSubject",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.flowcontrol.v1beta2"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/flowcontrol/v1beta2"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:imagepolicy:/:v1alpha1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "ImageReview",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "ImageReviewSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "ImageReviewStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "ImageReviewContainerSpec",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ImageReviewSpec",
            "fields": [
              {
                "id": 1,
                "name": "containers",
                "type": "ImageReviewContainerSpec",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ImageReviewStatus",
            "fields": [
              {
                "id": 1,
                "name": "allowed",
                "type": "bool",
                "optional": true
              },
              {
                "id": 2,
                "name": "reason",
                "type": "string",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "auditAnnotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.imagepolicy.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/imagepolicy/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:networking:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "HTTPIngressPath",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "pathType",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "backend",
                "type": "IngressBackend",
                "optional": true
              }
            ]
          },
          {
            "name": "HTTPIngressRuleValue",
            "fields": [
              {
                "id": 1,
                "name": "paths",
                "type": "HTTPIngressPath",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IPBlock",
            "fields": [
              {
                "id": 1,
                "name": "cidr",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "except",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Ingress",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "IngressSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "IngressStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressBackend",
            "fields": [
              {
                "id": 4,
                "name": "service",
                "type": "IngressServiceBackend",
                "optional": true
              },
              {
                "id": 3,
                "name": "resource",
                "type": "k8s.io.api.core.v1.TypedLocalObjectReference",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressClass",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "IngressClassSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressClassList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "IngressClass",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IngressClassParametersReference",
            "fields": [
              {
                "id": 1,
                "name": "aPIGroup",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "scope",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressClassSpec",
            "fields": [
              {
                "id": 1,
                "name": "controller",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "parameters",
                "type": "IngressClassParametersReference",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Ingress",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IngressRule",
            "fields": [
              {
                "id": 1,
                "name": "host",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "ingressRuleValue",
                "type": "IngressRuleValue",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressRuleValue",
            "fields": [
              {
                "id": 1,
                "name": "http",
                "type": "HTTPIngressRuleValue",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressServiceBackend",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "port",
                "type": "ServiceBackendPort",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressSpec",
            "fields": [
              {
                "id": 4,
                "name": "ingressClassName",
                "type": "string",
                "optional": true
              },
              {
                "id": 1,
                "name": "defaultBackend",
                "type": "IngressBackend",
                "optional": true
              },
              {
                "id": 2,
                "name": "tls",
                "type": "IngressTLS",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "rules",
                "type": "IngressRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IngressStatus",
            "fields": [
              {
                "id": 1,
                "name": "loadBalancer",
                "type": "k8s.io.api.core.v1.LoadBalancerStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressTLS",
            "fields": [
              {
                "id": 1,
                "name": "hosts",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "secretName",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "NetworkPolicy",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "NetworkPolicySpec",
                "optional": true
              }
            ]
          },
          {
            "name": "NetworkPolicyEgressRule",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "NetworkPolicyPort",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "to",
                "type": "NetworkPolicyPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyIngressRule",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "NetworkPolicyPort",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "from",
                "type": "NetworkPolicyPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "NetworkPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyPeer",
            "fields": [
              {
                "id": 1,
                "name": "podSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 2,
                "name": "namespaceSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "ipBlock",
                "type": "IPBlock",
                "optional": true
              }
            ]
          },
          {
            "name": "NetworkPolicyPort",
            "fields": [
              {
                "id": 1,
                "name": "protocol",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "port",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 3,
                "name": "endPort",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "NetworkPolicySpec",
            "fields": [
              {
                "id": 1,
                "name": "podSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 2,
                "name": "ingress",
                "type": "NetworkPolicyIngressRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "egress",
                "type": "NetworkPolicyEgressRule",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "policyTypes",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceBackendPort",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "number",
                "type": "int32",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/util/intstr/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.networking.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/networking/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:networking:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "HTTPIngressPath",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "pathType",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "backend",
                "type": "IngressBackend",
                "optional": true
              }
            ]
          },
          {
            "name": "HTTPIngressRuleValue",
            "fields": [
              {
                "id": 1,
                "name": "paths",
                "type": "HTTPIngressPath",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Ingress",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "IngressSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "IngressStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressBackend",
            "fields": [
              {
                "id": 1,
                "name": "serviceName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "servicePort",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 3,
                "name": "resource",
                "type": "k8s.io.api.core.v1.TypedLocalObjectReference",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressClass",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "IngressClassSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressClassList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "IngressClass",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IngressClassParametersReference",
            "fields": [
              {
                "id": 1,
                "name": "aPIGroup",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "scope",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressClassSpec",
            "fields": [
              {
                "id": 1,
                "name": "controller",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "parameters",
                "type": "IngressClassParametersReference",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Ingress",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IngressRule",
            "fields": [
              {
                "id": 1,
                "name": "host",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "ingressRuleValue",
                "type": "IngressRuleValue",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressRuleValue",
            "fields": [
              {
                "id": 1,
                "name": "http",
                "type": "HTTPIngressRuleValue",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressSpec",
            "fields": [
              {
                "id": 4,
                "name": "ingressClassName",
                "type": "string",
                "optional": true
              },
              {
                "id": 1,
                "name": "backend",
                "type": "IngressBackend",
                "optional": true
              },
              {
                "id": 2,
                "name": "tls",
                "type": "IngressTLS",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "rules",
                "type": "IngressRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IngressStatus",
            "fields": [
              {
                "id": 1,
                "name": "loadBalancer",
                "type": "k8s.io.api.core.v1.LoadBalancerStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "IngressTLS",
            "fields": [
              {
                "id": 1,
                "name": "hosts",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "secretName",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/util/intstr/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.networking.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/networking/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:node:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "Overhead",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "podFixed",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              }
            ]
          },
          {
            "name": "RuntimeClass",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "handler",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "overhead",
                "type": "Overhead",
                "optional": true
              },
              {
                "id": 4,
                "name": "scheduling",
                "type": "Scheduling",
                "optional": true
              }
            ]
          },
          {
            "name": "RuntimeClassList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "RuntimeClass",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Scheduling",
            "fields": [
              {
                "id": 2,
                "name": "tolerations",
                "type": "k8s.io.api.core.v1.Toleration",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "nodeSelector",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/api/resource/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.node.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/node/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:node:/:v1alpha1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "Overhead",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "podFixed",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              }
            ]
          },
          {
            "name": "RuntimeClass",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "RuntimeClassSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "RuntimeClassList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "RuntimeClass",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RuntimeClassSpec",
            "fields": [
              {
                "id": 1,
                "name": "runtimeHandler",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "overhead",
                "type": "Overhead",
                "optional": true
              },
              {
                "id": 3,
                "name": "scheduling",
                "type": "Scheduling",
                "optional": true
              }
            ]
          },
          {
            "name": "Scheduling",
            "fields": [
              {
                "id": 2,
                "name": "tolerations",
                "type": "k8s.io.api.core.v1.Toleration",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "nodeSelector",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/api/resource/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.node.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/node/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:node:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "Overhead",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "podFixed",
                  "type": "k8s.io.apimachinery.pkg.api.resource.Quantity"
                }
              }
            ]
          },
          {
            "name": "RuntimeClass",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "handler",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "overhead",
                "type": "Overhead",
                "optional": true
              },
              {
                "id": 4,
                "name": "scheduling",
                "type": "Scheduling",
                "optional": true
              }
            ]
          },
          {
            "name": "RuntimeClassList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "RuntimeClass",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Scheduling",
            "fields": [
              {
                "id": 2,
                "name": "tolerations",
                "type": "k8s.io.api.core.v1.Toleration",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "nodeSelector",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/api/resource/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.node.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/node/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:policy:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "Eviction",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "deleteOptions",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "optional": true
              }
            ]
          },
          {
            "name": "PodDisruptionBudget",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "PodDisruptionBudgetSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "PodDisruptionBudgetStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "PodDisruptionBudgetList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PodDisruptionBudget",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodDisruptionBudgetSpec",
            "fields": [
              {
                "id": 1,
                "name": "minAvailable",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "maxUnavailable",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              }
            ]
          },
          {
            "name": "PodDisruptionBudgetStatus",
            "fields": [
              {
                "id": 1,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 3,
                "name": "disruptionsAllowed",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "currentHealthy",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "desiredHealthy",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "expectedPods",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "conditions",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Condition",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "disruptedPods",
                  "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/util/intstr/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.policy.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/policy/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:policy:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "AllowedCSIDriver",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "AllowedFlexVolume",
            "fields": [
              {
                "id": 1,
                "name": "driver",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "AllowedHostPath",
            "fields": [
              {
                "id": 1,
                "name": "pathPrefix",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "readOnly",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "Eviction",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "deleteOptions",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions",
                "optional": true
              }
            ]
          },
          {
            "name": "FSGroupStrategyOptions",
            "fields": [
              {
                "id": 1,
                "name": "rule",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "ranges",
                "type": "IDRange",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HostPortRange",
            "fields": [
              {
                "id": 1,
                "name": "min",
                "type": "int32",
                "optional": true
              },
              {
                "id": 2,
                "name": "max",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "IDRange",
            "fields": [
              {
                "id": 1,
                "name": "min",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "max",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "PodDisruptionBudget",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "PodDisruptionBudgetSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "PodDisruptionBudgetStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "PodDisruptionBudgetList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PodDisruptionBudget",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodDisruptionBudgetSpec",
            "fields": [
              {
                "id": 1,
                "name": "minAvailable",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "maxUnavailable",
                "type": "k8s.io.apimachinery.pkg.util.intstr.IntOrString",
                "optional": true
              }
            ]
          },
          {
            "name": "PodDisruptionBudgetStatus",
            "fields": [
              {
                "id": 1,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 3,
                "name": "disruptionsAllowed",
                "type": "int32",
                "optional": true
              },
              {
                "id": 4,
                "name": "currentHealthy",
                "type": "int32",
                "optional": true
              },
              {
                "id": 5,
                "name": "desiredHealthy",
                "type": "int32",
                "optional": true
              },
              {
                "id": 6,
                "name": "expectedPods",
                "type": "int32",
                "optional": true
              },
              {
                "id": 7,
                "name": "conditions",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Condition",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "disruptedPods",
                  "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time"
                }
              }
            ]
          },
          {
            "name": "PodSecurityPolicy",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "PodSecurityPolicySpec",
                "optional": true
              }
            ]
          },
          {
            "name": "PodSecurityPolicyList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PodSecurityPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodSecurityPolicySpec",
            "fields": [
              {
                "id": 1,
                "name": "privileged",
                "type": "bool",
                "optional": true
              },
              {
                "id": 2,
                "name": "defaultAddCapabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "requiredDropCapabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "allowedCapabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "volumes",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "hostNetwork",
                "type": "bool",
                "optional": true
              },
              {
                "id": 7,
                "name": "hostPorts",
                "type": "HostPortRange",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "hostPID",
                "type": "bool",
                "optional": true
              },
              {
                "id": 9,
                "name": "hostIPC",
                "type": "bool",
                "optional": true
              },
              {
                "id": 10,
                "name": "seLinux",
                "type": "SELinuxStrategyOptions",
                "optional": true
              },
              {
                "id": 11,
                "name": "runAsUser",
                "type": "RunAsUserStrategyOptions",
                "optional": true
              },
              {
                "id": 22,
                "name": "runAsGroup",
                "type": "RunAsGroupStrategyOptions",
                "optional": true
              },
              {
                "id": 12,
                "name": "supplementalGroups",
                "type": "SupplementalGroupsStrategyOptions",
                "optional": true
              },
              {
                "id": 13,
                "name": "fsGroup",
                "type": "FSGroupStrategyOptions",
                "optional": true
              },
              {
                "id": 14,
                "name": "readOnlyRootFilesystem",
                "type": "bool",
                "optional": true
              },
              {
                "id": 15,
                "name": "defaultAllowPrivilegeEscalation",
                "type": "bool",
                "optional": true
              },
              {
                "id": 16,
                "name": "allowPrivilegeEscalation",
                "type": "bool",
                "optional": true
              },
              {
                "id": 17,
                "name": "allowedHostPaths",
                "type": "AllowedHostPath",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "allowedFlexVolumes",
                "type": "AllowedFlexVolume",
                "is_repeated": true
              },
              {
                "id": 23,
                "name": "allowedCSIDrivers",
                "type": "AllowedCSIDriver",
                "is_repeated": true
              },
              {
                "id": 19,
                "name": "allowedUnsafeSysctls",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 20,
                "name": "forbiddenSysctls",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 21,
                "name": "allowedProcMountTypes",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "runtimeClass",
                "type": "RuntimeClassStrategyOptions",
                "optional": true
              }
            ]
          },
          {
            "name": "RunAsGroupStrategyOptions",
            "fields": [
              {
                "id": 1,
                "name": "rule",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "ranges",
                "type": "IDRange",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RunAsUserStrategyOptions",
            "fields": [
              {
                "id": 1,
                "name": "rule",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "ranges",
                "type": "IDRange",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RuntimeClassStrategyOptions",
            "fields": [
              {
                "id": 1,
                "name": "allowedRuntimeClassNames",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "defaultRuntimeClassName",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "SELinuxStrategyOptions",
            "fields": [
              {
                "id": 1,
                "name": "rule",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "seLinuxOptions",
                "type": "k8s.io.api.core.v1.SELinuxOptions",
                "optional": true
              }
            ]
          },
          {
            "name": "SupplementalGroupsStrategyOptions",
            "fields": [
              {
                "id": 1,
                "name": "rule",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "ranges",
                "type": "IDRange",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/util/intstr/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.policy.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/policy/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:rbac:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "AggregationRule",
            "fields": [
              {
                "id": 1,
                "name": "clusterRoleSelectors",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ClusterRole",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "rules",
                "type": "PolicyRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "aggregationRule",
                "type": "AggregationRule",
                "optional": true
              }
            ]
          },
          {
            "name": "ClusterRoleBinding",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "subjects",
                "type": "Subject",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "roleRef",
                "type": "RoleRef",
                "optional": true
              }
            ]
          },
          {
            "name": "ClusterRoleBindingList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ClusterRoleBinding",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ClusterRoleList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ClusterRole",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "apiGroups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "resourceNames",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "nonResourceURLs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Role",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "rules",
                "type": "PolicyRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RoleBinding",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "subjects",
                "type": "Subject",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "roleRef",
                "type": "RoleRef",
                "optional": true
              }
            ]
          },
          {
            "name": "RoleBindingList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "RoleBinding",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RoleList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Role",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RoleRef",
            "fields": [
              {
                "id": 1,
                "name": "apiGroup",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Subject",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "apiGroup",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.rbac.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/rbac/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:rbac:/:v1alpha1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "AggregationRule",
            "fields": [
              {
                "id": 1,
                "name": "clusterRoleSelectors",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ClusterRole",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "rules",
                "type": "PolicyRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "aggregationRule",
                "type": "AggregationRule",
                "optional": true
              }
            ]
          },
          {
            "name": "ClusterRoleBinding",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "subjects",
                "type": "Subject",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "roleRef",
                "type": "RoleRef",
                "optional": true
              }
            ]
          },
          {
            "name": "ClusterRoleBindingList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ClusterRoleBinding",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ClusterRoleList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ClusterRole",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "apiGroups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "resourceNames",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "nonResourceURLs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Role",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "rules",
                "type": "PolicyRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RoleBinding",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "subjects",
                "type": "Subject",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "roleRef",
                "type": "RoleRef",
                "optional": true
              }
            ]
          },
          {
            "name": "RoleBindingList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "RoleBinding",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RoleList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Role",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RoleRef",
            "fields": [
              {
                "id": 1,
                "name": "apiGroup",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Subject",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "apiVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.rbac.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/rbac/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:rbac:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "AggregationRule",
            "fields": [
              {
                "id": 1,
                "name": "clusterRoleSelectors",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ClusterRole",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "rules",
                "type": "PolicyRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "aggregationRule",
                "type": "AggregationRule",
                "optional": true
              }
            ]
          },
          {
            "name": "ClusterRoleBinding",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "subjects",
                "type": "Subject",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "roleRef",
                "type": "RoleRef",
                "optional": true
              }
            ]
          },
          {
            "name": "ClusterRoleBindingList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ClusterRoleBinding",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ClusterRoleList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "ClusterRole",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "apiGroups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "resourceNames",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "nonResourceURLs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Role",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "rules",
                "type": "PolicyRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RoleBinding",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "subjects",
                "type": "Subject",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "roleRef",
                "type": "RoleRef",
                "optional": true
              }
            ]
          },
          {
            "name": "RoleBindingList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "RoleBinding",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RoleList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "Role",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RoleRef",
            "fields": [
              {
                "id": 1,
                "name": "apiGroup",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Subject",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "apiGroup",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.rbac.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/rbac/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:scheduling:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "PriorityClass",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "value",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "globalDefault",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "description",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "preemptionPolicy",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityClassList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PriorityClass",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.scheduling.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/scheduling/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:scheduling:/:v1alpha1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "PriorityClass",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "value",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "globalDefault",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "description",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "preemptionPolicy",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityClassList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PriorityClass",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.scheduling.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/scheduling/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:scheduling:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "PriorityClass",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "value",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "globalDefault",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "description",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "preemptionPolicy",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "PriorityClassList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PriorityClass",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.scheduling.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/scheduling/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:storage:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "CSIDriver",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "CSIDriverSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "CSIDriverList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "CSIDriver",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CSIDriverSpec",
            "fields": [
              {
                "id": 1,
                "name": "attachRequired",
                "type": "bool",
                "optional": true
              },
              {
                "id": 2,
                "name": "podInfoOnMount",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "volumeLifecycleModes",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "storageCapacity",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "fsGroupPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "tokenRequests",
                "type": "TokenRequest",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "requiresRepublish",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "CSINode",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "CSINodeSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "CSINodeDriver",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "nodeID",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "topologyKeys",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "allocatable",
                "type": "VolumeNodeResources",
                "optional": true
              }
            ]
          },
          {
            "name": "CSINodeList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "CSINode",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CSINodeSpec",
            "fields": [
              {
                "id": 1,
                "name": "drivers",
                "type": "CSINodeDriver",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "StorageClass",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "provisioner",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "reclaimPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "mountOptions",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "allowVolumeExpansion",
                "type": "bool",
                "optional": true
              },
              {
                "id": 7,
                "name": "volumeBindingMode",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "allowedTopologies",
                "type": "k8s.io.api.core.v1.TopologySelectorTerm",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "parameters",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "StorageClassList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "StorageClass",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TokenRequest",
            "fields": [
              {
                "id": 1,
                "name": "audience",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "expirationSeconds",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeAttachment",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "VolumeAttachmentSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "VolumeAttachmentStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeAttachmentList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "VolumeAttachment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VolumeAttachmentSource",
            "fields": [
              {
                "id": 1,
                "name": "persistentVolumeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "inlineVolumeSpec",
                "type": "k8s.io.api.core.v1.PersistentVolumeSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeAttachmentSpec",
            "fields": [
              {
                "id": 1,
                "name": "attacher",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "source",
                "type": "VolumeAttachmentSource",
                "optional": true
              },
              {
                "id": 3,
                "name": "nodeName",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeAttachmentStatus",
            "fields": [
              {
                "id": 1,
                "name": "attached",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "attachError",
                "type": "VolumeError",
                "optional": true
              },
              {
                "id": 4,
                "name": "detachError",
                "type": "VolumeError",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "attachmentMetadata",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "VolumeError",
            "fields": [
              {
                "id": 1,
                "name": "time",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 2,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeNodeResources",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.storage.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/storage/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:storage:/:v1alpha1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "CSIStorageCapacity",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "nodeTopology",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "storageClassName",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "capacity",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 5,
                "name": "maximumVolumeSize",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "CSIStorageCapacityList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "CSIStorageCapacity",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VolumeAttachment",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "VolumeAttachmentSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "VolumeAttachmentStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeAttachmentList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "VolumeAttachment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VolumeAttachmentSource",
            "fields": [
              {
                "id": 1,
                "name": "persistentVolumeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "inlineVolumeSpec",
                "type": "k8s.io.api.core.v1.PersistentVolumeSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeAttachmentSpec",
            "fields": [
              {
                "id": 1,
                "name": "attacher",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "source",
                "type": "VolumeAttachmentSource",
                "optional": true
              },
              {
                "id": 3,
                "name": "nodeName",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeAttachmentStatus",
            "fields": [
              {
                "id": 1,
                "name": "attached",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "attachError",
                "type": "VolumeError",
                "optional": true
              },
              {
                "id": 4,
                "name": "detachError",
                "type": "VolumeError",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "attachmentMetadata",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "VolumeError",
            "fields": [
              {
                "id": 1,
                "name": "time",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 2,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/api/resource/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.storage.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/storage/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:api:/:storage:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "CSIDriver",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "CSIDriverSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "CSIDriverList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "CSIDriver",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CSIDriverSpec",
            "fields": [
              {
                "id": 1,
                "name": "attachRequired",
                "type": "bool",
                "optional": true
              },
              {
                "id": 2,
                "name": "podInfoOnMount",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "volumeLifecycleModes",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "storageCapacity",
                "type": "bool",
                "optional": true
              },
              {
                "id": 5,
                "name": "fsGroupPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "tokenRequests",
                "type": "TokenRequest",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "requiresRepublish",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "CSINode",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "CSINodeSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "CSINodeDriver",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "nodeID",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "topologyKeys",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "allocatable",
                "type": "VolumeNodeResources",
                "optional": true
              }
            ]
          },
          {
            "name": "CSINodeList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "CSINode",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CSINodeSpec",
            "fields": [
              {
                "id": 1,
                "name": "drivers",
                "type": "CSINodeDriver",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CSIStorageCapacity",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "nodeTopology",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "optional": true
              },
              {
                "id": 3,
                "name": "storageClassName",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "capacity",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              },
              {
                "id": 5,
                "name": "maximumVolumeSize",
                "type": "k8s.io.apimachinery.pkg.api.resource.Quantity",
                "optional": true
              }
            ]
          },
          {
            "name": "CSIStorageCapacityList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "CSIStorageCapacity",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "StorageClass",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "provisioner",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "reclaimPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "mountOptions",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "allowVolumeExpansion",
                "type": "bool",
                "optional": true
              },
              {
                "id": 7,
                "name": "volumeBindingMode",
                "type": "string",
                "optional": true
              },
              {
                "id": 8,
                "name": "allowedTopologies",
                "type": "k8s.io.api.core.v1.TopologySelectorTerm",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "parameters",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "StorageClassList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "StorageClass",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TokenRequest",
            "fields": [
              {
                "id": 1,
                "name": "audience",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "expirationSeconds",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeAttachment",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "spec",
                "type": "VolumeAttachmentSpec",
                "optional": true
              },
              {
                "id": 3,
                "name": "status",
                "type": "VolumeAttachmentStatus",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeAttachmentList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "VolumeAttachment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VolumeAttachmentSource",
            "fields": [
              {
                "id": 1,
                "name": "persistentVolumeName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "inlineVolumeSpec",
                "type": "k8s.io.api.core.v1.PersistentVolumeSpec",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeAttachmentSpec",
            "fields": [
              {
                "id": 1,
                "name": "attacher",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "source",
                "type": "VolumeAttachmentSource",
                "optional": true
              },
              {
                "id": 3,
                "name": "nodeName",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeAttachmentStatus",
            "fields": [
              {
                "id": 1,
                "name": "attached",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "attachError",
                "type": "VolumeError",
                "optional": true
              },
              {
                "id": 4,
                "name": "detachError",
                "type": "VolumeError",
                "optional": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "attachmentMetadata",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "VolumeError",
            "fields": [
              {
                "id": 1,
                "name": "time",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.Time",
                "optional": true
              },
              {
                "id": 2,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "VolumeNodeResources",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/api/resource/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.api.storage.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/api/storage/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:apimachinery:/:pkg:/:api:/:resource:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "Quantity",
            "fields": [
              {
                "id": 1,
                "name": "string",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "QuantityValue",
            "fields": [
              {
                "id": 1,
                "name": "string",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "package": {
          "name": "k8s.io.apimachinery.pkg.api.resource"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/apimachinery/pkg/api/resource"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:apimachinery:/:pkg:/:apis:/:meta:/:v1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "APIGroup",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "versions",
                "type": "GroupVersionForDiscovery",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "preferredVersion",
                "type": "GroupVersionForDiscovery",
                "optional": true
              },
              {
                "id": 4,
                "name": "serverAddressByClientCIDRs",
                "type": "ServerAddressByClientCIDR",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "APIGroupList",
            "fields": [
              {
                "id": 1,
                "name": "groups",
                "type": "APIGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "APIResource",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "singularName",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "namespaced",
                "type": "bool",
                "optional": true
              },
              {
                "id": 8,
                "name": "group",
                "type": "string",
                "optional": true
              },
              {
                "id": 9,
                "name": "version",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "verbs",
                "type": "Verbs",
                "optional": true
              },
              {
                "id": 5,
                "name": "shortNames",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "categories",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "storageVersionHash",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "APIResourceList",
            "fields": [
              {
                "id": 1,
                "name": "groupVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "resources",
                "type": "APIResource",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "APIVersions",
            "fields": [
              {
                "id": 1,
                "name": "versions",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "serverAddressByClientCIDRs",
                "type": "ServerAddressByClientCIDR",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ApplyOptions",
            "fields": [
              {
                "id": 1,
                "name": "dryRun",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "fieldManager",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Condition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "observedGeneration",
                "type": "int64",
                "optional": true
              },
              {
                "id": 4,
                "name": "lastTransitionTime",
                "type": "Time",
                "optional": true
              },
              {
                "id": 5,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "message",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "CreateOptions",
            "fields": [
              {
                "id": 1,
                "name": "dryRun",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "fieldManager",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "fieldValidation",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "DeleteOptions",
            "fields": [
              {
                "id": 1,
                "name": "gracePeriodSeconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "preconditions",
                "type": "Preconditions",
                "optional": true
              },
              {
                "id": 3,
                "name": "orphanDependents",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "propagationPolicy",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "dryRun",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Duration",
            "fields": [
              {
                "id": 1,
                "name": "duration",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "FieldsV1",
            "fields": [
              {
                "id": 1,
                "name": "Raw",
                "type": "bytes",
                "optional": true
              }
            ]
          },
          {
            "name": "GetOptions",
            "fields": [
              {
                "id": 1,
                "name": "resourceVersion",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "GroupKind",
            "fields": [
              {
                "id": 1,
                "name": "group",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "kind",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "GroupResource",
            "fields": [
              {
                "id": 1,
                "name": "group",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "resource",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "GroupVersion",
            "fields": [
              {
                "id": 1,
                "name": "group",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "version",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "GroupVersionForDiscovery",
            "fields": [
              {
                "id": 1,
                "name": "groupVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "version",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "GroupVersionKind",
            "fields": [
              {
                "id": 1,
                "name": "group",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "version",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "kind",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "GroupVersionResource",
            "fields": [
              {
                "id": 1,
                "name": "group",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "version",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "resource",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "LabelSelector",
            "fields": [
              {
                "id": 2,
                "name": "matchExpressions",
                "type": "LabelSelectorRequirement",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "matchLabels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "LabelSelectorRequirement",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "operator",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "List",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "k8s.io.apimachinery.pkg.runtime.RawExtension",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListMeta",
            "fields": [
              {
                "id": 1,
                "name": "selfLink",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "resourceVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "continue",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "remainingItemCount",
                "type": "int64",
                "optional": true
              }
            ]
          },
          {
            "name": "ListOptions",
            "fields": [
              {
                "id": 1,
                "name": "labelSelector",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "fieldSelector",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "watch",
                "type": "bool",
                "optional": true
              },
              {
                "id": 9,
                "name": "allowWatchBookmarks",
                "type": "bool",
                "optional": true
              },
              {
                "id": 4,
                "name": "resourceVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 10,
                "name": "resourceVersionMatch",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "timeoutSeconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 7,
                "name": "limit",
                "type": "int64",
                "optional": true
              },
              {
                "id": 8,
                "name": "continue",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "ManagedFieldsEntry",
            "fields": [
              {
                "id": 1,
                "name": "manager",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "operation",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "apiVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "time",
                "type": "Time",
                "optional": true
              },
              {
                "id": 6,
                "name": "fieldsType",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "fieldsV1",
                "type": "FieldsV1",
                "optional": true
              },
              {
                "id": 8,
                "name": "subresource",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "MicroTime",
            "fields": [
              {
                "id": 1,
                "name": "seconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "nanos",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "ObjectMeta",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "generateName",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "selfLink",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "resourceVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 7,
                "name": "generation",
                "type": "int64",
                "optional": true
              },
              {
                "id": 8,
                "name": "creationTimestamp",
                "type": "Time",
                "optional": true
              },
              {
                "id": 9,
                "name": "deletionTimestamp",
                "type": "Time",
                "optional": true
              },
              {
                "id": 10,
                "name": "deletionGracePeriodSeconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 13,
                "name": "ownerReferences",
                "type": "OwnerReference",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "finalizers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "clusterName",
                "type": "string",
                "optional": true
              },
              {
                "id": 17,
                "name": "managedFields",
                "type": "ManagedFieldsEntry",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 11,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 12,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "OwnerReference",
            "fields": [
              {
                "id": 5,
                "name": "apiVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "controller",
                "type": "bool",
                "optional": true
              },
              {
                "id": 7,
                "name": "blockOwnerDeletion",
                "type": "bool",
                "optional": true
              }
            ]
          },
          {
            "name": "PartialObjectMetadata",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ObjectMeta",
                "optional": true
              }
            ]
          },
          {
            "name": "PartialObjectMetadataList",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "items",
                "type": "PartialObjectMetadata",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Patch"
          },
          {
            "name": "PatchOptions",
            "fields": [
              {
                "id": 1,
                "name": "dryRun",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool",
                "optional": true
              },
              {
                "id": 3,
                "name": "fieldManager",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "fieldValidation",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Preconditions",
            "fields": [
              {
                "id": 1,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "resourceVersion",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "RootPaths",
            "fields": [
              {
                "id": 1,
                "name": "paths",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServerAddressByClientCIDR",
            "fields": [
              {
                "id": 1,
                "name": "clientCIDR",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "serverAddress",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Status",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ListMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "message",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 5,
                "name": "details",
                "type": "StatusDetails",
                "optional": true
              },
              {
                "id": 6,
                "name": "code",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "StatusCause",
            "fields": [
              {
                "id": 1,
                "name": "reason",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "message",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "field",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "StatusDetails",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "group",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 6,
                "name": "uid",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "causes",
                "type": "StatusCause",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "retryAfterSeconds",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "TableOptions",
            "fields": [
              {
                "id": 1,
                "name": "includeObject",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Time",
            "fields": [
              {
                "id": 1,
                "name": "seconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "nanos",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "Timestamp",
            "fields": [
              {
                "id": 1,
                "name": "seconds",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "nanos",
                "type": "int32",
                "optional": true
              }
            ]
          },
          {
            "name": "TypeMeta",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "apiVersion",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "UpdateOptions",
            "fields": [
              {
                "id": 1,
                "name": "dryRun",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "fieldManager",
                "type": "string",
                "optional": true
              },
              {
                "id": 3,
                "name": "fieldValidation",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Verbs",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "WatchEvent",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "object",
                "type": "k8s.io.apimachinery.pkg.runtime.RawExtension",
                "optional": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/runtime/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.apimachinery.pkg.apis.meta.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/apimachinery/pkg/apis/meta/v1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:apimachinery:/:pkg:/:apis:/:meta:/:v1beta1:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "PartialObjectMetadataList",
            "fields": [
              {
                "id": 2,
                "name": "metadata",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
                "optional": true
              },
              {
                "id": 1,
                "name": "items",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.PartialObjectMetadata",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/runtime/schema/generated.proto"
          }
        ],
        "package": {
          "name": "k8s.io.apimachinery.pkg.apis.meta.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/apimachinery/pkg/apis/meta/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:apimachinery:/:pkg:/:runtime:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "RawExtension",
            "fields": [
              {
                "id": 1,
                "name": "raw",
                "type": "bytes",
                "optional": true
              }
            ]
          },
          {
            "name": "TypeMeta",
            "fields": [
              {
                "id": 1,
                "name": "apiVersion",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "kind",
                "type": "string",
                "optional": true
              }
            ]
          },
          {
            "name": "Unknown",
            "fields": [
              {
                "id": 1,
                "name": "typeMeta",
                "type": "TypeMeta",
                "optional": true
              },
              {
                "id": 2,
                "name": "raw",
                "type": "bytes",
                "optional": true
              },
              {
                "id": 3,
                "name": "contentEncoding",
                "type": "string",
                "optional": true
              },
              {
                "id": 4,
                "name": "contentType",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "package": {
          "name": "k8s.io.apimachinery.pkg.runtime"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/apimachinery/pkg/runtime"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:apimachinery:/:pkg:/:runtime:/:schema:/:generated.proto",
      "def": {
        "package": {
          "name": "k8s.io.apimachinery.pkg.runtime.schema"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/apimachinery/pkg/runtime/schema"
          }
        ]
      }
    },
    {
      "protopath": "common-protos:/:k8s.io:/:apimachinery:/:pkg:/:util:/:intstr:/:generated.proto",
      "def": {
        "messages": [
          {
            "name": "IntOrString",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "int64",
                "optional": true
              },
              {
                "id": 2,
                "name": "intVal",
                "type": "int32",
                "optional": true
              },
              {
                "id": 3,
                "name": "strVal",
                "type": "string",
                "optional": true
              }
            ]
          }
        ],
        "package": {
          "name": "k8s.io.apimachinery.pkg.util.intstr"
        },
        "options": [
          {
            "name": "go_package",
            "value": "k8s.io/apimachinery/pkg/util/intstr"
          }
        ]
      }
    },
    {
      "protopath": "envoy:/:config:/:filter:/:http:/:alpn:/:v2alpha1:/:config.proto",
      "def": {
        "enums": [
          {
            "name": "FilterConfig.Protocol",
            "enum_fields": [
              {
                "name": "HTTP10"
              },
              {
                "name": "HTTP11",
                "integer": 1
              },
              {
                "name": "HTTP2",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "FilterConfig",
            "fields": [
              {
                "id": 1,
                "name": "alpn_override",
                "type": "AlpnOverride",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "AlpnOverride",
                "fields": [
                  {
                    "id": 1,
                    "name": "upstream_protocol",
                    "type": "Protocol"
                  },
                  {
                    "id": 2,
                    "name": "alpn_override",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "istio.envoy.config.filter.http.alpn.v2alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/envoy/config/filter/http/alpn/v2alpha1"
          }
        ]
      }
    },
    {
      "protopath": "envoy:/:config:/:filter:/:http:/:authn:/:v2alpha1:/:config.proto",
      "def": {
        "messages": [
          {
            "name": "FilterConfig",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "istio.authentication.v1alpha1.Policy"
              },
              {
                "id": 3,
                "name": "skip_validate_trust_domain",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "allowed_trust_domains",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "disable_clear_route_cache",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "jwt_output_payload_locations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "authentication/v1alpha1/policy.proto"
          }
        ],
        "package": {
          "name": "istio.envoy.config.filter.http.authn.v2alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/envoy/config/filter/http/authn/v2alpha1"
          }
        ]
      }
    },
    {
      "protopath": "envoy:/:config:/:filter:/:http:/:jwt_auth:/:v2alpha1:/:config.proto",
      "def": {
        "messages": [
          {
            "name": "HttpUri",
            "fields": [
              {
                "id": 1,
                "name": "uri",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster",
                "type": "string",
                "oneof_parent": "http_upstream_type"
              },
              {
                "id": 3,
                "name": "timeout",
                "type": "google.protobuf.Duration"
              }
            ]
          },
          {
            "name": "DataSource",
            "fields": [
              {
                "id": 1,
                "name": "filename",
                "type": "string",
                "oneof_parent": "specifier"
              },
              {
                "id": 2,
                "name": "inline_bytes",
                "type": "bytes",
                "oneof_parent": "specifier"
              },
              {
                "id": 3,
                "name": "inline_string",
                "type": "string",
                "oneof_parent": "specifier"
              }
            ]
          },
          {
            "name": "JwtRule",
            "fields": [
              {
                "id": 1,
                "name": "issuer",
                "type": "string"
              },
              {
                "id": 2,
                "name": "audiences",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "remote_jwks",
                "type": "RemoteJwks",
                "oneof_parent": "jwks_source_specifier"
              },
              {
                "id": 4,
                "name": "local_jwks",
                "type": "DataSource",
                "oneof_parent": "jwks_source_specifier"
              },
              {
                "id": 5,
                "name": "forward",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "from_headers",
                "type": "JwtHeader",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "from_params",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "forward_payload_header",
                "type": "string"
              }
            ]
          },
          {
            "name": "RemoteJwks",
            "fields": [
              {
                "id": 1,
                "name": "http_uri",
                "type": "HttpUri"
              },
              {
                "id": 2,
                "name": "cache_duration",
                "type": "google.protobuf.Duration"
              }
            ]
          },
          {
            "name": "JwtHeader",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value_prefix",
                "type": "string"
              }
            ]
          },
          {
            "name": "JwtAuthentication",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "JwtRule",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "allow_missing_or_failed",
                "type": "bool"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "istio.envoy.config.filter.http.jwt_auth.v2alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/envoy/config/filter/http/jwt_auth/v2alpha1"
          }
        ]
      }
    },
    {
      "protopath": "envoy:/:config:/:filter:/:network:/:metadata_exchange:/:metadata_exchange.proto",
      "def": {
        "messages": [
          {
            "name": "MetadataExchange",
            "fields": [
              {
                "id": 1,
                "name": "protocol",
                "type": "string"
              },
              {
                "id": 2,
                "name": "enable_discovery",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "envoy.tcp.metadataexchange.config"
        },
        "options": [
          {
            "name": "java_outer_classname",
            "value": "MetadataExchangeProto"
          },
          {
            "name": "java_multiple_files",
            "value": "true"
          },
          {
            "name": "java_package",
            "value": "io.envoyproxy.envoy.tcp.metadataexchange.config"
          },
          {
            "name": "go_package",
            "value": "istio.io/api/envoy/config/filter/network/metadata_exchange"
          }
        ]
      }
    },
    {
      "protopath": "envoy:/:config:/:filter:/:network:/:tcp_cluster_rewrite:/:v2alpha1:/:config.proto",
      "def": {
        "messages": [
          {
            "name": "TcpClusterRewrite",
            "fields": [
              {
                "id": 1,
                "name": "cluster_pattern",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_replacement",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "istio.envoy.config.filter.network.tcp_cluster_rewrite.v2alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/envoy/config/filter/network/tcp_cluster_rewrite/v2alpha1"
          }
        ]
      }
    },
    {
      "protopath": "envoy:/:extensions:/:stackdriver:/:config:/:v1alpha1:/:config.proto",
      "def": {
        "enums": [
          {
            "name": "PluginConfig.AccessLogging",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "FULL",
                "integer": 1
              },
              {
                "name": "ERRORS_ONLY",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CustomConfig",
            "fields": [
              {
                "id": 2,
                "name": "tags_to_remove",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "dimensions",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PluginConfig",
            "fields": [
              {
                "id": 1,
                "name": "disable_server_access_logging",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 12,
                "name": "max_log_batch_size_in_bytes",
                "type": "int32"
              },
              {
                "id": 13,
                "name": "log_report_duration",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 11,
                "name": "enable_audit_log",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "destination_service_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "enable_mesh_edges_reporting",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 4,
                "name": "mesh_edges_reporting_duration",
                "type": "google.protobuf.Duration",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 5,
                "name": "max_peer_cache_size",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "disable_host_header_fallback",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "max_edges_batch_size",
                "type": "int32"
              },
              {
                "id": 8,
                "name": "disable_http_size_metrics",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 9,
                "name": "enable_log_compression",
                "type": "google.protobuf.BoolValue"
              },
              {
                "id": 10,
                "name": "access_logging",
                "type": "AccessLogging"
              },
              {
                "id": 17,
                "name": "access_logging_filter_expression",
                "type": "string"
              },
              {
                "id": 14,
                "name": "custom_log_config",
                "type": "CustomConfig"
              },
              {
                "id": 15,
                "name": "metric_expiry_duration",
                "type": "google.protobuf.Duration"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 16,
                  "name": "metrics_overrides",
                  "type": "MetricsOverride"
                }
              }
            ]
          },
          {
            "name": "MetricsOverride",
            "fields": [
              {
                "id": 1,
                "name": "drop",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "tag_overrides",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "stackdriver.config.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/envoy/extensions/stackdriver/config/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "envoy:/:extensions:/:stats:/:config.proto",
      "def": {
        "enums": [
          {
            "name": "MetricType",
            "enum_fields": [
              {
                "name": "COUNTER"
              },
              {
                "name": "GAUGE",
                "integer": 1
              },
              {
                "name": "HISTOGRAM",
                "integer": 2
              }
            ]
          },
          {
            "name": "Reporter",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "SERVER_GATEWAY",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "MetricConfig",
            "fields": [
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "tags_to_remove",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "match",
                "type": "string"
              },
              {
                "id": 5,
                "name": "drop",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "dimensions",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "MetricDefinition",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "MetricType"
              }
            ]
          },
          {
            "name": "PluginConfig",
            "fields": [
              {
                "id": 1,
                "name": "debug",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "max_peer_cache_size",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "stat_prefix",
                "type": "string"
              },
              {
                "id": 4,
                "name": "field_separator",
                "type": "string"
              },
              {
                "id": 5,
                "name": "value_separator",
                "type": "string"
              },
              {
                "id": 6,
                "name": "disable_host_header_fallback",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "tcp_reporting_duration",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 8,
                "name": "metrics",
                "type": "MetricConfig",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "definitions",
                "type": "MetricDefinition",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "reporter",
                "type": "Reporter"
              },
              {
                "id": 11,
                "name": "rotation_interval",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 12,
                "name": "graceful_deletion_interval",
                "type": "google.protobuf.Duration"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "stats"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/envoy/extensions/stats"
          }
        ]
      }
    },
    {
      "protopath": "extensions:/:v1alpha1:/:wasm.proto",
      "def": {
        "enums": [
          {
            "name": "PluginType",
            "enum_fields": [
              {
                "name": "UNSPECIFIED_PLUGIN_TYPE"
              },
              {
                "name": "HTTP",
                "integer": 1
              },
              {
                "name": "NETWORK",
                "integer": 2
              }
            ]
          },
          {
            "name": "PluginPhase",
            "enum_fields": [
              {
                "name": "UNSPECIFIED_PHASE"
              },
              {
                "name": "AUTHN",
                "integer": 1
              },
              {
                "name": "AUTHZ",
                "integer": 2
              },
              {
                "name": "STATS",
                "integer": 3
              }
            ]
          },
          {
            "name": "PullPolicy",
            "enum_fields": [
              {
                "name": "UNSPECIFIED_POLICY"
              },
              {
                "name": "IfNotPresent",
                "integer": 1
              },
              {
                "name": "Always",
                "integer": 2
              }
            ]
          },
          {
            "name": "EnvValueSource",
            "enum_fields": [
              {
                "name": "INLINE"
              },
              {
                "name": "HOST",
                "integer": 1
              }
            ]
          },
          {
            "name": "FailStrategy",
            "enum_fields": [
              {
                "name": "FAIL_CLOSE"
              },
              {
                "name": "FAIL_OPEN",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "WasmPlugin",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "istio.type.v1beta1.WorkloadSelector"
              },
              {
                "id": 15,
                "name": "targetRef",
                "type": "istio.type.v1beta1.PolicyTargetReference"
              },
              {
                "id": 2,
                "name": "url",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 3,
                "name": "sha256",
                "type": "string"
              },
              {
                "id": 4,
                "name": "image_pull_policy",
                "type": "PullPolicy"
              },
              {
                "id": 5,
                "name": "image_pull_secret",
                "type": "string"
              },
              {
                "id": 6,
                "name": "verification_key",
                "type": "string"
              },
              {
                "id": 7,
                "name": "plugin_config",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 8,
                "name": "plugin_name",
                "type": "string"
              },
              {
                "id": 9,
                "name": "phase",
                "type": "PluginPhase"
              },
              {
                "id": 10,
                "name": "priority",
                "type": "google.protobuf.Int32Value"
              },
              {
                "id": 13,
                "name": "fail_strategy",
                "type": "FailStrategy"
              },
              {
                "id": 11,
                "name": "vm_config",
                "type": "VmConfig"
              },
              {
                "id": 12,
                "name": "match",
                "type": "TrafficSelector",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "type",
                "type": "PluginType"
              }
            ],
            "messages": [
              {
                "name": "TrafficSelector",
                "fields": [
                  {
                    "id": 1,
                    "name": "mode",
                    "type": "istio.type.v1beta1.WorkloadMode"
                  },
                  {
                    "id": 2,
                    "name": "ports",
                    "type": "istio.type.v1beta1.PortSelector",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "VmConfig",
            "fields": [
              {
                "id": 1,
                "name": "env",
                "type": "EnvVar",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnvVar",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 3,
                "name": "value_from",
                "type": "EnvValueSource"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          },
          {
            "path": "type/v1beta1/selector.proto"
          },
          {
            "path": "google/api/field_behavior.proto"
          }
        ],
        "package": {
          "name": "istio.extensions.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/extensions/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "mcp:/:v1alpha1:/:mcp.proto",
      "def": {
        "messages": [
          {
            "name": "SinkNode",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "MeshConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "version_info",
                "type": "string"
              },
              {
                "id": 2,
                "name": "sink_node",
                "type": "SinkNode"
              },
              {
                "id": 3,
                "name": "type_url",
                "type": "string"
              },
              {
                "id": 4,
                "name": "response_nonce",
                "type": "string"
              },
              {
                "id": 5,
                "name": "error_detail",
                "type": "google.rpc.Status"
              }
            ]
          },
          {
            "name": "MeshConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "version_info",
                "type": "string"
              },
              {
                "id": 2,
                "name": "resources",
                "type": "Resource",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "type_url",
                "type": "string"
              },
              {
                "id": 4,
                "name": "nonce",
                "type": "string"
              }
            ]
          },
          {
            "name": "IncrementalMeshConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "sink_node",
                "type": "SinkNode"
              },
              {
                "id": 2,
                "name": "type_url",
                "type": "string"
              },
              {
                "id": 4,
                "name": "response_nonce",
                "type": "string"
              },
              {
                "id": 5,
                "name": "error_detail",
                "type": "google.rpc.Status"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "initial_resource_versions",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "IncrementalMeshConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "system_version_info",
                "type": "string"
              },
              {
                "id": 2,
                "name": "resources",
                "type": "Resource",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "removed_resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "nonce",
                "type": "string"
              }
            ]
          },
          {
            "name": "RequestResources",
            "fields": [
              {
                "id": 1,
                "name": "sink_node",
                "type": "SinkNode"
              },
              {
                "id": 2,
                "name": "collection",
                "type": "string"
              },
              {
                "id": 4,
                "name": "response_nonce",
                "type": "string"
              },
              {
                "id": 5,
                "name": "error_detail",
                "type": "google.rpc.Status"
              },
              {
                "id": 6,
                "name": "incremental",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "initial_resource_versions",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "Resources",
            "fields": [
              {
                "id": 1,
                "name": "system_version_info",
                "type": "string"
              },
              {
                "id": 2,
                "name": "collection",
                "type": "string"
              },
              {
                "id": 3,
                "name": "resources",
                "type": "Resource",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "removed_resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "nonce",
                "type": "string"
              },
              {
                "id": 6,
                "name": "incremental",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AggregatedMeshConfigService",
            "rpcs": [
              {
                "name": "StreamAggregatedResources",
                "in_type": "MeshConfigRequest",
                "out_type": "MeshConfigResponse",
                "in_streamed": true,
                "out_streamed": true
              },
              {
                "name": "IncrementalAggregatedResources",
                "in_type": "IncrementalMeshConfigRequest",
                "out_type": "IncrementalMeshConfigResponse",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          },
          {
            "name": "ResourceSource",
            "rpcs": [
              {
                "name": "EstablishResourceStream",
                "in_type": "RequestResources",
                "out_type": "Resources",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          },
          {
            "name": "ResourceSink",
            "rpcs": [
              {
                "name": "EstablishResourceStream",
                "in_type": "Resources",
                "out_type": "RequestResources",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/rpc/status.proto"
          },
          {
            "path": "mcp/v1alpha1/resource.proto"
          }
        ],
        "package": {
          "name": "istio.mcp.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/mcp/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "mcp:/:v1alpha1:/:metadata.proto",
      "def": {
        "messages": [
          {
            "name": "Metadata",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "create_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "istio.mcp.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/mcp/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "mcp:/:v1alpha1:/:resource.proto",
      "def": {
        "messages": [
          {
            "name": "Resource",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "istio.mcp.v1alpha1.Metadata"
              },
              {
                "id": 2,
                "name": "body",
                "type": "google.protobuf.Any"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "mcp/v1alpha1/metadata.proto"
          }
        ],
        "package": {
          "name": "istio.mcp.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/mcp/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "mesh:/:v1alpha1:/:config.proto",
      "def": {
        "enums": [
          {
            "name": "MeshConfig.IngressControllerMode",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "OFF",
                "integer": 1
              },
              {
                "name": "DEFAULT",
                "integer": 2
              },
              {
                "name": "STRICT",
                "integer": 3
              }
            ]
          },
          {
            "name": "MeshConfig.AuthPolicy",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "MUTUAL_TLS",
                "integer": 1
              }
            ]
          },
          {
            "name": "MeshConfig.AccessLogEncoding",
            "enum_fields": [
              {
                "name": "TEXT"
              },
              {
                "name": "JSON",
                "integer": 1
              }
            ]
          },
          {
            "name": "OutboundTrafficPolicy.Mode",
            "enum_fields": [
              {
                "name": "REGISTRY_ONLY"
              },
              {
                "name": "ALLOW_ANY",
                "integer": 1
              }
            ],
            "reserved_ids": [
              2
            ],
            "reserved_names": [
              "VIRTUAL_SERVICE_ONLY"
            ]
          },
          {
            "name": "InboundTrafficPolicy.Mode",
            "enum_fields": [
              {
                "name": "PASSTHROUGH"
              },
              {
                "name": "LOCALHOST",
                "integer": 1
              }
            ]
          },
          {
            "name": "MeshConfig.H2UpgradePolicy",
            "enum_fields": [
              {
                "name": "DO_NOT_UPGRADE"
              },
              {
                "name": "UPGRADE",
                "integer": 1
              }
            ]
          },
          {
            "name": "OpenCensusAgentTracingProvider.TraceContext",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "W3C_TRACE_CONTEXT",
                "integer": 1
              },
              {
                "name": "GRPC_BIN",
                "integer": 2
              },
              {
                "name": "CLOUD_TRACE_CONTEXT",
                "integer": 3
              },
              {
                "name": "B3",
                "integer": 4
              }
            ]
          },
          {
            "name": "ProxyPathNormalization.NormalizationType",
            "enum_fields": [
              {
                "name": "DEFAULT"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "BASE",
                "integer": 2
              },
              {
                "name": "MERGE_SLASHES",
                "integer": 3
              },
              {
                "name": "DECODE_AND_MERGE_SLASHES",
                "integer": 4
              }
            ]
          },
          {
            "name": "TLSConfig.TLSProtocol",
            "enum_fields": [
              {
                "name": "TLS_AUTO"
              },
              {
                "name": "TLSV1_2",
                "integer": 1
              },
              {
                "name": "TLSV1_3",
                "integer": 2
              }
            ]
          },
          {
            "name": "Resource",
            "enum_fields": [
              {
                "name": "SERVICE_REGISTRY"
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "MeshConfig",
            "fields": [
              {
                "id": 4,
                "name": "proxy_listen_port",
                "type": "int32"
              },
              {
                "id": 65,
                "name": "proxy_inbound_listen_port",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "proxy_http_port",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "connect_timeout",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 42,
                "name": "protocol_detection_timeout",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 28,
                "name": "tcp_keepalive",
                "type": "istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive"
              },
              {
                "id": 7,
                "name": "ingress_class",
                "type": "string"
              },
              {
                "id": 8,
                "name": "ingress_service",
                "type": "string"
              },
              {
                "id": 9,
                "name": "ingress_controller_mode",
                "type": "IngressControllerMode"
              },
              {
                "id": 52,
                "name": "ingress_selector",
                "type": "string"
              },
              {
                "id": 12,
                "name": "enable_tracing",
                "type": "bool"
              },
              {
                "id": 13,
                "name": "access_log_file",
                "type": "string"
              },
              {
                "id": 24,
                "name": "access_log_format",
                "type": "string"
              },
              {
                "id": 27,
                "name": "access_log_encoding",
                "type": "AccessLogEncoding"
              },
              {
                "id": 40,
                "name": "enable_envoy_access_log_service",
                "type": "bool"
              },
              {
                "id": 56,
                "name": "disable_envoy_listener_log",
                "type": "bool"
              },
              {
                "id": 14,
                "name": "default_config",
                "type": "ProxyConfig"
              },
              {
                "id": 17,
                "name": "outbound_traffic_policy",
                "type": "OutboundTrafficPolicy"
              },
              {
                "id": 66,
                "name": "inbound_traffic_policy",
                "type": "InboundTrafficPolicy"
              },
              {
                "id": 22,
                "name": "config_sources",
                "type": "ConfigSource",
                "is_repeated": true
              },
              {
                "id": 43,
                "name": "enable_auto_mtls",
                "type": "google.protobuf.BoolValue"
              },
              {
                "id": 26,
                "name": "trust_domain",
                "type": "string"
              },
              {
                "id": 46,
                "name": "trust_domain_aliases",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 58,
                "name": "ca_certificates",
                "type": "CertificateData",
                "is_repeated": true
              },
              {
                "id": 31,
                "name": "default_service_export_to",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 32,
                "name": "default_virtual_service_export_to",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 33,
                "name": "default_destination_rule_export_to",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 34,
                "name": "root_namespace",
                "type": "string"
              },
              {
                "id": 35,
                "name": "locality_lb_setting",
                "type": "istio.networking.v1alpha3.LocalityLoadBalancerSetting"
              },
              {
                "id": 36,
                "name": "dns_refresh_rate",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 41,
                "name": "h2_upgrade_policy",
                "type": "H2UpgradePolicy"
              },
              {
                "id": 44,
                "name": "inbound_cluster_stat_name",
                "type": "string"
              },
              {
                "id": 45,
                "name": "outbound_cluster_stat_name",
                "type": "string"
              },
              {
                "id": 47,
                "name": "certificates",
                "type": "Certificate",
                "is_repeated": true
              },
              {
                "id": 50,
                "name": "service_settings",
                "type": "ServiceSettings",
                "is_repeated": true
              },
              {
                "id": 51,
                "name": "enable_prometheus_merge",
                "type": "google.protobuf.BoolValue"
              },
              {
                "id": 54,
                "name": "verify_certificate_at_client",
                "type": "google.protobuf.BoolValue",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 55,
                "name": "ca",
                "type": "CA"
              },
              {
                "id": 57,
                "name": "extension_providers",
                "type": "ExtensionProvider",
                "is_repeated": true
              },
              {
                "id": 60,
                "name": "default_providers",
                "type": "DefaultProviders"
              },
              {
                "id": 59,
                "name": "discovery_selectors",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "is_repeated": true
              },
              {
                "id": 61,
                "name": "path_normalization",
                "type": "ProxyPathNormalization"
              },
              {
                "id": 62,
                "name": "default_http_retry_policy",
                "type": "istio.networking.v1alpha3.HTTPRetry"
              },
              {
                "id": 63,
                "name": "mesh_mTLS",
                "type": "TLSConfig"
              },
              {
                "id": 64,
                "name": "tls_defaults",
                "type": "TLSConfig"
              }
            ],
            "reserved_ids": [
              49,
              1,
              2,
              3,
              48,
              25,
              30,
              10,
              11,
              15,
              16,
              18,
              19,
              20,
              21,
              23,
              29,
              53,
              37,
              38,
              39
            ],
            "reserved_names": [
              "thrift_config",
              "mixer_check_server",
              "mixer_report_server",
              "disable_policy_checks",
              "disable_mixer_http_reports",
              "policy_check_fail_open",
              "sidecar_to_telemetry_session_affinity",
              "auth_policy",
              "rds_refresh_delay",
              "mixer_address",
              "enable_client_side_policy_check",
              "sds_uds_path",
              "sds_refresh_delay",
              "enable_sds_token_mount",
              "sds_use_k8s_sa_jwt",
              "termination_drain_duration",
              "disable_report_batch",
              "report_batch_max_entries",
              "report_batch_max_time"
            ],
            "messages": [
              {
                "name": "OutboundTrafficPolicy",
                "fields": [
                  {
                    "id": 1,
                    "name": "mode",
                    "type": "Mode"
                  }
                ]
              },
              {
                "name": "InboundTrafficPolicy",
                "fields": [
                  {
                    "id": 1,
                    "name": "mode",
                    "type": "Mode"
                  }
                ]
              },
              {
                "name": "CertificateData",
                "fields": [
                  {
                    "id": 1,
                    "name": "pem",
                    "type": "string",
                    "oneof_parent": "certificate_data"
                  },
                  {
                    "id": 2,
                    "name": "spiffe_bundle_url",
                    "type": "string",
                    "oneof_parent": "certificate_data"
                  },
                  {
                    "id": 3,
                    "name": "cert_signers",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 4,
                    "name": "trust_domains",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "ServiceSettings",
                "fields": [
                  {
                    "id": 1,
                    "name": "settings",
                    "type": "Settings"
                  },
                  {
                    "id": 2,
                    "name": "hosts",
                    "type": "string",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "Settings",
                    "fields": [
                      {
                        "id": 1,
                        "name": "cluster_local",
                        "type": "bool"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "CA",
                "fields": [
                  {
                    "id": 1,
                    "name": "address",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "tls_settings",
                    "type": "istio.networking.v1alpha3.ClientTLSSettings"
                  },
                  {
                    "id": 3,
                    "name": "request_timeout",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 4,
                    "name": "istiod_side",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "ExtensionProvider",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "envoy_ext_authz_http",
                    "type": "EnvoyExternalAuthorizationHttpProvider",
                    "oneof_parent": "provider"
                  },
                  {
                    "id": 3,
                    "name": "envoy_ext_authz_grpc",
                    "type": "EnvoyExternalAuthorizationGrpcProvider",
                    "oneof_parent": "provider"
                  },
                  {
                    "id": 4,
                    "name": "zipkin",
                    "type": "ZipkinTracingProvider",
                    "oneof_parent": "provider"
                  },
                  {
                    "id": 5,
                    "name": "lightstep",
                    "type": "LightstepTracingProvider",
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ],
                    "oneof_parent": "provider"
                  },
                  {
                    "id": 6,
                    "name": "datadog",
                    "type": "DatadogTracingProvider",
                    "oneof_parent": "provider"
                  },
                  {
                    "id": 7,
                    "name": "stackdriver",
                    "type": "StackdriverProvider",
                    "oneof_parent": "provider"
                  },
                  {
                    "id": 8,
                    "name": "opencensus",
                    "type": "OpenCensusAgentTracingProvider",
                    "oneof_parent": "provider"
                  },
                  {
                    "id": 9,
                    "name": "skywalking",
                    "type": "SkyWalkingTracingProvider",
                    "oneof_parent": "provider"
                  },
                  {
                    "id": 15,
                    "name": "opentelemetry",
                    "type": "OpenTelemetryTracingProvider",
                    "oneof_parent": "provider"
                  },
                  {
                    "id": 10,
                    "name": "prometheus",
                    "type": "PrometheusMetricsProvider",
                    "oneof_parent": "provider"
                  },
                  {
                    "id": 11,
                    "name": "envoy_file_access_log",
                    "type": "EnvoyFileAccessLogProvider",
                    "oneof_parent": "provider"
                  },
                  {
                    "id": 12,
                    "name": "envoy_http_als",
                    "type": "EnvoyHttpGrpcV3LogProvider",
                    "oneof_parent": "provider"
                  },
                  {
                    "id": 13,
                    "name": "envoy_tcp_als",
                    "type": "EnvoyTcpGrpcV3LogProvider",
                    "oneof_parent": "provider"
                  },
                  {
                    "id": 14,
                    "name": "envoy_otel_als",
                    "type": "EnvoyOpenTelemetryLogProvider",
                    "oneof_parent": "provider"
                  }
                ],
                "messages": [
                  {
                    "name": "EnvoyExternalAuthorizationRequestBody",
                    "fields": [
                      {
                        "id": 1,
                        "name": "max_request_bytes",
                        "type": "uint32"
                      },
                      {
                        "id": 2,
                        "name": "allow_partial_message",
                        "type": "bool"
                      },
                      {
                        "id": 3,
                        "name": "pack_as_bytes",
                        "type": "bool"
                      }
                    ]
                  },
                  {
                    "name": "EnvoyExternalAuthorizationHttpProvider",
                    "fields": [
                      {
                        "id": 1,
                        "name": "service",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 9,
                        "name": "timeout",
                        "type": "google.protobuf.Duration"
                      },
                      {
                        "id": 3,
                        "name": "path_prefix",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "fail_open",
                        "type": "bool"
                      },
                      {
                        "id": 5,
                        "name": "status_on_error",
                        "type": "string"
                      },
                      {
                        "id": 6,
                        "name": "include_headers_in_check",
                        "type": "string",
                        "is_repeated": true
                      },
                      {
                        "id": 10,
                        "name": "include_request_headers_in_check",
                        "type": "string",
                        "is_repeated": true
                      },
                      {
                        "id": 12,
                        "name": "include_request_body_in_check",
                        "type": "EnvoyExternalAuthorizationRequestBody"
                      },
                      {
                        "id": 7,
                        "name": "headers_to_upstream_on_allow",
                        "type": "string",
                        "is_repeated": true
                      },
                      {
                        "id": 8,
                        "name": "headers_to_downstream_on_deny",
                        "type": "string",
                        "is_repeated": true
                      },
                      {
                        "id": 13,
                        "name": "headers_to_downstream_on_allow",
                        "type": "string",
                        "is_repeated": true
                      }
                    ],
                    "maps": [
                      {
                        "key_type": "string",
                        "field": {
                          "id": 11,
                          "name": "include_additional_headers_in_check",
                          "type": "string"
                        }
                      }
                    ]
                  },
                  {
                    "name": "EnvoyExternalAuthorizationGrpcProvider",
                    "fields": [
                      {
                        "id": 1,
                        "name": "service",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 5,
                        "name": "timeout",
                        "type": "google.protobuf.Duration"
                      },
                      {
                        "id": 3,
                        "name": "fail_open",
                        "type": "bool"
                      },
                      {
                        "id": 4,
                        "name": "status_on_error",
                        "type": "string"
                      },
                      {
                        "id": 6,
                        "name": "include_request_body_in_check",
                        "type": "EnvoyExternalAuthorizationRequestBody"
                      }
                    ]
                  },
                  {
                    "name": "ZipkinTracingProvider",
                    "fields": [
                      {
                        "id": 1,
                        "name": "service",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 3,
                        "name": "max_tag_length",
                        "type": "uint32"
                      },
                      {
                        "id": 4,
                        "name": "enable_64bit_trace_id",
                        "type": "bool"
                      }
                    ]
                  },
                  {
                    "name": "LightstepTracingProvider",
                    "fields": [
                      {
                        "id": 1,
                        "name": "service",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 3,
                        "name": "access_token",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "max_tag_length",
                        "type": "uint32"
                      }
                    ]
                  },
                  {
                    "name": "DatadogTracingProvider",
                    "fields": [
                      {
                        "id": 1,
                        "name": "service",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 3,
                        "name": "max_tag_length",
                        "type": "uint32"
                      }
                    ]
                  },
                  {
                    "name": "SkyWalkingTracingProvider",
                    "fields": [
                      {
                        "id": 1,
                        "name": "service",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 3,
                        "name": "access_token",
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "name": "StackdriverProvider",
                    "fields": [
                      {
                        "id": 1,
                        "name": "debug",
                        "type": "bool",
                        "options": [
                          {
                            "name": "deprecated",
                            "value": "true"
                          }
                        ]
                      },
                      {
                        "id": 2,
                        "name": "max_number_of_attributes",
                        "type": "google.protobuf.Int64Value",
                        "options": [
                          {
                            "name": "deprecated",
                            "value": "true"
                          }
                        ]
                      },
                      {
                        "id": 3,
                        "name": "max_number_of_annotations",
                        "type": "google.protobuf.Int64Value",
                        "options": [
                          {
                            "name": "deprecated",
                            "value": "true"
                          }
                        ]
                      },
                      {
                        "id": 4,
                        "name": "max_number_of_message_events",
                        "type": "google.protobuf.Int64Value",
                        "options": [
                          {
                            "name": "deprecated",
                            "value": "true"
                          }
                        ]
                      },
                      {
                        "id": 5,
                        "name": "max_tag_length",
                        "type": "uint32"
                      },
                      {
                        "id": 6,
                        "name": "logging",
                        "type": "Logging"
                      }
                    ],
                    "messages": [
                      {
                        "name": "Logging",
                        "maps": [
                          {
                            "key_type": "string",
                            "field": {
                              "id": 1,
                              "name": "labels",
                              "type": "string"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "OpenCensusAgentTracingProvider",
                    "fields": [
                      {
                        "id": 1,
                        "name": "service",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 3,
                        "name": "context",
                        "type": "TraceContext",
                        "is_repeated": true
                      },
                      {
                        "id": 4,
                        "name": "max_tag_length",
                        "type": "uint32"
                      }
                    ]
                  },
                  {
                    "name": "PrometheusMetricsProvider"
                  },
                  {
                    "name": "EnvoyFileAccessLogProvider",
                    "fields": [
                      {
                        "id": 1,
                        "name": "path",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "log_format",
                        "type": "LogFormat"
                      }
                    ],
                    "messages": [
                      {
                        "name": "LogFormat",
                        "fields": [
                          {
                            "id": 1,
                            "name": "text",
                            "type": "string",
                            "oneof_parent": "log_format"
                          },
                          {
                            "id": 2,
                            "name": "labels",
                            "type": "google.protobuf.Struct",
                            "oneof_parent": "log_format"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "EnvoyHttpGrpcV3LogProvider",
                    "fields": [
                      {
                        "id": 1,
                        "name": "service",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 3,
                        "name": "log_name",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "filter_state_objects_to_log",
                        "type": "string",
                        "is_repeated": true
                      },
                      {
                        "id": 5,
                        "name": "additional_request_headers_to_log",
                        "type": "string",
                        "is_repeated": true
                      },
                      {
                        "id": 6,
                        "name": "additional_response_headers_to_log",
                        "type": "string",
                        "is_repeated": true
                      },
                      {
                        "id": 7,
                        "name": "additional_response_trailers_to_log",
                        "type": "string",
                        "is_repeated": true
                      }
                    ]
                  },
                  {
                    "name": "EnvoyTcpGrpcV3LogProvider",
                    "fields": [
                      {
                        "id": 1,
                        "name": "service",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 3,
                        "name": "log_name",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "filter_state_objects_to_log",
                        "type": "string",
                        "is_repeated": true
                      }
                    ]
                  },
                  {
                    "name": "EnvoyOpenTelemetryLogProvider",
                    "fields": [
                      {
                        "id": 1,
                        "name": "service",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 3,
                        "name": "log_name",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "log_format",
                        "type": "LogFormat"
                      }
                    ],
                    "messages": [
                      {
                        "name": "LogFormat",
                        "fields": [
                          {
                            "id": 1,
                            "name": "text",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "labels",
                            "type": "google.protobuf.Struct"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "OpenTelemetryTracingProvider",
                    "fields": [
                      {
                        "id": 1,
                        "name": "service",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 3,
                        "name": "max_tag_length",
                        "type": "uint32"
                      },
                      {
                        "id": 4,
                        "name": "http",
                        "type": "HttpService"
                      }
                    ]
                  },
                  {
                    "name": "HttpService",
                    "fields": [
                      {
                        "id": 1,
                        "name": "path",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "timeout",
                        "type": "google.protobuf.Duration"
                      },
                      {
                        "id": 3,
                        "name": "headers",
                        "type": "HttpHeader",
                        "is_repeated": true
                      }
                    ]
                  },
                  {
                    "name": "HttpHeader",
                    "fields": [
                      {
                        "id": 1,
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "value",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "DefaultProviders",
                "fields": [
                  {
                    "id": 1,
                    "name": "tracing",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "metrics",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "access_logging",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "ProxyPathNormalization",
                "fields": [
                  {
                    "id": 1,
                    "name": "normalization",
                    "type": "NormalizationType"
                  }
                ]
              },
              {
                "name": "TLSConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "min_protocol_version",
                    "type": "TLSProtocol"
                  },
                  {
                    "id": 2,
                    "name": "ecdh_curves",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "cipher_suites",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ConfigSource",
            "fields": [
              {
                "id": 1,
                "name": "address",
                "type": "string"
              },
              {
                "id": 2,
                "name": "tls_settings",
                "type": "istio.networking.v1alpha3.ClientTLSSettings"
              },
              {
                "id": 3,
                "name": "subscribed_resources",
                "type": "Resource",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Certificate",
            "fields": [
              {
                "id": 1,
                "name": "secret_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "dns_names",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "mesh/v1alpha1/proxy.proto"
          },
          {
            "path": "networking/v1alpha3/destination_rule.proto"
          },
          {
            "path": "networking/v1alpha3/virtual_service.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          }
        ],
        "package": {
          "name": "istio.mesh.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/mesh/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "mesh:/:v1alpha1:/:network.proto",
      "def": {
        "messages": [
          {
            "name": "Network",
            "fields": [
              {
                "id": 2,
                "name": "endpoints",
                "type": "NetworkEndpoints",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 3,
                "name": "gateways",
                "type": "IstioNetworkGateway",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              }
            ],
            "messages": [
              {
                "name": "NetworkEndpoints",
                "fields": [
                  {
                    "id": 1,
                    "name": "from_cidr",
                    "type": "string",
                    "oneof_parent": "ne"
                  },
                  {
                    "id": 2,
                    "name": "from_registry",
                    "type": "string",
                    "oneof_parent": "ne"
                  }
                ]
              },
              {
                "name": "IstioNetworkGateway",
                "fields": [
                  {
                    "id": 1,
                    "name": "registry_service_name",
                    "type": "string",
                    "oneof_parent": "gw"
                  },
                  {
                    "id": 2,
                    "name": "address",
                    "type": "string",
                    "oneof_parent": "gw"
                  },
                  {
                    "id": 3,
                    "name": "port",
                    "type": "uint32",
                    "options": [
                      {
                        "name": "(google.api.field_behavior)",
                        "value": "REQUIRED"
                      }
                    ]
                  },
                  {
                    "id": 4,
                    "name": "locality",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "MeshNetworks",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "networks",
                  "type": "Network",
                  "options": [
                    {
                      "name": "(google.api.field_behavior)",
                      "value": "REQUIRED"
                    }
                  ]
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          }
        ],
        "package": {
          "name": "istio.mesh.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/mesh/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "mesh:/:v1alpha1:/:proxy.proto",
      "def": {
        "enums": [
          {
            "name": "AuthenticationPolicy",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "MUTUAL_TLS",
                "integer": 1
              },
              {
                "name": "INHERIT",
                "integer": 1000
              }
            ]
          },
          {
            "name": "OpenCensusAgent.TraceContext",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "W3C_TRACE_CONTEXT",
                "integer": 1
              },
              {
                "name": "GRPC_BIN",
                "integer": 2
              },
              {
                "name": "CLOUD_TRACE_CONTEXT",
                "integer": 3
              },
              {
                "name": "B3",
                "integer": 4
              }
            ]
          },
          {
            "name": "ForwardClientCertDetails",
            "enum_fields": [
              {
                "name": "UNDEFINED"
              },
              {
                "name": "SANITIZE",
                "integer": 1
              },
              {
                "name": "FORWARD_ONLY",
                "integer": 2
              },
              {
                "name": "APPEND_FORWARD",
                "integer": 3
              },
              {
                "name": "SANITIZE_SET",
                "integer": 4
              },
              {
                "name": "ALWAYS_FORWARD_ONLY",
                "integer": 5
              }
            ]
          },
          {
            "name": "ProxyConfig.TracingServiceName",
            "enum_fields": [
              {
                "name": "APP_LABEL_AND_NAMESPACE"
              },
              {
                "name": "CANONICAL_NAME_ONLY",
                "integer": 1
              },
              {
                "name": "CANONICAL_NAME_AND_NAMESPACE",
                "integer": 2
              }
            ]
          },
          {
            "name": "ProxyConfig.InboundInterceptionMode",
            "enum_fields": [
              {
                "name": "REDIRECT"
              },
              {
                "name": "TPROXY",
                "integer": 1
              },
              {
                "name": "NONE",
                "integer": 2
              }
            ]
          },
          {
            "name": "ProxyHeaders.MetadataExchangeMode",
            "enum_fields": [
              {
                "name": "UNDEFINED"
              },
              {
                "name": "IN_MESH",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Tracing",
            "fields": [
              {
                "id": 1,
                "name": "zipkin",
                "type": "Zipkin",
                "oneof_parent": "tracer"
              },
              {
                "id": 2,
                "name": "lightstep",
                "type": "Lightstep",
                "oneof_parent": "tracer"
              },
              {
                "id": 3,
                "name": "datadog",
                "type": "Datadog",
                "oneof_parent": "tracer"
              },
              {
                "id": 4,
                "name": "stackdriver",
                "type": "Stackdriver",
                "oneof_parent": "tracer"
              },
              {
                "id": 9,
                "name": "open_census_agent",
                "type": "OpenCensusAgent",
                "oneof_parent": "tracer"
              },
              {
                "id": 6,
                "name": "max_path_tag_length",
                "type": "uint32"
              },
              {
                "id": 7,
                "name": "sampling",
                "type": "double"
              },
              {
                "id": 8,
                "name": "tls_settings",
                "type": "istio.networking.v1alpha3.ClientTLSSettings"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "custom_tags",
                  "type": "CustomTag"
                }
              }
            ],
            "messages": [
              {
                "name": "Zipkin",
                "fields": [
                  {
                    "id": 1,
                    "name": "address",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Lightstep",
                "fields": [
                  {
                    "id": 1,
                    "name": "address",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "access_token",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Datadog",
                "fields": [
                  {
                    "id": 1,
                    "name": "address",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Stackdriver",
                "fields": [
                  {
                    "id": 1,
                    "name": "debug",
                    "type": "bool"
                  },
                  {
                    "id": 2,
                    "name": "max_number_of_attributes",
                    "type": "google.protobuf.Int64Value"
                  },
                  {
                    "id": 3,
                    "name": "max_number_of_annotations",
                    "type": "google.protobuf.Int64Value"
                  },
                  {
                    "id": 4,
                    "name": "max_number_of_message_events",
                    "type": "google.protobuf.Int64Value"
                  }
                ]
              },
              {
                "name": "OpenCensusAgent",
                "fields": [
                  {
                    "id": 1,
                    "name": "address",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "context",
                    "type": "TraceContext",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "CustomTag",
                "fields": [
                  {
                    "id": 1,
                    "name": "literal",
                    "type": "Literal",
                    "oneof_parent": "type"
                  },
                  {
                    "id": 2,
                    "name": "environment",
                    "type": "Environment",
                    "oneof_parent": "type"
                  },
                  {
                    "id": 3,
                    "name": "header",
                    "type": "RequestHeader",
                    "oneof_parent": "type"
                  }
                ]
              },
              {
                "name": "Literal",
                "fields": [
                  {
                    "id": 1,
                    "name": "value",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Environment",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "default_value",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "RequestHeader",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "default_value",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "SDS",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "k8s_sa_jwt_path",
                "type": "string"
              }
            ]
          },
          {
            "name": "Topology",
            "fields": [
              {
                "id": 1,
                "name": "num_trusted_proxies",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "forward_client_cert_details",
                "type": "ForwardClientCertDetails"
              },
              {
                "id": 3,
                "name": "proxy_protocol",
                "type": "ProxyProtocolConfiguration"
              }
            ],
            "messages": [
              {
                "name": "ProxyProtocolConfiguration"
              }
            ]
          },
          {
            "name": "PrivateKeyProvider",
            "fields": [
              {
                "id": 2,
                "name": "cryptomb",
                "type": "CryptoMb",
                "oneof_parent": "provider"
              },
              {
                "id": 3,
                "name": "qat",
                "type": "QAT",
                "oneof_parent": "provider"
              }
            ],
            "messages": [
              {
                "name": "CryptoMb",
                "fields": [
                  {
                    "id": 1,
                    "name": "poll_delay",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 2,
                    "name": "fallback",
                    "type": "google.protobuf.BoolValue"
                  }
                ]
              },
              {
                "name": "QAT",
                "fields": [
                  {
                    "id": 1,
                    "name": "poll_delay",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 2,
                    "name": "fallback",
                    "type": "google.protobuf.BoolValue"
                  }
                ]
              }
            ]
          },
          {
            "name": "ProxyConfig",
            "fields": [
              {
                "id": 1,
                "name": "config_path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "binary_path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "service_cluster",
                "type": "string",
                "oneof_parent": "cluster_name"
              },
              {
                "id": 36,
                "name": "tracing_service_name",
                "type": "TracingServiceName",
                "oneof_parent": "cluster_name"
              },
              {
                "id": 4,
                "name": "drain_duration",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 6,
                "name": "discovery_address",
                "type": "string"
              },
              {
                "id": 7,
                "name": "discovery_refresh_delay",
                "type": "google.protobuf.Duration",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 8,
                "name": "zipkin_address",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 10,
                "name": "statsd_udp_address",
                "type": "string"
              },
              {
                "id": 20,
                "name": "envoy_metrics_service_address",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 11,
                "name": "proxy_admin_port",
                "type": "int32"
              },
              {
                "id": 12,
                "name": "availability_zone",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 13,
                "name": "control_plane_auth_policy",
                "type": "AuthenticationPolicy"
              },
              {
                "id": 14,
                "name": "custom_config_file",
                "type": "string"
              },
              {
                "id": 15,
                "name": "stat_name_length",
                "type": "int32"
              },
              {
                "id": 16,
                "name": "concurrency",
                "type": "google.protobuf.Int32Value"
              },
              {
                "id": 17,
                "name": "proxy_bootstrap_template_path",
                "type": "string"
              },
              {
                "id": 18,
                "name": "interception_mode",
                "type": "InboundInterceptionMode"
              },
              {
                "id": 19,
                "name": "tracing",
                "type": "Tracing"
              },
              {
                "id": 21,
                "name": "sds",
                "type": "SDS",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 22,
                "name": "envoy_access_log_service",
                "type": "RemoteService"
              },
              {
                "id": 23,
                "name": "envoy_metrics_service",
                "type": "RemoteService"
              },
              {
                "id": 26,
                "name": "status_port",
                "type": "int32"
              },
              {
                "id": 27,
                "name": "extra_stat_tags",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 28,
                "name": "gateway_topology",
                "type": "Topology"
              },
              {
                "id": 29,
                "name": "termination_drain_duration",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 30,
                "name": "mesh_id",
                "type": "string"
              },
              {
                "id": 31,
                "name": "readiness_probe",
                "type": "istio.networking.v1alpha3.ReadinessProbe"
              },
              {
                "id": 32,
                "name": "proxy_stats_matcher",
                "type": "ProxyStatsMatcher"
              },
              {
                "id": 33,
                "name": "hold_application_until_proxy_starts",
                "type": "google.protobuf.BoolValue"
              },
              {
                "id": 34,
                "name": "ca_certificates_pem",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 35,
                "name": "image",
                "type": "istio.networking.v1beta1.ProxyImage"
              },
              {
                "id": 38,
                "name": "private_key_provider",
                "type": "PrivateKeyProvider"
              },
              {
                "id": 39,
                "name": "proxy_headers",
                "type": "ProxyHeaders"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 24,
                  "name": "proxy_metadata",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 37,
                  "name": "runtime_values",
                  "type": "string"
                }
              }
            ],
            "reserved_ids": [
              5,
              9
            ],
            "reserved_names": [
              "parent_shutdown_duration",
              "connect_timeout"
            ],
            "messages": [
              {
                "name": "ProxyStatsMatcher",
                "fields": [
                  {
                    "id": 1,
                    "name": "inclusion_prefixes",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "inclusion_suffixes",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "inclusion_regexps",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "ProxyHeaders",
                "fields": [
                  {
                    "id": 1,
                    "name": "forwarded_client_cert",
                    "type": "ForwardClientCertDetails"
                  },
                  {
                    "id": 3,
                    "name": "request_id",
                    "type": "RequestId"
                  },
                  {
                    "id": 2,
                    "name": "server",
                    "type": "Server"
                  },
                  {
                    "id": 4,
                    "name": "attempt_count",
                    "type": "AttemptCount"
                  },
                  {
                    "id": 5,
                    "name": "envoy_debug_headers",
                    "type": "EnvoyDebugHeaders"
                  },
                  {
                    "id": 6,
                    "name": "metadata_exchange_headers",
                    "type": "MetadataExchangeHeaders"
                  }
                ],
                "messages": [
                  {
                    "name": "Server",
                    "fields": [
                      {
                        "id": 1,
                        "name": "disabled",
                        "type": "google.protobuf.BoolValue"
                      },
                      {
                        "id": 2,
                        "name": "value",
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "name": "RequestId",
                    "fields": [
                      {
                        "id": 1,
                        "name": "disabled",
                        "type": "google.protobuf.BoolValue"
                      }
                    ]
                  },
                  {
                    "name": "AttemptCount",
                    "fields": [
                      {
                        "id": 1,
                        "name": "disabled",
                        "type": "google.protobuf.BoolValue"
                      }
                    ]
                  },
                  {
                    "name": "EnvoyDebugHeaders",
                    "fields": [
                      {
                        "id": 1,
                        "name": "disabled",
                        "type": "google.protobuf.BoolValue"
                      }
                    ]
                  },
                  {
                    "name": "MetadataExchangeHeaders",
                    "fields": [
                      {
                        "id": 1,
                        "name": "mode",
                        "type": "MetadataExchangeMode"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "RemoteService",
            "fields": [
              {
                "id": 1,
                "name": "address",
                "type": "string"
              },
              {
                "id": 2,
                "name": "tls_settings",
                "type": "istio.networking.v1alpha3.ClientTLSSettings"
              },
              {
                "id": 3,
                "name": "tcp_keepalive",
                "type": "istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "networking/v1alpha3/destination_rule.proto"
          },
          {
            "path": "networking/v1alpha3/workload_group.proto"
          },
          {
            "path": "networking/v1beta1/proxy_config.proto"
          }
        ],
        "package": {
          "name": "istio.mesh.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/mesh/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "meta:/:v1alpha1:/:status.proto",
      "def": {
        "messages": [
          {
            "name": "IstioStatus",
            "fields": [
              {
                "id": 1,
                "name": "conditions",
                "type": "IstioCondition",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "validation_messages",
                "type": "analysis.v1alpha1.AnalysisMessageBase",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "observed_generation",
                "type": "int64"
              }
            ]
          },
          {
            "name": "IstioCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "status",
                "type": "string"
              },
              {
                "id": 3,
                "name": "last_probe_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "last_transition_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "reason",
                "type": "string"
              },
              {
                "id": 6,
                "name": "message",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "analysis/v1alpha1/message.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "istio.meta.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/meta/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1alpha3:/:destination_rule.proto",
      "def": {
        "enums": [
          {
            "name": "ProxyProtocol.VERSION",
            "enum_fields": [
              {
                "name": "V1"
              },
              {
                "name": "V2",
                "integer": 1
              }
            ]
          },
          {
            "name": "LoadBalancerSettings.SimpleLB",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "LEAST_CONN",
                "integer": 1,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "name": "RANDOM",
                "integer": 2
              },
              {
                "name": "PASSTHROUGH",
                "integer": 3
              },
              {
                "name": "ROUND_ROBIN",
                "integer": 4
              },
              {
                "name": "LEAST_REQUEST",
                "integer": 5
              }
            ]
          },
          {
            "name": "HTTPSettings.H2UpgradePolicy",
            "enum_fields": [
              {
                "name": "DEFAULT"
              },
              {
                "name": "DO_NOT_UPGRADE",
                "integer": 1
              },
              {
                "name": "UPGRADE",
                "integer": 2
              }
            ]
          },
          {
            "name": "ClientTLSSettings.TLSmode",
            "enum_fields": [
              {
                "name": "DISABLE"
              },
              {
                "name": "SIMPLE",
                "integer": 1
              },
              {
                "name": "MUTUAL",
                "integer": 2
              },
              {
                "name": "ISTIO_MUTUAL",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DestinationRule",
            "fields": [
              {
                "id": 1,
                "name": "host",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "traffic_policy",
                "type": "TrafficPolicy"
              },
              {
                "id": 3,
                "name": "subsets",
                "type": "Subset",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "export_to",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "workload_selector",
                "type": "istio.type.v1beta1.WorkloadSelector"
              }
            ]
          },
          {
            "name": "TrafficPolicy",
            "fields": [
              {
                "id": 1,
                "name": "load_balancer",
                "type": "LoadBalancerSettings"
              },
              {
                "id": 2,
                "name": "connection_pool",
                "type": "ConnectionPoolSettings"
              },
              {
                "id": 3,
                "name": "outlier_detection",
                "type": "OutlierDetection"
              },
              {
                "id": 4,
                "name": "tls",
                "type": "ClientTLSSettings"
              },
              {
                "id": 5,
                "name": "port_level_settings",
                "type": "PortTrafficPolicy",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "tunnel",
                "type": "TunnelSettings"
              },
              {
                "id": 7,
                "name": "proxy_protocol",
                "type": "ProxyProtocol"
              }
            ],
            "messages": [
              {
                "name": "PortTrafficPolicy",
                "fields": [
                  {
                    "id": 1,
                    "name": "port",
                    "type": "PortSelector"
                  },
                  {
                    "id": 2,
                    "name": "load_balancer",
                    "type": "LoadBalancerSettings"
                  },
                  {
                    "id": 3,
                    "name": "connection_pool",
                    "type": "ConnectionPoolSettings"
                  },
                  {
                    "id": 4,
                    "name": "outlier_detection",
                    "type": "OutlierDetection"
                  },
                  {
                    "id": 5,
                    "name": "tls",
                    "type": "ClientTLSSettings"
                  }
                ]
              },
              {
                "name": "TunnelSettings",
                "fields": [
                  {
                    "id": 1,
                    "name": "protocol",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "target_host",
                    "type": "string",
                    "options": [
                      {
                        "name": "(google.api.field_behavior)",
                        "value": "REQUIRED"
                      }
                    ]
                  },
                  {
                    "id": 3,
                    "name": "target_port",
                    "type": "uint32",
                    "options": [
                      {
                        "name": "(google.api.field_behavior)",
                        "value": "REQUIRED"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ProxyProtocol",
                "fields": [
                  {
                    "id": 1,
                    "name": "version",
                    "type": "VERSION"
                  }
                ]
              }
            ]
          },
          {
            "name": "Subset",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 3,
                "name": "traffic_policy",
                "type": "TrafficPolicy"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "LoadBalancerSettings",
            "fields": [
              {
                "id": 1,
                "name": "simple",
                "type": "SimpleLB",
                "oneof_parent": "lb_policy"
              },
              {
                "id": 2,
                "name": "consistent_hash",
                "type": "ConsistentHashLB",
                "oneof_parent": "lb_policy"
              },
              {
                "id": 3,
                "name": "locality_lb_setting",
                "type": "LocalityLoadBalancerSetting"
              },
              {
                "id": 4,
                "name": "warmup_duration_secs",
                "type": "google.protobuf.Duration"
              }
            ],
            "messages": [
              {
                "name": "ConsistentHashLB",
                "fields": [
                  {
                    "id": 1,
                    "name": "http_header_name",
                    "type": "string",
                    "oneof_parent": "hash_key"
                  },
                  {
                    "id": 2,
                    "name": "http_cookie",
                    "type": "HTTPCookie",
                    "oneof_parent": "hash_key"
                  },
                  {
                    "id": 3,
                    "name": "use_source_ip",
                    "type": "bool",
                    "oneof_parent": "hash_key"
                  },
                  {
                    "id": 5,
                    "name": "http_query_parameter_name",
                    "type": "string",
                    "oneof_parent": "hash_key"
                  },
                  {
                    "id": 6,
                    "name": "ring_hash",
                    "type": "RingHash",
                    "oneof_parent": "hash_algorithm"
                  },
                  {
                    "id": 7,
                    "name": "maglev",
                    "type": "MagLev",
                    "oneof_parent": "hash_algorithm"
                  },
                  {
                    "id": 4,
                    "name": "minimum_ring_size",
                    "type": "uint64",
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ]
                  }
                ],
                "messages": [
                  {
                    "name": "RingHash",
                    "fields": [
                      {
                        "id": 1,
                        "name": "minimum_ring_size",
                        "type": "uint64"
                      }
                    ]
                  },
                  {
                    "name": "MagLev",
                    "fields": [
                      {
                        "id": 1,
                        "name": "table_size",
                        "type": "uint64"
                      }
                    ]
                  },
                  {
                    "name": "HTTPCookie",
                    "fields": [
                      {
                        "id": 1,
                        "name": "name",
                        "type": "string",
                        "options": [
                          {
                            "name": "(google.api.field_behavior)",
                            "value": "REQUIRED"
                          }
                        ]
                      },
                      {
                        "id": 2,
                        "name": "path",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "ttl",
                        "type": "google.protobuf.Duration"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "ConnectionPoolSettings",
            "fields": [
              {
                "id": 1,
                "name": "tcp",
                "type": "TCPSettings"
              },
              {
                "id": 2,
                "name": "http",
                "type": "HTTPSettings"
              }
            ],
            "messages": [
              {
                "name": "TCPSettings",
                "fields": [
                  {
                    "id": 1,
                    "name": "max_connections",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "connect_timeout",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 3,
                    "name": "tcp_keepalive",
                    "type": "TcpKeepalive"
                  },
                  {
                    "id": 4,
                    "name": "max_connection_duration",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 5,
                    "name": "idle_timeout",
                    "type": "google.protobuf.Duration"
                  }
                ],
                "messages": [
                  {
                    "name": "TcpKeepalive",
                    "fields": [
                      {
                        "id": 1,
                        "name": "probes",
                        "type": "uint32"
                      },
                      {
                        "id": 2,
                        "name": "time",
                        "type": "google.protobuf.Duration"
                      },
                      {
                        "id": 3,
                        "name": "interval",
                        "type": "google.protobuf.Duration"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "HTTPSettings",
                "fields": [
                  {
                    "id": 1,
                    "name": "http1_max_pending_requests",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "http2_max_requests",
                    "type": "int32"
                  },
                  {
                    "id": 3,
                    "name": "max_requests_per_connection",
                    "type": "int32"
                  },
                  {
                    "id": 4,
                    "name": "max_retries",
                    "type": "int32"
                  },
                  {
                    "id": 5,
                    "name": "idle_timeout",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 6,
                    "name": "h2_upgrade_policy",
                    "type": "H2UpgradePolicy"
                  },
                  {
                    "id": 7,
                    "name": "use_client_protocol",
                    "type": "bool"
                  },
                  {
                    "id": 8,
                    "name": "max_concurrent_streams",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "OutlierDetection",
            "fields": [
              {
                "id": 1,
                "name": "consecutive_errors",
                "type": "int32",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 8,
                "name": "split_external_local_origin_errors",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "consecutive_local_origin_failures",
                "type": "google.protobuf.UInt32Value"
              },
              {
                "id": 6,
                "name": "consecutive_gateway_errors",
                "type": "google.protobuf.UInt32Value"
              },
              {
                "id": 7,
                "name": "consecutive_5xx_errors",
                "type": "google.protobuf.UInt32Value"
              },
              {
                "id": 2,
                "name": "interval",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 3,
                "name": "base_ejection_time",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 4,
                "name": "max_ejection_percent",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "min_health_percent",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ClientTLSSettings",
            "fields": [
              {
                "id": 1,
                "name": "mode",
                "type": "TLSmode"
              },
              {
                "id": 2,
                "name": "client_certificate",
                "type": "string"
              },
              {
                "id": 3,
                "name": "private_key",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ca_certificates",
                "type": "string"
              },
              {
                "id": 7,
                "name": "credential_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "subject_alt_names",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "sni",
                "type": "string"
              },
              {
                "id": 8,
                "name": "insecure_skip_verify",
                "type": "google.protobuf.BoolValue"
              }
            ]
          },
          {
            "name": "LocalityLoadBalancerSetting",
            "fields": [
              {
                "id": 1,
                "name": "distribute",
                "type": "Distribute",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "failover",
                "type": "Failover",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "failover_priority",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "enabled",
                "type": "google.protobuf.BoolValue"
              }
            ],
            "messages": [
              {
                "name": "Distribute",
                "fields": [
                  {
                    "id": 1,
                    "name": "from",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 2,
                      "name": "to",
                      "type": "uint32"
                    }
                  }
                ]
              },
              {
                "name": "Failover",
                "fields": [
                  {
                    "id": 1,
                    "name": "from",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "to",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "networking/v1alpha3/virtual_service.proto"
          },
          {
            "path": "type/v1beta1/selector.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1alpha3"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1alpha3"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1alpha3:/:envoy_filter.proto",
      "def": {
        "enums": [
          {
            "name": "EnvoyFilter.ApplyTo",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "LISTENER",
                "integer": 1
              },
              {
                "name": "FILTER_CHAIN",
                "integer": 2
              },
              {
                "name": "NETWORK_FILTER",
                "integer": 3
              },
              {
                "name": "HTTP_FILTER",
                "integer": 4
              },
              {
                "name": "ROUTE_CONFIGURATION",
                "integer": 5
              },
              {
                "name": "VIRTUAL_HOST",
                "integer": 6
              },
              {
                "name": "HTTP_ROUTE",
                "integer": 7
              },
              {
                "name": "CLUSTER",
                "integer": 8
              },
              {
                "name": "EXTENSION_CONFIG",
                "integer": 9
              },
              {
                "name": "BOOTSTRAP",
                "integer": 10
              },
              {
                "name": "LISTENER_FILTER",
                "integer": 11
              }
            ]
          },
          {
            "name": "EnvoyFilter.PatchContext",
            "enum_fields": [
              {
                "name": "ANY"
              },
              {
                "name": "SIDECAR_INBOUND",
                "integer": 1
              },
              {
                "name": "SIDECAR_OUTBOUND",
                "integer": 2
              },
              {
                "name": "GATEWAY",
                "integer": 3
              }
            ]
          },
          {
            "name": "RouteMatch.Action",
            "enum_fields": [
              {
                "name": "ANY"
              },
              {
                "name": "ROUTE",
                "integer": 1
              },
              {
                "name": "REDIRECT",
                "integer": 2
              },
              {
                "name": "DIRECT_RESPONSE",
                "integer": 3
              }
            ]
          },
          {
            "name": "Patch.Operation",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "MERGE",
                "integer": 1
              },
              {
                "name": "ADD",
                "integer": 2
              },
              {
                "name": "REMOVE",
                "integer": 3
              },
              {
                "name": "INSERT_BEFORE",
                "integer": 4
              },
              {
                "name": "INSERT_AFTER",
                "integer": 5
              },
              {
                "name": "INSERT_FIRST",
                "integer": 6
              },
              {
                "name": "REPLACE",
                "integer": 7
              }
            ]
          },
          {
            "name": "Patch.FilterClass",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "AUTHN",
                "integer": 1
              },
              {
                "name": "AUTHZ",
                "integer": 2
              },
              {
                "name": "STATS",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "EnvoyFilter",
            "fields": [
              {
                "id": 3,
                "name": "workload_selector",
                "type": "WorkloadSelector"
              },
              {
                "id": 4,
                "name": "config_patches",
                "type": "EnvoyConfigObjectPatch",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "priority",
                "type": "int32"
              }
            ],
            "reserved_ids": [
              1,
              2
            ],
            "reserved_names": [
              "filters",
              "workload_labels"
            ],
            "messages": [
              {
                "name": "ProxyMatch",
                "fields": [
                  {
                    "id": 1,
                    "name": "proxy_version",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 2,
                      "name": "metadata",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "ClusterMatch",
                "fields": [
                  {
                    "id": 1,
                    "name": "port_number",
                    "type": "uint32"
                  },
                  {
                    "id": 2,
                    "name": "service",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "subset",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "RouteConfigurationMatch",
                "fields": [
                  {
                    "id": 1,
                    "name": "port_number",
                    "type": "uint32"
                  },
                  {
                    "id": 2,
                    "name": "port_name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "gateway",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "vhost",
                    "type": "VirtualHostMatch"
                  },
                  {
                    "id": 5,
                    "name": "name",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "RouteMatch",
                    "fields": [
                      {
                        "id": 1,
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "action",
                        "type": "Action"
                      }
                    ]
                  },
                  {
                    "name": "VirtualHostMatch",
                    "fields": [
                      {
                        "id": 1,
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "route",
                        "type": "RouteMatch"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ListenerMatch",
                "fields": [
                  {
                    "id": 1,
                    "name": "port_number",
                    "type": "uint32"
                  },
                  {
                    "id": 2,
                    "name": "port_name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "filter_chain",
                    "type": "FilterChainMatch"
                  },
                  {
                    "id": 5,
                    "name": "listener_filter",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "name",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "FilterChainMatch",
                    "fields": [
                      {
                        "id": 1,
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "sni",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "transport_protocol",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "application_protocols",
                        "type": "string"
                      },
                      {
                        "id": 5,
                        "name": "filter",
                        "type": "FilterMatch"
                      },
                      {
                        "id": 6,
                        "name": "destination_port",
                        "type": "uint32"
                      }
                    ]
                  },
                  {
                    "name": "FilterMatch",
                    "fields": [
                      {
                        "id": 1,
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "sub_filter",
                        "type": "SubFilterMatch"
                      }
                    ]
                  },
                  {
                    "name": "SubFilterMatch",
                    "fields": [
                      {
                        "id": 1,
                        "name": "name",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Patch",
                "fields": [
                  {
                    "id": 1,
                    "name": "operation",
                    "type": "Operation"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "google.protobuf.Struct"
                  },
                  {
                    "id": 3,
                    "name": "filter_class",
                    "type": "FilterClass"
                  }
                ]
              },
              {
                "name": "EnvoyConfigObjectMatch",
                "fields": [
                  {
                    "id": 1,
                    "name": "context",
                    "type": "PatchContext"
                  },
                  {
                    "id": 2,
                    "name": "proxy",
                    "type": "ProxyMatch"
                  },
                  {
                    "id": 3,
                    "name": "listener",
                    "type": "ListenerMatch",
                    "oneof_parent": "object_types"
                  },
                  {
                    "id": 4,
                    "name": "route_configuration",
                    "type": "RouteConfigurationMatch",
                    "oneof_parent": "object_types"
                  },
                  {
                    "id": 5,
                    "name": "cluster",
                    "type": "ClusterMatch",
                    "oneof_parent": "object_types"
                  }
                ]
              },
              {
                "name": "EnvoyConfigObjectPatch",
                "fields": [
                  {
                    "id": 1,
                    "name": "apply_to",
                    "type": "ApplyTo"
                  },
                  {
                    "id": 2,
                    "name": "match",
                    "type": "EnvoyConfigObjectMatch"
                  },
                  {
                    "id": 3,
                    "name": "patch",
                    "type": "Patch"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/struct.proto"
          },
          {
            "path": "networking/v1alpha3/sidecar.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1alpha3"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1alpha3"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1alpha3:/:gateway.proto",
      "def": {
        "enums": [
          {
            "name": "ServerTLSSettings.TLSmode",
            "enum_fields": [
              {
                "name": "PASSTHROUGH"
              },
              {
                "name": "SIMPLE",
                "integer": 1
              },
              {
                "name": "MUTUAL",
                "integer": 2
              },
              {
                "name": "AUTO_PASSTHROUGH",
                "integer": 3
              },
              {
                "name": "ISTIO_MUTUAL",
                "integer": 4
              },
              {
                "name": "OPTIONAL_MUTUAL",
                "integer": 5
              }
            ]
          },
          {
            "name": "ServerTLSSettings.TLSProtocol",
            "enum_fields": [
              {
                "name": "TLS_AUTO"
              },
              {
                "name": "TLSV1_0",
                "integer": 1
              },
              {
                "name": "TLSV1_1",
                "integer": 2
              },
              {
                "name": "TLSV1_2",
                "integer": 3
              },
              {
                "name": "TLSV1_3",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Gateway",
            "fields": [
              {
                "id": 1,
                "name": "servers",
                "type": "Server",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "selector",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "Server",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "Port",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 4,
                "name": "bind",
                "type": "string"
              },
              {
                "id": 2,
                "name": "hosts",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 3,
                "name": "tls",
                "type": "ServerTLSSettings"
              },
              {
                "id": 5,
                "name": "default_endpoint",
                "type": "string"
              },
              {
                "id": 6,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "Port",
            "fields": [
              {
                "id": 1,
                "name": "number",
                "type": "uint32",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 4,
                "name": "target_port",
                "type": "uint32",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          },
          {
            "name": "ServerTLSSettings",
            "fields": [
              {
                "id": 1,
                "name": "https_redirect",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "mode",
                "type": "TLSmode"
              },
              {
                "id": 3,
                "name": "server_certificate",
                "type": "string"
              },
              {
                "id": 4,
                "name": "private_key",
                "type": "string"
              },
              {
                "id": 5,
                "name": "ca_certificates",
                "type": "string"
              },
              {
                "id": 10,
                "name": "credential_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "subject_alt_names",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "verify_certificate_spki",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "verify_certificate_hash",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "min_protocol_version",
                "type": "TLSProtocol"
              },
              {
                "id": 8,
                "name": "max_protocol_version",
                "type": "TLSProtocol"
              },
              {
                "id": 9,
                "name": "cipher_suites",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1alpha3"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1alpha3"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1alpha3:/:service_entry.proto",
      "def": {
        "enums": [
          {
            "name": "ServiceEntry.Location",
            "enum_fields": [
              {
                "name": "MESH_EXTERNAL"
              },
              {
                "name": "MESH_INTERNAL",
                "integer": 1
              }
            ]
          },
          {
            "name": "ServiceEntry.Resolution",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "STATIC",
                "integer": 1
              },
              {
                "name": "DNS",
                "integer": 2
              },
              {
                "name": "DNS_ROUND_ROBIN",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ServiceEntry",
            "fields": [
              {
                "id": 1,
                "name": "hosts",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "addresses",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "ports",
                "type": "ServicePort",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "location",
                "type": "Location"
              },
              {
                "id": 5,
                "name": "resolution",
                "type": "Resolution"
              },
              {
                "id": 6,
                "name": "endpoints",
                "type": "WorkloadEntry",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "workload_selector",
                "type": "WorkloadSelector"
              },
              {
                "id": 7,
                "name": "export_to",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "subject_alt_names",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServicePort",
            "fields": [
              {
                "id": 1,
                "name": "number",
                "type": "uint32",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 4,
                "name": "target_port",
                "type": "uint32"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "networking/v1alpha3/sidecar.proto"
          },
          {
            "path": "networking/v1alpha3/workload_entry.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1alpha3"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1alpha3"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1alpha3:/:sidecar.proto",
      "def": {
        "enums": [
          {
            "name": "OutboundTrafficPolicy.Mode",
            "enum_fields": [
              {
                "name": "REGISTRY_ONLY"
              },
              {
                "name": "ALLOW_ANY",
                "integer": 1
              }
            ]
          },
          {
            "name": "CaptureMode",
            "enum_fields": [
              {
                "name": "DEFAULT"
              },
              {
                "name": "IPTABLES",
                "integer": 1
              },
              {
                "name": "NONE",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Sidecar",
            "fields": [
              {
                "id": 1,
                "name": "workload_selector",
                "type": "WorkloadSelector"
              },
              {
                "id": 2,
                "name": "ingress",
                "type": "IstioIngressListener",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "egress",
                "type": "IstioEgressListener",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "inbound_connection_pool",
                "type": "ConnectionPoolSettings"
              },
              {
                "id": 4,
                "name": "outbound_traffic_policy",
                "type": "OutboundTrafficPolicy"
              }
            ],
            "reserved_ids": [
              5,
              6
            ],
            "reserved_names": [
              "localhost"
            ]
          },
          {
            "name": "IstioIngressListener",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "SidecarPort",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "bind",
                "type": "string"
              },
              {
                "id": 3,
                "name": "capture_mode",
                "type": "CaptureMode"
              },
              {
                "id": 4,
                "name": "default_endpoint",
                "type": "string"
              },
              {
                "id": 7,
                "name": "tls",
                "type": "ServerTLSSettings"
              },
              {
                "id": 8,
                "name": "connection_pool",
                "type": "ConnectionPoolSettings"
              }
            ],
            "reserved_ids": [
              5,
              6
            ],
            "reserved_names": [
              "localhost_client_tls"
            ]
          },
          {
            "name": "IstioEgressListener",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "SidecarPort"
              },
              {
                "id": 2,
                "name": "bind",
                "type": "string"
              },
              {
                "id": 3,
                "name": "capture_mode",
                "type": "CaptureMode"
              },
              {
                "id": 4,
                "name": "hosts",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              }
            ],
            "reserved_ids": [
              5,
              6
            ],
            "reserved_names": [
              "localhost_server_tls"
            ]
          },
          {
            "name": "WorkloadSelector",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "OutboundTrafficPolicy",
            "fields": [
              {
                "id": 1,
                "name": "mode",
                "type": "Mode"
              },
              {
                "id": 2,
                "name": "egress_proxy",
                "type": "Destination"
              }
            ]
          },
          {
            "name": "SidecarPort",
            "fields": [
              {
                "id": 1,
                "name": "number",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "target_port",
                "type": "uint32",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "networking/v1alpha3/destination_rule.proto"
          },
          {
            "path": "networking/v1alpha3/gateway.proto"
          },
          {
            "path": "networking/v1alpha3/virtual_service.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1alpha3"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1alpha3"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1alpha3:/:virtual_service.proto",
      "def": {
        "enums": [
          {
            "name": "HTTPRedirect.RedirectPortSelection",
            "enum_fields": [
              {
                "name": "FROM_PROTOCOL_DEFAULT"
              },
              {
                "name": "FROM_REQUEST_PORT",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "VirtualService",
            "fields": [
              {
                "id": 1,
                "name": "hosts",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "gateways",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "http",
                "type": "HTTPRoute",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "tls",
                "type": "TLSRoute",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "tcp",
                "type": "TCPRoute",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "export_to",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Destination",
            "fields": [
              {
                "id": 1,
                "name": "host",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "subset",
                "type": "string"
              },
              {
                "id": 3,
                "name": "port",
                "type": "PortSelector"
              }
            ]
          },
          {
            "name": "HTTPRoute",
            "fields": [
              {
                "id": 17,
                "name": "name",
                "type": "string"
              },
              {
                "id": 1,
                "name": "match",
                "type": "HTTPMatchRequest",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "route",
                "type": "HTTPRouteDestination",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "redirect",
                "type": "HTTPRedirect"
              },
              {
                "id": 21,
                "name": "direct_response",
                "type": "HTTPDirectResponse"
              },
              {
                "id": 20,
                "name": "delegate",
                "type": "Delegate"
              },
              {
                "id": 4,
                "name": "rewrite",
                "type": "HTTPRewrite"
              },
              {
                "id": 6,
                "name": "timeout",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 7,
                "name": "retries",
                "type": "HTTPRetry"
              },
              {
                "id": 8,
                "name": "fault",
                "type": "HTTPFaultInjection"
              },
              {
                "id": 9,
                "name": "mirror",
                "type": "Destination"
              },
              {
                "id": 22,
                "name": "mirrors",
                "type": "HTTPMirrorPolicy",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "mirror_percent",
                "type": "google.protobuf.UInt32Value",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 19,
                "name": "mirror_percentage",
                "type": "Percent"
              },
              {
                "id": 10,
                "name": "cors_policy",
                "type": "CorsPolicy"
              },
              {
                "id": 16,
                "name": "headers",
                "type": "Headers"
              }
            ],
            "reserved_ids": [
              5,
              11,
              12,
              13,
              14,
              15
            ],
            "reserved_names": [
              "websocket_upgrade",
              "append_headers",
              "remove_response_headers",
              "append_response_headers",
              "remove_request_headers",
              "append_request_headers"
            ]
          },
          {
            "name": "Delegate",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "Headers",
            "fields": [
              {
                "id": 1,
                "name": "request",
                "type": "HeaderOperations"
              },
              {
                "id": 2,
                "name": "response",
                "type": "HeaderOperations"
              }
            ],
            "messages": [
              {
                "name": "HeaderOperations",
                "fields": [
                  {
                    "id": 3,
                    "name": "remove",
                    "type": "string",
                    "is_repeated": true
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 1,
                      "name": "set",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 2,
                      "name": "add",
                      "type": "string"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "TLSRoute",
            "fields": [
              {
                "id": 1,
                "name": "match",
                "type": "TLSMatchAttributes",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "route",
                "type": "RouteDestination",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TCPRoute",
            "fields": [
              {
                "id": 1,
                "name": "match",
                "type": "L4MatchAttributes",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "route",
                "type": "RouteDestination",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HTTPMatchRequest",
            "fields": [
              {
                "id": 11,
                "name": "name",
                "type": "string"
              },
              {
                "id": 1,
                "name": "uri",
                "type": "StringMatch"
              },
              {
                "id": 2,
                "name": "scheme",
                "type": "StringMatch"
              },
              {
                "id": 3,
                "name": "method",
                "type": "StringMatch"
              },
              {
                "id": 4,
                "name": "authority",
                "type": "StringMatch"
              },
              {
                "id": 6,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 8,
                "name": "gateways",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "ignore_uri_case",
                "type": "bool"
              },
              {
                "id": 13,
                "name": "source_namespace",
                "type": "string"
              },
              {
                "id": 14,
                "name": "stat_prefix",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "headers",
                  "type": "StringMatch"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "source_labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "query_params",
                  "type": "StringMatch"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 12,
                  "name": "without_headers",
                  "type": "StringMatch"
                }
              }
            ]
          },
          {
            "name": "HTTPRouteDestination",
            "fields": [
              {
                "id": 1,
                "name": "destination",
                "type": "Destination",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "weight",
                "type": "int32"
              },
              {
                "id": 7,
                "name": "headers",
                "type": "Headers"
              }
            ],
            "reserved_ids": [
              3,
              4,
              5,
              6
            ],
            "reserved_names": [
              "remove_response_headers",
              "append_response_headers",
              "remove_request_headers",
              "append_request_headers"
            ]
          },
          {
            "name": "RouteDestination",
            "fields": [
              {
                "id": 1,
                "name": "destination",
                "type": "Destination",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "weight",
                "type": "int32"
              }
            ]
          },
          {
            "name": "L4MatchAttributes",
            "fields": [
              {
                "id": 1,
                "name": "destination_subnets",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "source_subnet",
                "type": "string"
              },
              {
                "id": 5,
                "name": "gateways",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "source_namespace",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "source_labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "TLSMatchAttributes",
            "fields": [
              {
                "id": 1,
                "name": "sni_hosts",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "destination_subnets",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 6,
                "name": "gateways",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "source_namespace",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "source_labels",
                  "type": "string"
                }
              }
            ],
            "reserved_ids": [
              4
            ],
            "reserved_names": [
              "source_subnet"
            ]
          },
          {
            "name": "HTTPRedirect",
            "fields": [
              {
                "id": 1,
                "name": "uri",
                "type": "string"
              },
              {
                "id": 2,
                "name": "authority",
                "type": "string"
              },
              {
                "id": 4,
                "name": "port",
                "type": "uint32",
                "oneof_parent": "redirect_port"
              },
              {
                "id": 5,
                "name": "derive_port",
                "type": "RedirectPortSelection",
                "oneof_parent": "redirect_port"
              },
              {
                "id": 6,
                "name": "scheme",
                "type": "string"
              },
              {
                "id": 3,
                "name": "redirect_code",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "HTTPDirectResponse",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "uint32",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "body",
                "type": "HTTPBody"
              }
            ]
          },
          {
            "name": "HTTPBody",
            "fields": [
              {
                "id": 1,
                "name": "string",
                "type": "string",
                "oneof_parent": "specifier"
              },
              {
                "id": 2,
                "name": "bytes",
                "type": "bytes",
                "oneof_parent": "specifier"
              }
            ]
          },
          {
            "name": "HTTPRewrite",
            "fields": [
              {
                "id": 1,
                "name": "uri",
                "type": "string"
              },
              {
                "id": 2,
                "name": "authority",
                "type": "string"
              },
              {
                "id": 3,
                "name": "uri_regex_rewrite",
                "type": "RegexRewrite"
              }
            ]
          },
          {
            "name": "RegexRewrite",
            "fields": [
              {
                "id": 1,
                "name": "match",
                "type": "string"
              },
              {
                "id": 2,
                "name": "rewrite",
                "type": "string"
              }
            ]
          },
          {
            "name": "StringMatch",
            "fields": [
              {
                "id": 1,
                "name": "exact",
                "type": "string",
                "oneof_parent": "match_type"
              },
              {
                "id": 2,
                "name": "prefix",
                "type": "string",
                "oneof_parent": "match_type"
              },
              {
                "id": 3,
                "name": "regex",
                "type": "string",
                "oneof_parent": "match_type"
              }
            ]
          },
          {
            "name": "HTTPRetry",
            "fields": [
              {
                "id": 1,
                "name": "attempts",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "per_try_timeout",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 3,
                "name": "retry_on",
                "type": "string"
              },
              {
                "id": 4,
                "name": "retry_remote_localities",
                "type": "google.protobuf.BoolValue"
              }
            ]
          },
          {
            "name": "CorsPolicy",
            "fields": [
              {
                "id": 1,
                "name": "allow_origin",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 7,
                "name": "allow_origins",
                "type": "StringMatch",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "allow_methods",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "allow_headers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "expose_headers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "max_age",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 6,
                "name": "allow_credentials",
                "type": "google.protobuf.BoolValue"
              }
            ]
          },
          {
            "name": "HTTPFaultInjection",
            "fields": [
              {
                "id": 1,
                "name": "delay",
                "type": "Delay"
              },
              {
                "id": 2,
                "name": "abort",
                "type": "Abort"
              }
            ],
            "messages": [
              {
                "name": "Delay",
                "fields": [
                  {
                    "id": 1,
                    "name": "percent",
                    "type": "int32",
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "fixed_delay",
                    "type": "google.protobuf.Duration",
                    "oneof_parent": "http_delay_type"
                  },
                  {
                    "id": 3,
                    "name": "exponential_delay",
                    "type": "google.protobuf.Duration",
                    "oneof_parent": "http_delay_type"
                  },
                  {
                    "id": 5,
                    "name": "percentage",
                    "type": "Percent"
                  }
                ]
              },
              {
                "name": "Abort",
                "fields": [
                  {
                    "id": 2,
                    "name": "http_status",
                    "type": "int32",
                    "oneof_parent": "error_type"
                  },
                  {
                    "id": 3,
                    "name": "grpc_status",
                    "type": "string",
                    "oneof_parent": "error_type"
                  },
                  {
                    "id": 4,
                    "name": "http2_error",
                    "type": "string",
                    "oneof_parent": "error_type"
                  },
                  {
                    "id": 5,
                    "name": "percentage",
                    "type": "Percent"
                  }
                ],
                "reserved_ids": [
                  1
                ],
                "reserved_names": [
                  "percent"
                ]
              }
            ]
          },
          {
            "name": "HTTPMirrorPolicy",
            "fields": [
              {
                "id": 1,
                "name": "destination",
                "type": "Destination",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "percentage",
                "type": "Percent"
              }
            ]
          },
          {
            "name": "PortSelector",
            "fields": [
              {
                "id": 1,
                "name": "number",
                "type": "uint32"
              }
            ],
            "reserved_ids": [
              2
            ],
            "reserved_names": [
              "name"
            ]
          },
          {
            "name": "Percent",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "double"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1alpha3"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1alpha3"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1alpha3:/:workload_entry.proto",
      "def": {
        "messages": [
          {
            "name": "WorkloadEntry",
            "fields": [
              {
                "id": 1,
                "name": "address",
                "type": "string"
              },
              {
                "id": 4,
                "name": "network",
                "type": "string"
              },
              {
                "id": 5,
                "name": "locality",
                "type": "string"
              },
              {
                "id": 6,
                "name": "weight",
                "type": "uint32"
              },
              {
                "id": 7,
                "name": "service_account",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "ports",
                  "type": "uint32"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "istio.networking.v1alpha3"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1alpha3"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1alpha3:/:workload_group.proto",
      "def": {
        "messages": [
          {
            "name": "WorkloadGroup",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ObjectMeta"
              },
              {
                "id": 2,
                "name": "template",
                "type": "WorkloadEntry",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 3,
                "name": "probe",
                "type": "ReadinessProbe"
              }
            ],
            "messages": [
              {
                "name": "ObjectMeta",
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 1,
                      "name": "labels",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 2,
                      "name": "annotations",
                      "type": "string"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "ReadinessProbe",
            "fields": [
              {
                "id": 2,
                "name": "initial_delay_seconds",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "timeout_seconds",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "period_seconds",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "success_threshold",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "failure_threshold",
                "type": "int32"
              },
              {
                "id": 7,
                "name": "http_get",
                "type": "HTTPHealthCheckConfig",
                "oneof_parent": "health_check_method"
              },
              {
                "id": 8,
                "name": "tcp_socket",
                "type": "TCPHealthCheckConfig",
                "oneof_parent": "health_check_method"
              },
              {
                "id": 9,
                "name": "exec",
                "type": "ExecHealthCheckConfig",
                "oneof_parent": "health_check_method"
              }
            ]
          },
          {
            "name": "HTTPHealthCheckConfig",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 3,
                "name": "host",
                "type": "string"
              },
              {
                "id": 4,
                "name": "scheme",
                "type": "string"
              },
              {
                "id": 5,
                "name": "http_headers",
                "type": "HTTPHeader",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HTTPHeader",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "TCPHealthCheckConfig",
            "fields": [
              {
                "id": 1,
                "name": "host",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              }
            ]
          },
          {
            "name": "ExecHealthCheckConfig",
            "fields": [
              {
                "id": 1,
                "name": "command",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "networking/v1alpha3/workload_entry.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1alpha3"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1alpha3"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1beta1:/:destination_rule.proto",
      "def": {
        "enums": [
          {
            "name": "ProxyProtocol.VERSION",
            "enum_fields": [
              {
                "name": "V1"
              },
              {
                "name": "V2",
                "integer": 1
              }
            ]
          },
          {
            "name": "LoadBalancerSettings.SimpleLB",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "LEAST_CONN",
                "integer": 1,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "name": "RANDOM",
                "integer": 2
              },
              {
                "name": "PASSTHROUGH",
                "integer": 3
              },
              {
                "name": "ROUND_ROBIN",
                "integer": 4
              },
              {
                "name": "LEAST_REQUEST",
                "integer": 5
              }
            ]
          },
          {
            "name": "HTTPSettings.H2UpgradePolicy",
            "enum_fields": [
              {
                "name": "DEFAULT"
              },
              {
                "name": "DO_NOT_UPGRADE",
                "integer": 1
              },
              {
                "name": "UPGRADE",
                "integer": 2
              }
            ]
          },
          {
            "name": "ClientTLSSettings.TLSmode",
            "enum_fields": [
              {
                "name": "DISABLE"
              },
              {
                "name": "SIMPLE",
                "integer": 1
              },
              {
                "name": "MUTUAL",
                "integer": 2
              },
              {
                "name": "ISTIO_MUTUAL",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DestinationRule",
            "fields": [
              {
                "id": 1,
                "name": "host",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "traffic_policy",
                "type": "TrafficPolicy"
              },
              {
                "id": 3,
                "name": "subsets",
                "type": "Subset",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "export_to",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "workload_selector",
                "type": "istio.type.v1beta1.WorkloadSelector"
              }
            ]
          },
          {
            "name": "TrafficPolicy",
            "fields": [
              {
                "id": 1,
                "name": "load_balancer",
                "type": "LoadBalancerSettings"
              },
              {
                "id": 2,
                "name": "connection_pool",
                "type": "ConnectionPoolSettings"
              },
              {
                "id": 3,
                "name": "outlier_detection",
                "type": "OutlierDetection"
              },
              {
                "id": 4,
                "name": "tls",
                "type": "ClientTLSSettings"
              },
              {
                "id": 5,
                "name": "port_level_settings",
                "type": "PortTrafficPolicy",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "tunnel",
                "type": "TunnelSettings"
              },
              {
                "id": 7,
                "name": "proxy_protocol",
                "type": "ProxyProtocol"
              }
            ],
            "messages": [
              {
                "name": "PortTrafficPolicy",
                "fields": [
                  {
                    "id": 1,
                    "name": "port",
                    "type": "PortSelector"
                  },
                  {
                    "id": 2,
                    "name": "load_balancer",
                    "type": "LoadBalancerSettings"
                  },
                  {
                    "id": 3,
                    "name": "connection_pool",
                    "type": "ConnectionPoolSettings"
                  },
                  {
                    "id": 4,
                    "name": "outlier_detection",
                    "type": "OutlierDetection"
                  },
                  {
                    "id": 5,
                    "name": "tls",
                    "type": "ClientTLSSettings"
                  }
                ]
              },
              {
                "name": "TunnelSettings",
                "fields": [
                  {
                    "id": 1,
                    "name": "protocol",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "target_host",
                    "type": "string",
                    "options": [
                      {
                        "name": "(google.api.field_behavior)",
                        "value": "REQUIRED"
                      }
                    ]
                  },
                  {
                    "id": 3,
                    "name": "target_port",
                    "type": "uint32",
                    "options": [
                      {
                        "name": "(google.api.field_behavior)",
                        "value": "REQUIRED"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ProxyProtocol",
                "fields": [
                  {
                    "id": 1,
                    "name": "version",
                    "type": "VERSION"
                  }
                ]
              }
            ]
          },
          {
            "name": "Subset",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 3,
                "name": "traffic_policy",
                "type": "TrafficPolicy"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "LoadBalancerSettings",
            "fields": [
              {
                "id": 1,
                "name": "simple",
                "type": "SimpleLB",
                "oneof_parent": "lb_policy"
              },
              {
                "id": 2,
                "name": "consistent_hash",
                "type": "ConsistentHashLB",
                "oneof_parent": "lb_policy"
              },
              {
                "id": 3,
                "name": "locality_lb_setting",
                "type": "LocalityLoadBalancerSetting"
              },
              {
                "id": 4,
                "name": "warmup_duration_secs",
                "type": "google.protobuf.Duration"
              }
            ],
            "messages": [
              {
                "name": "ConsistentHashLB",
                "fields": [
                  {
                    "id": 1,
                    "name": "http_header_name",
                    "type": "string",
                    "oneof_parent": "hash_key"
                  },
                  {
                    "id": 2,
                    "name": "http_cookie",
                    "type": "HTTPCookie",
                    "oneof_parent": "hash_key"
                  },
                  {
                    "id": 3,
                    "name": "use_source_ip",
                    "type": "bool",
                    "oneof_parent": "hash_key"
                  },
                  {
                    "id": 5,
                    "name": "http_query_parameter_name",
                    "type": "string",
                    "oneof_parent": "hash_key"
                  },
                  {
                    "id": 6,
                    "name": "ring_hash",
                    "type": "RingHash",
                    "oneof_parent": "hash_algorithm"
                  },
                  {
                    "id": 7,
                    "name": "maglev",
                    "type": "MagLev",
                    "oneof_parent": "hash_algorithm"
                  },
                  {
                    "id": 4,
                    "name": "minimum_ring_size",
                    "type": "uint64",
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ]
                  }
                ],
                "messages": [
                  {
                    "name": "RingHash",
                    "fields": [
                      {
                        "id": 1,
                        "name": "minimum_ring_size",
                        "type": "uint64"
                      }
                    ]
                  },
                  {
                    "name": "MagLev",
                    "fields": [
                      {
                        "id": 1,
                        "name": "table_size",
                        "type": "uint64"
                      }
                    ]
                  },
                  {
                    "name": "HTTPCookie",
                    "fields": [
                      {
                        "id": 1,
                        "name": "name",
                        "type": "string",
                        "options": [
                          {
                            "name": "(google.api.field_behavior)",
                            "value": "REQUIRED"
                          }
                        ]
                      },
                      {
                        "id": 2,
                        "name": "path",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "ttl",
                        "type": "google.protobuf.Duration"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "ConnectionPoolSettings",
            "fields": [
              {
                "id": 1,
                "name": "tcp",
                "type": "TCPSettings"
              },
              {
                "id": 2,
                "name": "http",
                "type": "HTTPSettings"
              }
            ],
            "messages": [
              {
                "name": "TCPSettings",
                "fields": [
                  {
                    "id": 1,
                    "name": "max_connections",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "connect_timeout",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 3,
                    "name": "tcp_keepalive",
                    "type": "TcpKeepalive"
                  },
                  {
                    "id": 4,
                    "name": "max_connection_duration",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 5,
                    "name": "idle_timeout",
                    "type": "google.protobuf.Duration"
                  }
                ],
                "messages": [
                  {
                    "name": "TcpKeepalive",
                    "fields": [
                      {
                        "id": 1,
                        "name": "probes",
                        "type": "uint32"
                      },
                      {
                        "id": 2,
                        "name": "time",
                        "type": "google.protobuf.Duration"
                      },
                      {
                        "id": 3,
                        "name": "interval",
                        "type": "google.protobuf.Duration"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "HTTPSettings",
                "fields": [
                  {
                    "id": 1,
                    "name": "http1_max_pending_requests",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "http2_max_requests",
                    "type": "int32"
                  },
                  {
                    "id": 3,
                    "name": "max_requests_per_connection",
                    "type": "int32"
                  },
                  {
                    "id": 4,
                    "name": "max_retries",
                    "type": "int32"
                  },
                  {
                    "id": 5,
                    "name": "idle_timeout",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 6,
                    "name": "h2_upgrade_policy",
                    "type": "H2UpgradePolicy"
                  },
                  {
                    "id": 7,
                    "name": "use_client_protocol",
                    "type": "bool"
                  },
                  {
                    "id": 8,
                    "name": "max_concurrent_streams",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "OutlierDetection",
            "fields": [
              {
                "id": 1,
                "name": "consecutive_errors",
                "type": "int32",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 8,
                "name": "split_external_local_origin_errors",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "consecutive_local_origin_failures",
                "type": "google.protobuf.UInt32Value"
              },
              {
                "id": 6,
                "name": "consecutive_gateway_errors",
                "type": "google.protobuf.UInt32Value"
              },
              {
                "id": 7,
                "name": "consecutive_5xx_errors",
                "type": "google.protobuf.UInt32Value"
              },
              {
                "id": 2,
                "name": "interval",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 3,
                "name": "base_ejection_time",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 4,
                "name": "max_ejection_percent",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "min_health_percent",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ClientTLSSettings",
            "fields": [
              {
                "id": 1,
                "name": "mode",
                "type": "TLSmode"
              },
              {
                "id": 2,
                "name": "client_certificate",
                "type": "string"
              },
              {
                "id": 3,
                "name": "private_key",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ca_certificates",
                "type": "string"
              },
              {
                "id": 7,
                "name": "credential_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "subject_alt_names",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "sni",
                "type": "string"
              },
              {
                "id": 8,
                "name": "insecure_skip_verify",
                "type": "google.protobuf.BoolValue"
              }
            ]
          },
          {
            "name": "LocalityLoadBalancerSetting",
            "fields": [
              {
                "id": 1,
                "name": "distribute",
                "type": "Distribute",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "failover",
                "type": "Failover",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "failover_priority",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "enabled",
                "type": "google.protobuf.BoolValue"
              }
            ],
            "messages": [
              {
                "name": "Distribute",
                "fields": [
                  {
                    "id": 1,
                    "name": "from",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 2,
                      "name": "to",
                      "type": "uint32"
                    }
                  }
                ]
              },
              {
                "name": "Failover",
                "fields": [
                  {
                    "id": 1,
                    "name": "from",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "to",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "networking/v1beta1/virtual_service.proto"
          },
          {
            "path": "type/v1beta1/selector.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1beta1:/:gateway.proto",
      "def": {
        "enums": [
          {
            "name": "ServerTLSSettings.TLSmode",
            "enum_fields": [
              {
                "name": "PASSTHROUGH"
              },
              {
                "name": "SIMPLE",
                "integer": 1
              },
              {
                "name": "MUTUAL",
                "integer": 2
              },
              {
                "name": "AUTO_PASSTHROUGH",
                "integer": 3
              },
              {
                "name": "ISTIO_MUTUAL",
                "integer": 4
              },
              {
                "name": "OPTIONAL_MUTUAL",
                "integer": 5
              }
            ]
          },
          {
            "name": "ServerTLSSettings.TLSProtocol",
            "enum_fields": [
              {
                "name": "TLS_AUTO"
              },
              {
                "name": "TLSV1_0",
                "integer": 1
              },
              {
                "name": "TLSV1_1",
                "integer": 2
              },
              {
                "name": "TLSV1_2",
                "integer": 3
              },
              {
                "name": "TLSV1_3",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Gateway",
            "fields": [
              {
                "id": 1,
                "name": "servers",
                "type": "Server",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "selector",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "Server",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "Port",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 4,
                "name": "bind",
                "type": "string"
              },
              {
                "id": 2,
                "name": "hosts",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 3,
                "name": "tls",
                "type": "ServerTLSSettings"
              },
              {
                "id": 5,
                "name": "default_endpoint",
                "type": "string"
              },
              {
                "id": 6,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "Port",
            "fields": [
              {
                "id": 1,
                "name": "number",
                "type": "uint32",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 4,
                "name": "target_port",
                "type": "uint32",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          },
          {
            "name": "ServerTLSSettings",
            "fields": [
              {
                "id": 1,
                "name": "https_redirect",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "mode",
                "type": "TLSmode"
              },
              {
                "id": 3,
                "name": "server_certificate",
                "type": "string"
              },
              {
                "id": 4,
                "name": "private_key",
                "type": "string"
              },
              {
                "id": 5,
                "name": "ca_certificates",
                "type": "string"
              },
              {
                "id": 10,
                "name": "credential_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "subject_alt_names",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "verify_certificate_spki",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "verify_certificate_hash",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "min_protocol_version",
                "type": "TLSProtocol"
              },
              {
                "id": 8,
                "name": "max_protocol_version",
                "type": "TLSProtocol"
              },
              {
                "id": 9,
                "name": "cipher_suites",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1beta1:/:proxy_config.proto",
      "def": {
        "messages": [
          {
            "name": "ProxyConfig",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "istio.type.v1beta1.WorkloadSelector"
              },
              {
                "id": 2,
                "name": "concurrency",
                "type": "google.protobuf.Int32Value"
              },
              {
                "id": 4,
                "name": "image",
                "type": "ProxyImage"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "environment_variables",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ProxyImage",
            "fields": [
              {
                "id": 1,
                "name": "image_type",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "type/v1beta1/selector.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1beta1:/:service_entry.proto",
      "def": {
        "enums": [
          {
            "name": "ServiceEntry.Location",
            "enum_fields": [
              {
                "name": "MESH_EXTERNAL"
              },
              {
                "name": "MESH_INTERNAL",
                "integer": 1
              }
            ]
          },
          {
            "name": "ServiceEntry.Resolution",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "STATIC",
                "integer": 1
              },
              {
                "name": "DNS",
                "integer": 2
              },
              {
                "name": "DNS_ROUND_ROBIN",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ServiceEntry",
            "fields": [
              {
                "id": 1,
                "name": "hosts",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "addresses",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "ports",
                "type": "ServicePort",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "location",
                "type": "Location"
              },
              {
                "id": 5,
                "name": "resolution",
                "type": "Resolution"
              },
              {
                "id": 6,
                "name": "endpoints",
                "type": "WorkloadEntry",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "workload_selector",
                "type": "WorkloadSelector"
              },
              {
                "id": 7,
                "name": "export_to",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "subject_alt_names",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServicePort",
            "fields": [
              {
                "id": 1,
                "name": "number",
                "type": "uint32",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 4,
                "name": "target_port",
                "type": "uint32"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "networking/v1beta1/sidecar.proto"
          },
          {
            "path": "networking/v1beta1/workload_entry.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1beta1:/:sidecar.proto",
      "def": {
        "enums": [
          {
            "name": "OutboundTrafficPolicy.Mode",
            "enum_fields": [
              {
                "name": "REGISTRY_ONLY"
              },
              {
                "name": "ALLOW_ANY",
                "integer": 1
              }
            ]
          },
          {
            "name": "CaptureMode",
            "enum_fields": [
              {
                "name": "DEFAULT"
              },
              {
                "name": "IPTABLES",
                "integer": 1
              },
              {
                "name": "NONE",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Sidecar",
            "fields": [
              {
                "id": 1,
                "name": "workload_selector",
                "type": "WorkloadSelector"
              },
              {
                "id": 2,
                "name": "ingress",
                "type": "IstioIngressListener",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "egress",
                "type": "IstioEgressListener",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "inbound_connection_pool",
                "type": "ConnectionPoolSettings"
              },
              {
                "id": 4,
                "name": "outbound_traffic_policy",
                "type": "OutboundTrafficPolicy"
              }
            ],
            "reserved_ids": [
              5,
              6
            ],
            "reserved_names": [
              "localhost"
            ]
          },
          {
            "name": "IstioIngressListener",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "SidecarPort",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "bind",
                "type": "string"
              },
              {
                "id": 3,
                "name": "capture_mode",
                "type": "CaptureMode"
              },
              {
                "id": 4,
                "name": "default_endpoint",
                "type": "string"
              },
              {
                "id": 7,
                "name": "tls",
                "type": "ServerTLSSettings"
              },
              {
                "id": 8,
                "name": "connection_pool",
                "type": "ConnectionPoolSettings"
              }
            ],
            "reserved_ids": [
              5,
              6
            ],
            "reserved_names": [
              "localhost_client_tls"
            ]
          },
          {
            "name": "IstioEgressListener",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "SidecarPort"
              },
              {
                "id": 2,
                "name": "bind",
                "type": "string"
              },
              {
                "id": 3,
                "name": "capture_mode",
                "type": "CaptureMode"
              },
              {
                "id": 4,
                "name": "hosts",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              }
            ],
            "reserved_ids": [
              5,
              6
            ],
            "reserved_names": [
              "localhost_server_tls"
            ]
          },
          {
            "name": "WorkloadSelector",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "OutboundTrafficPolicy",
            "fields": [
              {
                "id": 1,
                "name": "mode",
                "type": "Mode"
              },
              {
                "id": 2,
                "name": "egress_proxy",
                "type": "Destination"
              }
            ]
          },
          {
            "name": "SidecarPort",
            "fields": [
              {
                "id": 1,
                "name": "number",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "target_port",
                "type": "uint32",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "networking/v1beta1/destination_rule.proto"
          },
          {
            "path": "networking/v1beta1/gateway.proto"
          },
          {
            "path": "networking/v1beta1/virtual_service.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1beta1:/:virtual_service.proto",
      "def": {
        "enums": [
          {
            "name": "HTTPRedirect.RedirectPortSelection",
            "enum_fields": [
              {
                "name": "FROM_PROTOCOL_DEFAULT"
              },
              {
                "name": "FROM_REQUEST_PORT",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "VirtualService",
            "fields": [
              {
                "id": 1,
                "name": "hosts",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "gateways",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "http",
                "type": "HTTPRoute",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "tls",
                "type": "TLSRoute",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "tcp",
                "type": "TCPRoute",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "export_to",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Destination",
            "fields": [
              {
                "id": 1,
                "name": "host",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "subset",
                "type": "string"
              },
              {
                "id": 3,
                "name": "port",
                "type": "PortSelector"
              }
            ]
          },
          {
            "name": "HTTPRoute",
            "fields": [
              {
                "id": 17,
                "name": "name",
                "type": "string"
              },
              {
                "id": 1,
                "name": "match",
                "type": "HTTPMatchRequest",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "route",
                "type": "HTTPRouteDestination",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "redirect",
                "type": "HTTPRedirect"
              },
              {
                "id": 21,
                "name": "direct_response",
                "type": "HTTPDirectResponse"
              },
              {
                "id": 20,
                "name": "delegate",
                "type": "Delegate"
              },
              {
                "id": 4,
                "name": "rewrite",
                "type": "HTTPRewrite"
              },
              {
                "id": 6,
                "name": "timeout",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 7,
                "name": "retries",
                "type": "HTTPRetry"
              },
              {
                "id": 8,
                "name": "fault",
                "type": "HTTPFaultInjection"
              },
              {
                "id": 9,
                "name": "mirror",
                "type": "Destination"
              },
              {
                "id": 22,
                "name": "mirrors",
                "type": "HTTPMirrorPolicy",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "mirror_percent",
                "type": "google.protobuf.UInt32Value",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 19,
                "name": "mirror_percentage",
                "type": "Percent"
              },
              {
                "id": 10,
                "name": "cors_policy",
                "type": "CorsPolicy"
              },
              {
                "id": 16,
                "name": "headers",
                "type": "Headers"
              }
            ],
            "reserved_ids": [
              5,
              11,
              12,
              13,
              14,
              15
            ],
            "reserved_names": [
              "websocket_upgrade",
              "append_headers",
              "remove_response_headers",
              "append_response_headers",
              "remove_request_headers",
              "append_request_headers"
            ]
          },
          {
            "name": "Delegate",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "Headers",
            "fields": [
              {
                "id": 1,
                "name": "request",
                "type": "HeaderOperations"
              },
              {
                "id": 2,
                "name": "response",
                "type": "HeaderOperations"
              }
            ],
            "messages": [
              {
                "name": "HeaderOperations",
                "fields": [
                  {
                    "id": 3,
                    "name": "remove",
                    "type": "string",
                    "is_repeated": true
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 1,
                      "name": "set",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 2,
                      "name": "add",
                      "type": "string"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "TLSRoute",
            "fields": [
              {
                "id": 1,
                "name": "match",
                "type": "TLSMatchAttributes",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "route",
                "type": "RouteDestination",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TCPRoute",
            "fields": [
              {
                "id": 1,
                "name": "match",
                "type": "L4MatchAttributes",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "route",
                "type": "RouteDestination",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HTTPMatchRequest",
            "fields": [
              {
                "id": 11,
                "name": "name",
                "type": "string"
              },
              {
                "id": 1,
                "name": "uri",
                "type": "StringMatch"
              },
              {
                "id": 2,
                "name": "scheme",
                "type": "StringMatch"
              },
              {
                "id": 3,
                "name": "method",
                "type": "StringMatch"
              },
              {
                "id": 4,
                "name": "authority",
                "type": "StringMatch"
              },
              {
                "id": 6,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 8,
                "name": "gateways",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "ignore_uri_case",
                "type": "bool"
              },
              {
                "id": 13,
                "name": "source_namespace",
                "type": "string"
              },
              {
                "id": 14,
                "name": "stat_prefix",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "headers",
                  "type": "StringMatch"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "source_labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "query_params",
                  "type": "StringMatch"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 12,
                  "name": "without_headers",
                  "type": "StringMatch"
                }
              }
            ]
          },
          {
            "name": "HTTPRouteDestination",
            "fields": [
              {
                "id": 1,
                "name": "destination",
                "type": "Destination",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "weight",
                "type": "int32"
              },
              {
                "id": 7,
                "name": "headers",
                "type": "Headers"
              }
            ],
            "reserved_ids": [
              3,
              4,
              5,
              6
            ],
            "reserved_names": [
              "remove_response_headers",
              "append_response_headers",
              "remove_request_headers",
              "append_request_headers"
            ]
          },
          {
            "name": "RouteDestination",
            "fields": [
              {
                "id": 1,
                "name": "destination",
                "type": "Destination",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "weight",
                "type": "int32"
              }
            ]
          },
          {
            "name": "L4MatchAttributes",
            "fields": [
              {
                "id": 1,
                "name": "destination_subnets",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "source_subnet",
                "type": "string"
              },
              {
                "id": 5,
                "name": "gateways",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "source_namespace",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "source_labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "TLSMatchAttributes",
            "fields": [
              {
                "id": 1,
                "name": "sni_hosts",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "destination_subnets",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 6,
                "name": "gateways",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "source_namespace",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "source_labels",
                  "type": "string"
                }
              }
            ],
            "reserved_ids": [
              4
            ],
            "reserved_names": [
              "source_subnet"
            ]
          },
          {
            "name": "HTTPRedirect",
            "fields": [
              {
                "id": 1,
                "name": "uri",
                "type": "string"
              },
              {
                "id": 2,
                "name": "authority",
                "type": "string"
              },
              {
                "id": 4,
                "name": "port",
                "type": "uint32",
                "oneof_parent": "redirect_port"
              },
              {
                "id": 5,
                "name": "derive_port",
                "type": "RedirectPortSelection",
                "oneof_parent": "redirect_port"
              },
              {
                "id": 6,
                "name": "scheme",
                "type": "string"
              },
              {
                "id": 3,
                "name": "redirect_code",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "HTTPDirectResponse",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "uint32",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "body",
                "type": "HTTPBody"
              }
            ]
          },
          {
            "name": "HTTPBody",
            "fields": [
              {
                "id": 1,
                "name": "string",
                "type": "string",
                "oneof_parent": "specifier"
              },
              {
                "id": 2,
                "name": "bytes",
                "type": "bytes",
                "oneof_parent": "specifier"
              }
            ]
          },
          {
            "name": "HTTPRewrite",
            "fields": [
              {
                "id": 1,
                "name": "uri",
                "type": "string"
              },
              {
                "id": 2,
                "name": "authority",
                "type": "string"
              },
              {
                "id": 3,
                "name": "uri_regex_rewrite",
                "type": "RegexRewrite"
              }
            ]
          },
          {
            "name": "RegexRewrite",
            "fields": [
              {
                "id": 1,
                "name": "match",
                "type": "string"
              },
              {
                "id": 2,
                "name": "rewrite",
                "type": "string"
              }
            ]
          },
          {
            "name": "StringMatch",
            "fields": [
              {
                "id": 1,
                "name": "exact",
                "type": "string",
                "oneof_parent": "match_type"
              },
              {
                "id": 2,
                "name": "prefix",
                "type": "string",
                "oneof_parent": "match_type"
              },
              {
                "id": 3,
                "name": "regex",
                "type": "string",
                "oneof_parent": "match_type"
              }
            ]
          },
          {
            "name": "HTTPRetry",
            "fields": [
              {
                "id": 1,
                "name": "attempts",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "per_try_timeout",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 3,
                "name": "retry_on",
                "type": "string"
              },
              {
                "id": 4,
                "name": "retry_remote_localities",
                "type": "google.protobuf.BoolValue"
              }
            ]
          },
          {
            "name": "CorsPolicy",
            "fields": [
              {
                "id": 1,
                "name": "allow_origin",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 7,
                "name": "allow_origins",
                "type": "StringMatch",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "allow_methods",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "allow_headers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "expose_headers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "max_age",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 6,
                "name": "allow_credentials",
                "type": "google.protobuf.BoolValue"
              }
            ]
          },
          {
            "name": "HTTPFaultInjection",
            "fields": [
              {
                "id": 1,
                "name": "delay",
                "type": "Delay"
              },
              {
                "id": 2,
                "name": "abort",
                "type": "Abort"
              }
            ],
            "messages": [
              {
                "name": "Delay",
                "fields": [
                  {
                    "id": 1,
                    "name": "percent",
                    "type": "int32",
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "fixed_delay",
                    "type": "google.protobuf.Duration",
                    "oneof_parent": "http_delay_type"
                  },
                  {
                    "id": 3,
                    "name": "exponential_delay",
                    "type": "google.protobuf.Duration",
                    "oneof_parent": "http_delay_type"
                  },
                  {
                    "id": 5,
                    "name": "percentage",
                    "type": "Percent"
                  }
                ]
              },
              {
                "name": "Abort",
                "fields": [
                  {
                    "id": 2,
                    "name": "http_status",
                    "type": "int32",
                    "oneof_parent": "error_type"
                  },
                  {
                    "id": 3,
                    "name": "grpc_status",
                    "type": "string",
                    "oneof_parent": "error_type"
                  },
                  {
                    "id": 4,
                    "name": "http2_error",
                    "type": "string",
                    "oneof_parent": "error_type"
                  },
                  {
                    "id": 5,
                    "name": "percentage",
                    "type": "Percent"
                  }
                ],
                "reserved_ids": [
                  1
                ],
                "reserved_names": [
                  "percent"
                ]
              }
            ]
          },
          {
            "name": "HTTPMirrorPolicy",
            "fields": [
              {
                "id": 1,
                "name": "destination",
                "type": "Destination",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "percentage",
                "type": "Percent"
              }
            ]
          },
          {
            "name": "PortSelector",
            "fields": [
              {
                "id": 1,
                "name": "number",
                "type": "uint32"
              }
            ],
            "reserved_ids": [
              2
            ],
            "reserved_names": [
              "name"
            ]
          },
          {
            "name": "Percent",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "double"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1beta1:/:workload_entry.proto",
      "def": {
        "messages": [
          {
            "name": "WorkloadEntry",
            "fields": [
              {
                "id": 1,
                "name": "address",
                "type": "string"
              },
              {
                "id": 4,
                "name": "network",
                "type": "string"
              },
              {
                "id": 5,
                "name": "locality",
                "type": "string"
              },
              {
                "id": 6,
                "name": "weight",
                "type": "uint32"
              },
              {
                "id": 7,
                "name": "service_account",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "ports",
                  "type": "uint32"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "istio.networking.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "networking:/:v1beta1:/:workload_group.proto",
      "def": {
        "messages": [
          {
            "name": "WorkloadGroup",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ObjectMeta"
              },
              {
                "id": 2,
                "name": "template",
                "type": "WorkloadEntry",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 3,
                "name": "probe",
                "type": "ReadinessProbe"
              }
            ],
            "messages": [
              {
                "name": "ObjectMeta",
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 1,
                      "name": "labels",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 2,
                      "name": "annotations",
                      "type": "string"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "ReadinessProbe",
            "fields": [
              {
                "id": 2,
                "name": "initial_delay_seconds",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "timeout_seconds",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "period_seconds",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "success_threshold",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "failure_threshold",
                "type": "int32"
              },
              {
                "id": 7,
                "name": "http_get",
                "type": "HTTPHealthCheckConfig",
                "oneof_parent": "health_check_method"
              },
              {
                "id": 8,
                "name": "tcp_socket",
                "type": "TCPHealthCheckConfig",
                "oneof_parent": "health_check_method"
              },
              {
                "id": 9,
                "name": "exec",
                "type": "ExecHealthCheckConfig",
                "oneof_parent": "health_check_method"
              }
            ]
          },
          {
            "name": "HTTPHealthCheckConfig",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 3,
                "name": "host",
                "type": "string"
              },
              {
                "id": 4,
                "name": "scheme",
                "type": "string"
              },
              {
                "id": 5,
                "name": "http_headers",
                "type": "HTTPHeader",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HTTPHeader",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "TCPHealthCheckConfig",
            "fields": [
              {
                "id": 1,
                "name": "host",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              }
            ]
          },
          {
            "name": "ExecHealthCheckConfig",
            "fields": [
              {
                "id": 1,
                "name": "command",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "networking/v1beta1/workload_entry.proto"
          }
        ],
        "package": {
          "name": "istio.networking.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/networking/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "operator:/:v1alpha1:/:operator.proto",
      "def": {
        "enums": [
          {
            "name": "InstallStatus.Status",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "UPDATING",
                "integer": 1
              },
              {
                "name": "RECONCILING",
                "integer": 2
              },
              {
                "name": "HEALTHY",
                "integer": 3
              },
              {
                "name": "ERROR",
                "integer": 4
              },
              {
                "name": "ACTION_REQUIRED",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "IstioOperatorSpec",
            "fields": [
              {
                "id": 10,
                "name": "profile",
                "type": "string"
              },
              {
                "id": 11,
                "name": "installPackagePath",
                "type": "string"
              },
              {
                "id": 12,
                "name": "hub",
                "type": "string"
              },
              {
                "id": 13,
                "name": "tag",
                "type": "google.protobuf.Value"
              },
              {
                "id": 14,
                "name": "resourceSuffix",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 15,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 16,
                "name": "revision",
                "type": "string"
              },
              {
                "id": 18,
                "name": "compatibilityVersion",
                "type": "string"
              },
              {
                "id": 40,
                "name": "meshConfig",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 50,
                "name": "components",
                "type": "IstioComponentSetSpec"
              },
              {
                "id": 100,
                "name": "values",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 101,
                "name": "unvalidatedValues",
                "type": "google.protobuf.Struct"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 51,
                  "name": "addonComponents",
                  "type": "ExternalComponentSpec",
                  "options": [
                    {
                      "name": "deprecated",
                      "value": "true"
                    }
                  ]
                }
              }
            ],
            "reserved_ids": [
              17
            ],
            "reserved_names": [
              "defaultRevision"
            ]
          },
          {
            "name": "InstallStatus",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "message",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "componentStatus",
                  "type": "VersionStatus"
                }
              }
            ],
            "messages": [
              {
                "name": "VersionStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "version",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "status",
                    "type": "Status"
                  },
                  {
                    "id": 4,
                    "name": "error",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "IstioComponentSetSpec",
            "fields": [
              {
                "id": 29,
                "name": "base",
                "type": "BaseComponentSpec"
              },
              {
                "id": 30,
                "name": "pilot",
                "type": "ComponentSpec"
              },
              {
                "id": 38,
                "name": "cni",
                "type": "ComponentSpec"
              },
              {
                "id": 42,
                "name": "ztunnel",
                "type": "ComponentSpec"
              },
              {
                "id": 39,
                "name": "istiodRemote",
                "type": "ComponentSpec"
              },
              {
                "id": 40,
                "name": "ingressGateways",
                "type": "GatewaySpec",
                "is_repeated": true
              },
              {
                "id": 41,
                "name": "egressGateways",
                "type": "GatewaySpec",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              31,
              32,
              33,
              34,
              35,
              36,
              37
            ],
            "reserved_names": [
              "citadel",
              "policy",
              "telemetry",
              "galley",
              "node_agent",
              "proxy",
              "sidecar_injector"
            ]
          },
          {
            "name": "BaseComponentSpec",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "google.protobuf.BoolValue"
              },
              {
                "id": 50,
                "name": "k8s",
                "type": "KubernetesResourcesSpec"
              }
            ]
          },
          {
            "name": "ComponentSpec",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "google.protobuf.BoolValue"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 10,
                "name": "hub",
                "type": "string"
              },
              {
                "id": 11,
                "name": "tag",
                "type": "google.protobuf.Value"
              },
              {
                "id": 30,
                "name": "spec",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 50,
                "name": "k8s",
                "type": "KubernetesResourcesSpec"
              }
            ]
          },
          {
            "name": "ExternalComponentSpec",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "google.protobuf.BoolValue"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 10,
                "name": "spec",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 30,
                "name": "chartPath",
                "type": "string"
              },
              {
                "id": 35,
                "name": "schema",
                "type": "google.protobuf.Any"
              },
              {
                "id": 50,
                "name": "k8s",
                "type": "KubernetesResourcesSpec"
              }
            ]
          },
          {
            "name": "GatewaySpec",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "google.protobuf.BoolValue"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 10,
                "name": "hub",
                "type": "string"
              },
              {
                "id": 11,
                "name": "tag",
                "type": "google.protobuf.Value"
              },
              {
                "id": 50,
                "name": "k8s",
                "type": "KubernetesResourcesSpec"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "label",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "KubernetesResourcesSpec",
            "fields": [
              {
                "id": 1,
                "name": "affinity",
                "type": "Affinity"
              },
              {
                "id": 2,
                "name": "env",
                "type": "EnvVar",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "hpaSpec",
                "type": "HorizontalPodAutoscalerSpec"
              },
              {
                "id": 4,
                "name": "imagePullPolicy",
                "type": "string"
              },
              {
                "id": 6,
                "name": "podDisruptionBudget",
                "type": "PodDisruptionBudgetSpec"
              },
              {
                "id": 8,
                "name": "priorityClassName",
                "type": "string"
              },
              {
                "id": 9,
                "name": "readinessProbe",
                "type": "ReadinessProbe"
              },
              {
                "id": 10,
                "name": "replicaCount",
                "type": "uint32"
              },
              {
                "id": 11,
                "name": "resources",
                "type": "Resources"
              },
              {
                "id": 12,
                "name": "service",
                "type": "ServiceSpec"
              },
              {
                "id": 13,
                "name": "strategy",
                "type": "DeploymentStrategy"
              },
              {
                "id": 14,
                "name": "tolerations",
                "type": "Toleration",
                "is_repeated": true
              },
              {
                "id": 16,
                "name": "securityContext",
                "type": "PodSecurityContext"
              },
              {
                "id": 17,
                "name": "volumes",
                "type": "k8s.io.api.core.v1.Volume",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "volumeMounts",
                "type": "k8s.io.api.core.v1.VolumeMount",
                "is_repeated": true
              },
              {
                "id": 100,
                "name": "overlays",
                "type": "K8sObjectOverlay",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "nodeSelector",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "podAnnotations",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 15,
                  "name": "serviceAnnotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "K8sObjectOverlay",
            "fields": [
              {
                "id": 1,
                "name": "apiVersion",
                "type": "string"
              },
              {
                "id": 2,
                "name": "kind",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "patches",
                "type": "PathValue",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "PathValue",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "google.protobuf.Value"
                  }
                ]
              }
            ]
          },
          {
            "name": "Affinity",
            "fields": [
              {
                "id": 1,
                "name": "nodeAffinity",
                "type": "NodeAffinity"
              },
              {
                "id": 2,
                "name": "podAffinity",
                "type": "PodAffinity"
              },
              {
                "id": 3,
                "name": "podAntiAffinity",
                "type": "PodAntiAffinity"
              }
            ]
          },
          {
            "name": "ConfigMapKeySelector",
            "fields": [
              {
                "id": 1,
                "name": "localObjectReference",
                "type": "LocalObjectReference"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "optional",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ContainerResourceMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "target",
                "type": "MetricTarget"
              },
              {
                "id": 3,
                "name": "container",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerResourceMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus"
              },
              {
                "id": 3,
                "name": "container",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClientIPConfig",
            "fields": [
              {
                "id": 1,
                "name": "timeoutSeconds",
                "type": "int32"
              }
            ]
          },
          {
            "name": "CrossVersionObjectReference",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "apiVersion",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeploymentStrategy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "rollingUpdate",
                "type": "RollingUpdateDeployment"
              }
            ]
          },
          {
            "name": "EnvVar",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "valueFrom",
                "type": "EnvVarSource"
              }
            ]
          },
          {
            "name": "EnvVarSource",
            "fields": [
              {
                "id": 1,
                "name": "fieldRef",
                "type": "ObjectFieldSelector"
              },
              {
                "id": 2,
                "name": "resourceFieldRef",
                "type": "ResourceFieldSelector"
              },
              {
                "id": 3,
                "name": "configMapKeyRef",
                "type": "ConfigMapKeySelector"
              },
              {
                "id": 4,
                "name": "secretKeyRef",
                "type": "SecretKeySelector"
              }
            ]
          },
          {
            "name": "ExecAction",
            "fields": [
              {
                "id": 1,
                "name": "command",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ExternalMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "metricName",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 2,
                "name": "metricSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "targetValue",
                "type": "IntOrString",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 4,
                "name": "targetAverageValue",
                "type": "IntOrString",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 5,
                "name": "metric",
                "type": "MetricIdentifier"
              },
              {
                "id": 6,
                "name": "target",
                "type": "MetricTarget"
              }
            ]
          },
          {
            "name": "ExternalMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "MetricIdentifier"
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus"
              }
            ]
          },
          {
            "name": "HTTPGetAction",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "IntOrString"
              },
              {
                "id": 3,
                "name": "host",
                "type": "string"
              },
              {
                "id": 4,
                "name": "scheme",
                "type": "string"
              },
              {
                "id": 5,
                "name": "httpHeaders",
                "type": "HTTPHeader",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HTTPHeader",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "HorizontalPodAutoscalerSpec",
            "fields": [
              {
                "id": 1,
                "name": "scaleTargetRef",
                "type": "CrossVersionObjectReference"
              },
              {
                "id": 2,
                "name": "minReplicas",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "maxReplicas",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "metrics",
                "type": "MetricSpec",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "behavior",
                "type": "HorizontalPodAutoScalerBehavior"
              }
            ]
          },
          {
            "name": "HorizontalPodAutoScalerBehavior",
            "fields": [
              {
                "id": 1,
                "name": "scaleUp",
                "type": "HPAScalingRules"
              },
              {
                "id": 2,
                "name": "scaleDown",
                "type": "HPAScalingRules"
              }
            ]
          },
          {
            "name": "HPAScalingRules",
            "fields": [
              {
                "id": 3,
                "name": "stabilizationWindowSeconds",
                "type": "int32"
              },
              {
                "id": 1,
                "name": "selectPolicy",
                "type": "string"
              },
              {
                "id": 2,
                "name": "policies",
                "type": "HPAScalingPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "HPAScalingPolicy",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "periodSeconds",
                "type": "int32"
              }
            ]
          },
          {
            "name": "LocalObjectReference",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "MetricIdentifier",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "optional": true
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
              }
            ]
          },
          {
            "name": "MetricSpec",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "object",
                "type": "ObjectMetricSource"
              },
              {
                "id": 3,
                "name": "pods",
                "type": "PodsMetricSource"
              },
              {
                "id": 4,
                "name": "resource",
                "type": "ResourceMetricSource"
              },
              {
                "id": 7,
                "name": "containerResource",
                "type": "ContainerResourceMetricSource"
              },
              {
                "id": 5,
                "name": "external",
                "type": "ExternalMetricSource"
              }
            ]
          },
          {
            "name": "MetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "object",
                "type": "ObjectMetricStatus"
              },
              {
                "id": 3,
                "name": "pods",
                "type": "PodsMetricStatus"
              },
              {
                "id": 4,
                "name": "resource",
                "type": "ResourceMetricStatus"
              },
              {
                "id": 7,
                "name": "containerResource",
                "type": "ContainerResourceMetricStatus"
              },
              {
                "id": 5,
                "name": "external",
                "type": "ExternalMetricStatus"
              }
            ]
          },
          {
            "name": "MetricTarget",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "IntOrString"
              },
              {
                "id": 3,
                "name": "averageValue",
                "type": "IntOrString"
              },
              {
                "id": 4,
                "name": "averageUtilization",
                "type": "int32"
              }
            ]
          },
          {
            "name": "MetricValueStatus",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "IntOrString"
              },
              {
                "id": 2,
                "name": "averageValue",
                "type": "IntOrString"
              },
              {
                "id": 3,
                "name": "averageUtilization",
                "type": "int32"
              }
            ]
          },
          {
            "name": "NodeAffinity",
            "fields": [
              {
                "id": 1,
                "name": "requiredDuringSchedulingIgnoredDuringExecution",
                "type": "NodeSelector"
              },
              {
                "id": 2,
                "name": "preferredDuringSchedulingIgnoredDuringExecution",
                "type": "PreferredSchedulingTerm",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NodeSelector",
            "fields": [
              {
                "id": 1,
                "name": "nodeSelectorTerms",
                "type": "NodeSelectorTerm",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NodeSelectorTerm",
            "fields": [
              {
                "id": 1,
                "name": "matchExpressions",
                "type": "NodeSelectorRequirement",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "matchFields",
                "type": "NodeSelectorRequirement",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NodeSelectorRequirement",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operator",
                "type": "string"
              },
              {
                "id": 3,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ObjectFieldSelector",
            "fields": [
              {
                "id": 1,
                "name": "apiVersion",
                "type": "string"
              },
              {
                "id": 2,
                "name": "fieldPath",
                "type": "string"
              }
            ]
          },
          {
            "name": "ObjectMeta",
            "fields": [
              {
                "id": 5,
                "name": "name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "ObjectMetricSource",
            "fields": [
              {
                "id": 2,
                "name": "metricName",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "targetValue",
                "type": "IntOrString",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 4,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 5,
                "name": "averageValue",
                "type": "IntOrString",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 1,
                "name": "target",
                "type": "google.protobuf.Value"
              },
              {
                "id": 6,
                "name": "describedObject",
                "type": "CrossVersionObjectReference"
              },
              {
                "id": 8,
                "name": "metric",
                "type": "MetricIdentifier"
              }
            ]
          },
          {
            "name": "ObjectMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "MetricIdentifier"
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus"
              },
              {
                "id": 3,
                "name": "describedObject",
                "type": "CrossVersionObjectReference"
              }
            ]
          },
          {
            "name": "PodAffinity",
            "fields": [
              {
                "id": 1,
                "name": "requiredDuringSchedulingIgnoredDuringExecution",
                "type": "PodAffinityTerm",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "preferredDuringSchedulingIgnoredDuringExecution",
                "type": "WeightedPodAffinityTerm",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodAntiAffinity",
            "fields": [
              {
                "id": 1,
                "name": "requiredDuringSchedulingIgnoredDuringExecution",
                "type": "PodAffinityTerm",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "preferredDuringSchedulingIgnoredDuringExecution",
                "type": "WeightedPodAffinityTerm",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PodAffinityTerm",
            "fields": [
              {
                "id": 1,
                "name": "labelSelector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
              },
              {
                "id": 2,
                "name": "namespaces",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "topologyKey",
                "type": "string"
              }
            ]
          },
          {
            "name": "PodDisruptionBudgetSpec",
            "fields": [
              {
                "id": 1,
                "name": "minAvailable",
                "type": "IntOrString"
              },
              {
                "id": 2,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
              },
              {
                "id": 3,
                "name": "maxUnavailable",
                "type": "IntOrString"
              }
            ]
          },
          {
            "name": "PodsMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "metricName",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 2,
                "name": "targetAverageValue",
                "type": "IntOrString",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "selector",
                "type": "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 4,
                "name": "metric",
                "type": "MetricIdentifier"
              },
              {
                "id": 5,
                "name": "target",
                "type": "MetricTarget"
              }
            ]
          },
          {
            "name": "PodsMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "MetricIdentifier"
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus"
              }
            ]
          },
          {
            "name": "PreferredSchedulingTerm",
            "fields": [
              {
                "id": 1,
                "name": "weight",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "preference",
                "type": "NodeSelectorTerm"
              }
            ]
          },
          {
            "name": "ReadinessProbe",
            "fields": [
              {
                "id": 1,
                "name": "exec",
                "type": "ExecAction"
              },
              {
                "id": 2,
                "name": "httpGet",
                "type": "HTTPGetAction"
              },
              {
                "id": 3,
                "name": "tcpSocket",
                "type": "TCPSocketAction"
              },
              {
                "id": 4,
                "name": "initialDelaySeconds",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "timeoutSeconds",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "periodSeconds",
                "type": "int32"
              },
              {
                "id": 7,
                "name": "successThreshold",
                "type": "int32"
              },
              {
                "id": 8,
                "name": "failureThreshold",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ResourceFieldSelector",
            "fields": [
              {
                "id": 1,
                "name": "containerName",
                "type": "string"
              },
              {
                "id": 2,
                "name": "resource",
                "type": "string"
              },
              {
                "id": 3,
                "name": "divisor",
                "type": "IntOrString"
              }
            ]
          },
          {
            "name": "ResourceMetricSource",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "targetAverageUtilization",
                "type": "int32",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "targetAverageValue",
                "type": "IntOrString",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 4,
                "name": "target",
                "type": "MetricTarget"
              }
            ]
          },
          {
            "name": "ResourceMetricStatus",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "current",
                "type": "MetricValueStatus"
              }
            ]
          },
          {
            "name": "Resources",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "limits",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "requests",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "RollingUpdateDeployment",
            "fields": [
              {
                "id": 1,
                "name": "maxUnavailable",
                "type": "IntOrString"
              },
              {
                "id": 2,
                "name": "maxSurge",
                "type": "IntOrString"
              }
            ]
          },
          {
            "name": "SecretKeySelector",
            "fields": [
              {
                "id": 1,
                "name": "localObjectReference",
                "type": "LocalObjectReference"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "optional",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ServiceSpec",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "ServicePort",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "clusterIP",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "externalIPs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "sessionAffinity",
                "type": "string"
              },
              {
                "id": 8,
                "name": "loadBalancerIP",
                "type": "string"
              },
              {
                "id": 9,
                "name": "loadBalancerSourceRanges",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "externalName",
                "type": "string"
              },
              {
                "id": 11,
                "name": "externalTrafficPolicy",
                "type": "string"
              },
              {
                "id": 12,
                "name": "healthCheckNodePort",
                "type": "int32"
              },
              {
                "id": 13,
                "name": "publishNotReadyAddresses",
                "type": "bool"
              },
              {
                "id": 14,
                "name": "sessionAffinityConfig",
                "type": "SessionAffinityConfig"
              },
              {
                "id": 15,
                "name": "loadBalancerClass",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "selector",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ServicePort",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string"
              },
              {
                "id": 3,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "targetPort",
                "type": "IntOrString"
              },
              {
                "id": 5,
                "name": "nodePort",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "appProtocol",
                "type": "string"
              }
            ]
          },
          {
            "name": "SessionAffinityConfig",
            "fields": [
              {
                "id": 1,
                "name": "clientIP",
                "type": "ClientIPConfig"
              }
            ]
          },
          {
            "name": "TCPSocketAction",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "IntOrString"
              },
              {
                "id": 2,
                "name": "host",
                "type": "string"
              }
            ]
          },
          {
            "name": "Toleration",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operator",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "effect",
                "type": "string"
              },
              {
                "id": 5,
                "name": "tolerationSeconds",
                "type": "int64"
              }
            ]
          },
          {
            "name": "WeightedPodAffinityTerm",
            "fields": [
              {
                "id": 1,
                "name": "weight",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "podAffinityTerm",
                "type": "PodAffinityTerm"
              }
            ]
          },
          {
            "name": "PodSecurityContext",
            "fields": [
              {
                "id": 1,
                "name": "seLinuxOptions",
                "type": "SELinuxOptions"
              },
              {
                "id": 2,
                "name": "runAsUser",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "runAsNonRoot",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "supplementalGroups",
                "type": "int64",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "fsGroup",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "runAsGroup",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "sysctls",
                "type": "Sysctl",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "windowsOptions",
                "type": "WindowsSecurityContextOptions"
              },
              {
                "id": 9,
                "name": "fsGroupChangePolicy",
                "type": "string"
              },
              {
                "id": 10,
                "name": "seccompProfile",
                "type": "SeccompProfile"
              }
            ]
          },
          {
            "name": "SELinuxOptions",
            "fields": [
              {
                "id": 1,
                "name": "user",
                "type": "string"
              },
              {
                "id": 2,
                "name": "role",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "level",
                "type": "string"
              }
            ]
          },
          {
            "name": "Sysctl",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "WindowsSecurityContextOptions",
            "fields": [
              {
                "id": 1,
                "name": "gmsaCredentialSpecName",
                "type": "string"
              },
              {
                "id": 2,
                "name": "gmsaCredentialSpec",
                "type": "string"
              },
              {
                "id": 3,
                "name": "runAsUserName",
                "type": "string"
              }
            ]
          },
          {
            "name": "SeccompProfile",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "localhostProfile",
                "type": "string"
              }
            ]
          },
          {
            "name": "IntOrString",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "intVal",
                "type": "google.protobuf.Int32Value"
              },
              {
                "id": 3,
                "name": "strVal",
                "type": "google.protobuf.StringValue"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto"
          },
          {
            "path": "k8s.io/api/core/v1/generated.proto"
          }
        ],
        "package": {
          "name": "istio.operator.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/operator/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "security:/:v1:/:authorization_policy.proto",
      "def": {
        "enums": [
          {
            "name": "AuthorizationPolicy.Action",
            "enum_fields": [
              {
                "name": "ALLOW"
              },
              {
                "name": "DENY",
                "integer": 1
              },
              {
                "name": "AUDIT",
                "integer": 2
              },
              {
                "name": "CUSTOM",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AuthorizationPolicy",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "istio.type.v1beta1.WorkloadSelector"
              },
              {
                "id": 5,
                "name": "targetRef",
                "type": "istio.type.v1beta1.PolicyTargetReference"
              },
              {
                "id": 2,
                "name": "rules",
                "type": "Rule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "action",
                "type": "Action"
              },
              {
                "id": 4,
                "name": "provider",
                "type": "ExtensionProvider",
                "oneof_parent": "action_detail"
              }
            ],
            "messages": [
              {
                "name": "ExtensionProvider",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "Rule",
            "fields": [
              {
                "id": 1,
                "name": "from",
                "type": "From",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "to",
                "type": "To",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "when",
                "type": "Condition",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "From",
                "fields": [
                  {
                    "id": 1,
                    "name": "source",
                    "type": "Source"
                  }
                ]
              },
              {
                "name": "To",
                "fields": [
                  {
                    "id": 1,
                    "name": "operation",
                    "type": "Operation"
                  }
                ]
              }
            ]
          },
          {
            "name": "Source",
            "fields": [
              {
                "id": 1,
                "name": "principals",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "not_principals",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "request_principals",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "not_request_principals",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "namespaces",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "not_namespaces",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "ip_blocks",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "not_ip_blocks",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "remote_ip_blocks",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "not_remote_ip_blocks",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Operation",
            "fields": [
              {
                "id": 1,
                "name": "hosts",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "not_hosts",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "ports",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "not_ports",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "methods",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "not_methods",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "paths",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "not_paths",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Condition",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "values",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "not_values",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "type/v1beta1/selector.proto"
          }
        ],
        "package": {
          "name": "istio.security.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/security/v1"
          }
        ]
      }
    },
    {
      "protopath": "security:/:v1:/:jwt.proto",
      "def": {
        "messages": [
          {
            "name": "JWTRule",
            "fields": [
              {
                "id": 1,
                "name": "issuer",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "audiences",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "jwks_uri",
                "type": "string"
              },
              {
                "id": 10,
                "name": "jwks",
                "type": "string"
              },
              {
                "id": 6,
                "name": "from_headers",
                "type": "JWTHeader",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "from_params",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "output_payload_to_header",
                "type": "string"
              },
              {
                "id": 12,
                "name": "from_cookies",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "forward_original_token",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "output_claim_to_headers",
                "type": "ClaimToHeader",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "JWTHeader",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "prefix",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClaimToHeader",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "string"
              },
              {
                "id": 2,
                "name": "claim",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          }
        ],
        "package": {
          "name": "istio.security.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/security/v1"
          }
        ]
      }
    },
    {
      "protopath": "security:/:v1:/:request_authentication.proto",
      "def": {
        "messages": [
          {
            "name": "RequestAuthentication",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "istio.type.v1beta1.WorkloadSelector"
              },
              {
                "id": 3,
                "name": "targetRef",
                "type": "istio.type.v1beta1.PolicyTargetReference"
              },
              {
                "id": 2,
                "name": "jwt_rules",
                "type": "JWTRule",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "security/v1/jwt.proto"
          },
          {
            "path": "type/v1beta1/selector.proto"
          }
        ],
        "package": {
          "name": "istio.security.v1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/security/v1"
          }
        ]
      }
    },
    {
      "protopath": "security:/:v1alpha1:/:ca.proto",
      "def": {
        "messages": [
          {
            "name": "IstioCertificateRequest",
            "fields": [
              {
                "id": 1,
                "name": "csr",
                "type": "string"
              },
              {
                "id": 3,
                "name": "validity_duration",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "metadata",
                "type": "google.protobuf.Struct"
              }
            ]
          },
          {
            "name": "IstioCertificateResponse",
            "fields": [
              {
                "id": 1,
                "name": "cert_chain",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "IstioCertificateService",
            "rpcs": [
              {
                "name": "CreateCertificate",
                "in_type": "IstioCertificateRequest",
                "out_type": "IstioCertificateResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/struct.proto"
          }
        ],
        "package": {
          "name": "istio.v1.auth"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/security/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "security:/:v1beta1:/:authorization_policy.proto",
      "def": {
        "enums": [
          {
            "name": "AuthorizationPolicy.Action",
            "enum_fields": [
              {
                "name": "ALLOW"
              },
              {
                "name": "DENY",
                "integer": 1
              },
              {
                "name": "AUDIT",
                "integer": 2
              },
              {
                "name": "CUSTOM",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AuthorizationPolicy",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "istio.type.v1beta1.WorkloadSelector"
              },
              {
                "id": 5,
                "name": "targetRef",
                "type": "istio.type.v1beta1.PolicyTargetReference"
              },
              {
                "id": 2,
                "name": "rules",
                "type": "Rule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "action",
                "type": "Action"
              },
              {
                "id": 4,
                "name": "provider",
                "type": "ExtensionProvider",
                "oneof_parent": "action_detail"
              }
            ],
            "messages": [
              {
                "name": "ExtensionProvider",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "Rule",
            "fields": [
              {
                "id": 1,
                "name": "from",
                "type": "From",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "to",
                "type": "To",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "when",
                "type": "Condition",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "From",
                "fields": [
                  {
                    "id": 1,
                    "name": "source",
                    "type": "Source"
                  }
                ]
              },
              {
                "name": "To",
                "fields": [
                  {
                    "id": 1,
                    "name": "operation",
                    "type": "Operation"
                  }
                ]
              }
            ]
          },
          {
            "name": "Source",
            "fields": [
              {
                "id": 1,
                "name": "principals",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "not_principals",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "request_principals",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "not_request_principals",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "namespaces",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "not_namespaces",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "ip_blocks",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "not_ip_blocks",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "remote_ip_blocks",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "not_remote_ip_blocks",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Operation",
            "fields": [
              {
                "id": 1,
                "name": "hosts",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "not_hosts",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "ports",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "not_ports",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "methods",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "not_methods",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "paths",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "not_paths",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Condition",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "values",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "not_values",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "type/v1beta1/selector.proto"
          }
        ],
        "package": {
          "name": "istio.security.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/security/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "security:/:v1beta1:/:jwt.proto",
      "def": {
        "messages": [
          {
            "name": "JWTRule",
            "fields": [
              {
                "id": 1,
                "name": "issuer",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "audiences",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "jwks_uri",
                "type": "string"
              },
              {
                "id": 10,
                "name": "jwks",
                "type": "string"
              },
              {
                "id": 6,
                "name": "from_headers",
                "type": "JWTHeader",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "from_params",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "output_payload_to_header",
                "type": "string"
              },
              {
                "id": 12,
                "name": "from_cookies",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "forward_original_token",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "output_claim_to_headers",
                "type": "ClaimToHeader",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "JWTHeader",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              },
              {
                "id": 2,
                "name": "prefix",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClaimToHeader",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "string"
              },
              {
                "id": 2,
                "name": "claim",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          }
        ],
        "package": {
          "name": "istio.security.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/security/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "security:/:v1beta1:/:peer_authentication.proto",
      "def": {
        "enums": [
          {
            "name": "MutualTLS.Mode",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "DISABLE",
                "integer": 1
              },
              {
                "name": "PERMISSIVE",
                "integer": 2
              },
              {
                "name": "STRICT",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "PeerAuthentication",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "istio.type.v1beta1.WorkloadSelector"
              },
              {
                "id": 2,
                "name": "mtls",
                "type": "MutualTLS"
              }
            ],
            "maps": [
              {
                "key_type": "uint32",
                "field": {
                  "id": 3,
                  "name": "port_level_mtls",
                  "type": "MutualTLS"
                }
              }
            ],
            "messages": [
              {
                "name": "MutualTLS",
                "fields": [
                  {
                    "id": 1,
                    "name": "mode",
                    "type": "Mode"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "type/v1beta1/selector.proto"
          }
        ],
        "package": {
          "name": "istio.security.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/security/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "security:/:v1beta1:/:request_authentication.proto",
      "def": {
        "messages": [
          {
            "name": "RequestAuthentication",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "istio.type.v1beta1.WorkloadSelector"
              },
              {
                "id": 3,
                "name": "targetRef",
                "type": "istio.type.v1beta1.PolicyTargetReference"
              },
              {
                "id": 2,
                "name": "jwt_rules",
                "type": "JWTRule",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "type/v1beta1/selector.proto"
          },
          {
            "path": "security/v1beta1/jwt.proto"
          }
        ],
        "package": {
          "name": "istio.security.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/security/v1beta1"
          }
        ]
      }
    },
    {
      "protopath": "stability:/:level.proto",
      "def": {
        "enums": [
          {
            "name": "Level",
            "enum_fields": [
              {
                "name": "EXPERIMENTAL"
              },
              {
                "name": "ALPHA",
                "integer": 1
              },
              {
                "name": "BETA",
                "integer": 2
              },
              {
                "name": "STABLE",
                "integer": 3
              }
            ]
          }
        ],
        "package": {
          "name": "istio.stability"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/stability"
          }
        ]
      }
    },
    {
      "protopath": "telemetry:/:v1alpha1:/:telemetry.proto",
      "def": {
        "enums": [
          {
            "name": "WorkloadMode",
            "enum_fields": [
              {
                "name": "CLIENT_AND_SERVER"
              },
              {
                "name": "CLIENT",
                "integer": 1
              },
              {
                "name": "SERVER",
                "integer": 2
              }
            ]
          },
          {
            "name": "MetricSelector.IstioMetric",
            "enum_fields": [
              {
                "name": "ALL_METRICS"
              },
              {
                "name": "REQUEST_COUNT",
                "integer": 1
              },
              {
                "name": "REQUEST_DURATION",
                "integer": 2
              },
              {
                "name": "REQUEST_SIZE",
                "integer": 3
              },
              {
                "name": "RESPONSE_SIZE",
                "integer": 4
              },
              {
                "name": "TCP_OPENED_CONNECTIONS",
                "integer": 5
              },
              {
                "name": "TCP_CLOSED_CONNECTIONS",
                "integer": 6
              },
              {
                "name": "TCP_SENT_BYTES",
                "integer": 7
              },
              {
                "name": "TCP_RECEIVED_BYTES",
                "integer": 8
              },
              {
                "name": "GRPC_REQUEST_MESSAGES",
                "integer": 9
              },
              {
                "name": "GRPC_RESPONSE_MESSAGES",
                "integer": 10
              }
            ]
          },
          {
            "name": "TagOverride.Operation",
            "enum_fields": [
              {
                "name": "UPSERT"
              },
              {
                "name": "REMOVE",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Telemetry",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "istio.type.v1beta1.WorkloadSelector"
              },
              {
                "id": 5,
                "name": "targetRef",
                "type": "istio.type.v1beta1.PolicyTargetReference"
              },
              {
                "id": 2,
                "name": "tracing",
                "type": "Tracing",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "metrics",
                "type": "Metrics",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "access_logging",
                "type": "AccessLogging",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Tracing",
            "fields": [
              {
                "id": 7,
                "name": "match",
                "type": "TracingSelector"
              },
              {
                "id": 2,
                "name": "providers",
                "type": "ProviderRef",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "random_sampling_percentage",
                "type": "google.protobuf.DoubleValue"
              },
              {
                "id": 4,
                "name": "disable_span_reporting",
                "type": "google.protobuf.BoolValue"
              },
              {
                "id": 6,
                "name": "use_request_id_for_trace_sampling",
                "type": "google.protobuf.BoolValue"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "custom_tags",
                  "type": "CustomTag"
                }
              }
            ],
            "messages": [
              {
                "name": "TracingSelector",
                "fields": [
                  {
                    "id": 1,
                    "name": "mode",
                    "type": "WorkloadMode"
                  }
                ]
              },
              {
                "name": "CustomTag",
                "fields": [
                  {
                    "id": 1,
                    "name": "literal",
                    "type": "Literal",
                    "oneof_parent": "type"
                  },
                  {
                    "id": 2,
                    "name": "environment",
                    "type": "Environment",
                    "oneof_parent": "type"
                  },
                  {
                    "id": 3,
                    "name": "header",
                    "type": "RequestHeader",
                    "oneof_parent": "type"
                  }
                ]
              },
              {
                "name": "Literal",
                "fields": [
                  {
                    "id": 1,
                    "name": "value",
                    "type": "string",
                    "options": [
                      {
                        "name": "(google.api.field_behavior)",
                        "value": "REQUIRED"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Environment",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string",
                    "options": [
                      {
                        "name": "(google.api.field_behavior)",
                        "value": "REQUIRED"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "default_value",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "RequestHeader",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string",
                    "options": [
                      {
                        "name": "(google.api.field_behavior)",
                        "value": "REQUIRED"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "default_value",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ProviderRef",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              }
            ]
          },
          {
            "name": "Metrics",
            "fields": [
              {
                "id": 1,
                "name": "providers",
                "type": "ProviderRef",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "overrides",
                "type": "MetricsOverrides",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "reporting_interval",
                "type": "google.protobuf.Duration"
              }
            ]
          },
          {
            "name": "MetricSelector",
            "fields": [
              {
                "id": 1,
                "name": "metric",
                "type": "IstioMetric",
                "oneof_parent": "metric_match"
              },
              {
                "id": 2,
                "name": "custom_metric",
                "type": "string",
                "oneof_parent": "metric_match"
              },
              {
                "id": 3,
                "name": "mode",
                "type": "WorkloadMode"
              }
            ]
          },
          {
            "name": "MetricsOverrides",
            "fields": [
              {
                "id": 1,
                "name": "match",
                "type": "MetricSelector"
              },
              {
                "id": 2,
                "name": "disabled",
                "type": "google.protobuf.BoolValue"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "tag_overrides",
                  "type": "TagOverride"
                }
              }
            ],
            "messages": [
              {
                "name": "TagOverride",
                "fields": [
                  {
                    "id": 1,
                    "name": "operation",
                    "type": "Operation"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "AccessLogging",
            "fields": [
              {
                "id": 4,
                "name": "match",
                "type": "LogSelector"
              },
              {
                "id": 1,
                "name": "providers",
                "type": "ProviderRef",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "disabled",
                "type": "google.protobuf.BoolValue"
              },
              {
                "id": 3,
                "name": "filter",
                "type": "Filter"
              }
            ],
            "messages": [
              {
                "name": "LogSelector",
                "fields": [
                  {
                    "id": 1,
                    "name": "mode",
                    "type": "WorkloadMode"
                  }
                ]
              },
              {
                "name": "Filter",
                "fields": [
                  {
                    "id": 1,
                    "name": "expression",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "type/v1beta1/selector.proto"
          },
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "istio.telemetry.v1alpha1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/telemetry/v1alpha1"
          }
        ]
      }
    },
    {
      "protopath": "type:/:v1beta1:/:selector.proto",
      "def": {
        "enums": [
          {
            "name": "WorkloadMode",
            "enum_fields": [
              {
                "name": "UNDEFINED"
              },
              {
                "name": "CLIENT",
                "integer": 1
              },
              {
                "name": "SERVER",
                "integer": 2
              },
              {
                "name": "CLIENT_AND_SERVER",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "WorkloadSelector",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "match_labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PortSelector",
            "fields": [
              {
                "id": 1,
                "name": "number",
                "type": "uint32",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "REQUIRED"
                  }
                ]
              }
            ]
          },
          {
            "name": "PolicyTargetReference",
            "fields": [
              {
                "id": 1,
                "name": "group",
                "type": "string"
              },
              {
                "id": 2,
                "name": "kind",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          }
        ],
        "package": {
          "name": "istio.type.v1beta1"
        },
        "options": [
          {
            "name": "go_package",
            "value": "istio.io/api/type/v1beta1"
          }
        ]
      }
    }
  ]
}