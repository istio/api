// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/struct.proto";

package istio.common.v1.config;


// AspectRules are intent based
message AspectRule {
  // selector is an attributes based predicate.
  // attr1 == "20" && attr2 == "30"
  string selector = 1;
  // The following aspects apply when the selector predicate evaluates to True
  repeated Aspect aspects = 2;
  // Nested aspect Rule is evaluated if selector predicate evaluates to True
  repeated AspectRule rules = 3;
}


// Aspect is intent based. It specifies the intent "kind"
// following example specifies that the user would like to collect
// response_time with 3 labels (src_consumer_id, target_response_status_code,
// target_service_name)
//
// The Input section tells if target_service_name is not available it can be
// computed using the given expression
//
//      kind: istio/metrics
//      params:
//        metrics:
//        - name: response_time     # What to call this metric outbound.
//          value: metric_response_time  # from wellknown vocabulary
//          metric_kind: DELTA
//          labels:
//          - key: src_consumer_id
//          - key: target_response_status_code
//          - key: target_service_name
//      Inputs:
//           Attr.target_service_name: target_service_name || target_service_id
message Aspect {
  string kind = 1;
  string adapter = 2; // optional, allows specifying an adapter
  // maps from isio Attribute space to aspect.Input proto defined
  // by the aspect
  map<string, string> inputs = 3;
  // Struct representation of a proto defined by the aspect
  google.protobuf.Struct params = 4;
}
