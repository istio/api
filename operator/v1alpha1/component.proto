// Copyright 2019 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/any.proto";
import "k8s.io/api/core/v1/generated.proto";
import "operator/v1alpha1/kubernetes.proto";

package istio.operator.v1alpha1;

option go_package="istio.io/api/operator/v1alpha1";

// IstioComponentSpec defines the desired installed state of Istio components.
message IstioComponentSetSpec {
    BaseComponentSpec base = 29;
    ComponentSpec pilot = 30;
    ComponentSpec proxy = 31;
    ComponentSpec sidecar_injector = 32;
    ComponentSpec policy = 33;
    ComponentSpec telemetry = 34;
    ComponentSpec citadel = 35;
    ComponentSpec node_agent = 36;
    ComponentSpec galley = 37;
    ComponentSpec cni = 38;

    repeated GatewaySpec ingress_gateways = 40;
    repeated GatewaySpec egress_gateways = 41;
}

// Configuration for base component.
message BaseComponentSpec {
    // Selects whether this component is installed.
    TypeBoolValueForPB enabled = 1;
}

// Configuration for internal components.
message ComponentSpec {
    // Selects whether this component is installed.
    TypeBoolValueForPB enabled = 1;
    // Namespace for the component.
    string namespace = 2;
    // Hub for the component (overrides top level hub setting).
    string hub = 10;
    // Tag for the component (overrides top level tag setting).
    string tag = 11;

    // Arbitrary install time configuration for the component.
    TypeInterface spec = 30;

    // Kubernetes resource spec.
    KubernetesResourcesSpec k8s = 50;
}

// Configuration for external components.
message ExternalComponentSpec {
    // Selects whether this component is installed.
    TypeBoolValueForPB enabled = 1;
    // Namespace for the component.
    string namespace = 2;

    // Arbitrary install time configuration for the component.
    TypeInterface spec = 10;

    // Chart path for addon components.
    string chart_path = 30;
    // Optional schema to validate spec against.
    google.protobuf.Any schema = 35;

    // Kubernetes resource spec.
    KubernetesResourcesSpec k8s = 50;
}

// Configuration for gateways.
message GatewaySpec {
    // Selects whether this gateway is installed.
    TypeBoolValueForPB enabled = 1;
    // Namespace for the gateway.
    string namespace = 2;
    // Name for the gateway.
    string name = 3;
    // Labels for the gateway.
    map <string, string> label = 4;

    // Hub for the component (overrides top level hub setting).
    string hub = 10;
    // Tag for the component (overrides top level tag setting).
    string tag = 11;

    // Kubernetes resource spec.
    KubernetesResourcesSpec k8s = 50;
}

// KubernetesResourcesConfig is a common set of k8s resource configs for components.
message KubernetesResourcesSpec {
    // k8s affinity.
    // https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    Affinity affinity = 1;
    // Deployment environment variables.
    // https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
    repeated EnvVar env = 2;
    // k8s HorizontalPodAutoscaler settings.
    // https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
    HorizontalPodAutoscalerSpec hpa_spec = 3;
    // k8s imagePullPolicy.
    // https://kubernetes.io/docs/concepts/containers/images/
    string image_pull_policy = 4;
    // k8s nodeSelector.
    // https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    map<string, string> node_selector = 5;
    // k8s PodDisruptionBudget settings.
    // https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#how-disruption-budgets-work
    PodDisruptionBudgetSpec pod_disruption_budget = 6;
    // k8s pod annotations.
    // https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    map<string, string> pod_annotations = 7;
    // k8s priority_class_name. Default for all resources unless overridden.
    // https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
    string priority_class_name = 8;
    // k8s readinessProbe settings.
    // https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
    // k8s.io.api.core.v1.Probe readiness_probe = 9;
    ReadinessProbe readiness_probe = 9;
    // k8s Deployment replicas setting.
    // https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
    uint32 replica_count = 10;
    // k8s resources settings.
    // https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
    Resources resources = 11;
    // k8s Service settings.
    // https://kubernetes.io/docs/concepts/services-networking/service/
    ServiceSpec service = 12;
    // k8s deployment strategy.
    // https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
    DeploymentStrategy strategy = 13;
    // k8s toleration
    // https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    repeated k8s.io.api.core.v1.Toleration tolerations = 14;
    // k8s service annotations.
    // https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    map<string, string> service_annotations = 15;

    // Overlays for k8s resources in rendered manifests.
    repeated K8sObjectOverlay overlays = 100;
}

// Patch for an existing k8s resource.
message K8sObjectOverlay {
    message PathValue {
        // Path of the form a.[key1:value1].b.[:value2]
        // Where [key1:value1] is a selector for a key-value pair to identify a list element and [:value] is a value
        // selector to identify a list element in a leaf list.
        // All path intermediate nodes must exist.
        string path = 1;
        // Value to add, delete or replace.
        // For add, the path should be a new leaf.
        // For delete, value should be unset.
        // For replace, path should reference an existing node.
        // All values are strings but are converted into appropriate type based on schema.
        TypeInterface value = 2;
    }
    // Resource API version.
    string api_version = 1;
    // Resource kind.
    string kind = 2;
    // Name of resource.
    // Namespace is always the component namespace.
    string name = 3;

    // List of patches to apply to resource.
    repeated PathValue patches = 4;
}


// GOTYPE: map[string]interface{}
message TypeMapStringInterface {}

// GOTYPE: interface{}
message TypeInterface {}

// GOTYPE: *BoolValueForPB
message TypeBoolValueForPB {}
