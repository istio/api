// Copyright 2023 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

// $title: PolicyTargetRef
// $description: Definition of a policy target reference.
// $location: https://istio.io/docs/reference/config/type/target-ref.html

package istio.type;

option go_package="istio.io/api/type";

// PolicyTargetReference format as defined by [GEP-713](https://gateway-api.sigs.k8s.io/geps/gep-713/#policy-targetref-api).

// PolicyTargetReferences specifies the targeted resource which the policy
// can be applied to. It must only target a single resource at a time, but it
// can be used to target larger resources such as Gateways that may apply to
// multiple child resources. The PolicyTargetReference will replace the
// WorkloadSelector for AuthorizationPolicies applied to ambient workloads.
message PolicyTargetReference {
  // group is the group of the target resource.
  //
  // +kubebuilder:validation:MinLength=1
  // +kubebuilder:validation:MaxLength=253
  string group = 1;

  // kind is kind of the target resource.
  //
  // +kubebuilder:validation:MinLength=1
  // +kubebuilder:validation:MaxLength=253
  string kind = 2;

  // name is the name of the target resource.
  //
  // +kubebuilder:validation:MinLength=1
  // +kubebuilder:validation:MaxLength=253
  string name = 3;

  // namespace is the namespace of the referent. When unspecified, the local
  // namespace is inferred. Even when policy targets a resource in a different
  // namespace, it may only apply to traffic originating from the same
  // namespace as the policy.
  //
  // +kubebuilder:validation:MinLength=1
  // +kubebuilder:validation:MaxLength=253
  // +optional
  optional string namespace = 4;
}
