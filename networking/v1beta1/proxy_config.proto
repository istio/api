// Copyright 2021 Istio Authors
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "networking/v1beta1/sidecar.proto";

// $schema: istio.networking.v1beta1.ProxyConfig
// $title: ProxyConfig
// $description: Provides configuration for individual workloads.
// $location: https://istio.io/docs/reference/config/networking/proxy-config.html
// $aliases: [/docs/reference/config/networking/v1beta1/proxy-config]
// $mode: none

// `ProxyConfig` defines configuration for individual workloads. `ProxyConfig` can be configured on a per-workload basis, a per-revision
// basis, a per-namespace basis, or mesh-wide. `ProxyConfig` is not a required resource; there are default values in place.
//
// For mesh level configuration, put the resource in the root configuration namespace for
// your Istio installation *without* a workload selector:
//
// ```yaml
// apiVersion: networking.istio.io/v1beta1
// kind: ProxyConfig
// metadata:
//   name: my-proxyconfig
//   namespace: istio-system
// spec:
//   concurrency: 0
// ```
//
// For workload level configuration, set the `selector` field on the `ProxyConfig` resource:
//
// ```yaml
// apiVersion: networking.istio.io/v1beta1
// kind: ProxyConfig
// metadata:
//   name: per-workload-proxyconfig
//   namespace: example
// spec:
//   selector:
//     labels:
//       app: ratings
//   concurrency: 0
// ```
//
// If a `ProxyConfig` CR is defined that matches a workload it will merge with its `proxy.istio.io/config` annotation if present,
// with the CR taking precedence over the annotation for overlapping fields. Furthermore, options configured in a `ProxyConfig`
// CR matching a workload will similarly merge with mesh-wide and namespace-wide defaults.
//
// **NOTE**: fields in ProxyConfig are not dynamically configured- changes will require restart of workloads to take effect.

package istio.networking.v1beta1;

option go_package= "istio.io/api/networking/v1beta1";

// `ProxyConfig` defines configuration for individual workloads.
//
// <!-- crd generation tags
// +cue-gen:ProxyConfig:groupName:networking.istio.io
// +cue-gen:ProxyConfig:version:v1beta1
// +cue-gen:ProxyConfig:storageVersion
// +cue-gen:ProxyConfig:annotations:helm.sh/resource-policy=keep
// +cue-gen:ProxyConfig:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
// +cue-gen:ProxyConfig:subresource:status
// +cue-gen:ProxyConfig:scope:Namespaced
// +cue-gen:ProxyConfig:resource:categories=istio-io,networking-istio-io,plural=proxyconfigs
// +cue-gen:ProxyConfig:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=networking.istio.io/v1beta1
// +genclient
// +k8s:deepcopy-gen=true
// -->
message ProxyConfig {
  // Criteria used to select the specific set of pods/VMs on which this `ProxyConfig` configuration should be applied.
  // If not set, the `ProxyConfig` resource will be applied to all workloads in the same namespace.
  WorkloadSelector selector = 1;

  // The number of worker threads to run.
  // If unset, defaults to 2. If set to 0, this will be configured to use all cores on the machine using
  // CPU requests and limits.
  google.protobuf.Int32Value concurrency = 2;

  // Additional environment variables for the proxy.
  // Names starting with `ISTIO_META_` will be included in the generated bootstrap and sent to the XDS server.
  map<string,string> environment_variables = 3;
}
