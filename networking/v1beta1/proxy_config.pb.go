// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: networking/v1beta1/proxy_config.proto

package v1beta1

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// `ProxyConfig` defines configuration for individual workloads.
//
// <!-- crd generation tags
// +cue-gen:ProxyConfig:groupName:networking.istio.io
// +cue-gen:ProxyConfig:version:v1beta1
// +cue-gen:ProxyConfig:storageVersion
// +cue-gen:ProxyConfig:annotations:helm.sh/resource-policy=keep
// +cue-gen:ProxyConfig:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
// +cue-gen:ProxyConfig:subresource:status
// +cue-gen:ProxyConfig:scope:Namespaced
// +cue-gen:ProxyConfig:resource:categories=istio-io,networking-istio-io,plural=proxyconfigs
// +cue-gen:ProxyConfig:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=networking.istio.io/v1beta1
// +genclient
// +k8s:deepcopy-gen=true
// -->
type ProxyConfig struct {
	// Criteria used to select the specific set of pods/VMs on which this `ProxyConfig` configuration should be applied.
	// If not set, the `ProxyConfig` resource will be applied to all workloads in the same namespace.
	Selector *WorkloadSelector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	// The number of worker threads to run.
	// If unset, defaults to 2. If set to 0, this will be configured to use all cores on the machine using
	// CPU requests and limits.
	Concurrency *types.Int32Value `protobuf:"bytes,2,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	// Additional environment variables for the proxy.
	// Names starting with `ISTIO_META_` will be included in the generated bootstrap and sent to the XDS server.
	EnvironmentVariables map[string]string `protobuf:"bytes,3,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProxyConfig) Reset()         { *m = ProxyConfig{} }
func (m *ProxyConfig) String() string { return proto.CompactTextString(m) }
func (*ProxyConfig) ProtoMessage()    {}
func (*ProxyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_88cf428724cc0d23, []int{0}
}
func (m *ProxyConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyConfig.Merge(m, src)
}
func (m *ProxyConfig) XXX_Size() int {
	return m.Size()
}
func (m *ProxyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyConfig proto.InternalMessageInfo

func (m *ProxyConfig) GetSelector() *WorkloadSelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *ProxyConfig) GetConcurrency() *types.Int32Value {
	if m != nil {
		return m.Concurrency
	}
	return nil
}

func (m *ProxyConfig) GetEnvironmentVariables() map[string]string {
	if m != nil {
		return m.EnvironmentVariables
	}
	return nil
}

func init() {
	proto.RegisterType((*ProxyConfig)(nil), "istio.networking.v1beta1.ProxyConfig")
	proto.RegisterMapType((map[string]string)(nil), "istio.networking.v1beta1.ProxyConfig.EnvironmentVariablesEntry")
}

func init() {
	proto.RegisterFile("networking/v1beta1/proxy_config.proto", fileDescriptor_88cf428724cc0d23)
}

var fileDescriptor_88cf428724cc0d23 = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xdd, 0x4a, 0xc3, 0x30,
	0x14, 0xc7, 0xe9, 0x86, 0xe2, 0xd2, 0x1b, 0x29, 0x13, 0xea, 0x84, 0x3a, 0x04, 0x61, 0x08, 0xa6,
	0x6c, 0xbb, 0x11, 0x41, 0x04, 0x65, 0x8a, 0x77, 0x52, 0x61, 0x82, 0x37, 0x23, 0xed, 0xce, 0x4a,
	0x58, 0xcd, 0x29, 0xa7, 0x59, 0x67, 0xdf, 0xd0, 0x4b, 0xc1, 0x17, 0x90, 0x3d, 0x89, 0x2c, 0xdd,
	0xdc, 0xc0, 0xf5, 0x2e, 0x21, 0xff, 0x8f, 0xdf, 0x39, 0x61, 0xe7, 0x0a, 0xf4, 0x1c, 0x69, 0x2a,
	0x55, 0xec, 0xe7, 0xdd, 0x10, 0xb4, 0xe8, 0xfa, 0x29, 0xe1, 0x47, 0x31, 0x8a, 0x50, 0x4d, 0x64,
	0xcc, 0x53, 0x42, 0x8d, 0x8e, 0x2b, 0x33, 0x2d, 0x91, 0x6f, 0xc4, 0x7c, 0x25, 0x6e, 0x79, 0x31,
	0x62, 0x9c, 0x80, 0x6f, 0x74, 0xe1, 0x6c, 0xe2, 0xcf, 0x49, 0xa4, 0x29, 0x50, 0x56, 0x3a, 0x5b,
	0xed, 0x1d, 0x05, 0x99, 0x1c, 0x43, 0x24, 0xa8, 0x54, 0x9c, 0x7d, 0xd7, 0x98, 0xfd, 0xbc, 0xac,
	0xbc, 0x37, 0x8d, 0xce, 0x03, 0x3b, 0xc8, 0x20, 0x81, 0x48, 0x23, 0xb9, 0x56, 0xdb, 0xea, 0xd8,
	0xbd, 0x0b, 0x5e, 0x55, 0xcf, 0x5f, 0x91, 0xa6, 0x09, 0x8a, 0xf1, 0xcb, 0xca, 0x11, 0xfc, 0x79,
	0x9d, 0x1b, 0x66, 0x47, 0xa8, 0xa2, 0x19, 0x11, 0xa8, 0xa8, 0x70, 0x6b, 0x26, 0xea, 0x84, 0x97,
	0xbc, 0x7c, 0xcd, 0xcb, 0x9f, 0x94, 0xee, 0xf7, 0x86, 0x22, 0x99, 0x41, 0xb0, 0xad, 0x77, 0x34,
	0x3b, 0x02, 0x95, 0x4b, 0x42, 0xf5, 0x0e, 0x4a, 0x8f, 0x72, 0x41, 0x52, 0x84, 0x09, 0x64, 0x6e,
	0xbd, 0x5d, 0xef, 0xd8, 0xbd, 0xdb, 0x6a, 0xa6, 0xad, 0x61, 0xf8, 0x60, 0x13, 0x31, 0x5c, 0x27,
	0x0c, 0x94, 0xa6, 0x22, 0x68, 0xc2, 0x8e, 0xa7, 0xd6, 0x23, 0x3b, 0xae, 0xb4, 0x38, 0x87, 0xac,
	0x3e, 0x85, 0xc2, 0x2c, 0xa5, 0x11, 0x2c, 0x8f, 0x4e, 0x93, 0xed, 0xe5, 0x4b, 0x74, 0x33, 0x5d,
	0x23, 0x28, 0x2f, 0xd7, 0xb5, 0x2b, 0xeb, 0xee, 0xf2, 0x73, 0xe1, 0x59, 0x5f, 0x0b, 0xcf, 0xfa,
	0x59, 0x78, 0xd6, 0xdb, 0x69, 0x09, 0x2b, 0xd1, 0x17, 0xa9, 0xf4, 0xff, 0x7f, 0x49, 0xb8, 0x6f,
	0xf6, 0xd1, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xb7, 0x65, 0x09, 0x10, 0x02, 0x00, 0x00,
}

func (m *ProxyConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProxyConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.EnvironmentVariables) > 0 {
		for k := range m.EnvironmentVariables {
			v := m.EnvironmentVariables[k]
			baseI := i
			i -= len(v)
			copy(dAtA[i:], v)
			i = encodeVarintProxyConfig(dAtA, i, uint64(len(v)))
			i--
			dAtA[i] = 0x12
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintProxyConfig(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintProxyConfig(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Concurrency != nil {
		{
			size, err := m.Concurrency.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProxyConfig(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Selector != nil {
		{
			size, err := m.Selector.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProxyConfig(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintProxyConfig(dAtA []byte, offset int, v uint64) int {
	offset -= sovProxyConfig(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ProxyConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Selector != nil {
		l = m.Selector.Size()
		n += 1 + l + sovProxyConfig(uint64(l))
	}
	if m.Concurrency != nil {
		l = m.Concurrency.Size()
		n += 1 + l + sovProxyConfig(uint64(l))
	}
	if len(m.EnvironmentVariables) > 0 {
		for k, v := range m.EnvironmentVariables {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovProxyConfig(uint64(len(k))) + 1 + len(v) + sovProxyConfig(uint64(len(v)))
			n += mapEntrySize + 1 + sovProxyConfig(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovProxyConfig(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProxyConfig(x uint64) (n int) {
	return sovProxyConfig(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProxyConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProxyConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Selector", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProxyConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProxyConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Selector == nil {
				m.Selector = &WorkloadSelector{}
			}
			if err := m.Selector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Concurrency", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProxyConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProxyConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Concurrency == nil {
				m.Concurrency = &types.Int32Value{}
			}
			if err := m.Concurrency.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnvironmentVariables", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProxyConfig
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProxyConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EnvironmentVariables == nil {
				m.EnvironmentVariables = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProxyConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProxyConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthProxyConfig
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthProxyConfig
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProxyConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthProxyConfig
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return ErrInvalidLengthProxyConfig
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipProxyConfig(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthProxyConfig
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.EnvironmentVariables[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProxyConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProxyConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProxyConfig(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProxyConfig
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProxyConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProxyConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProxyConfig
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProxyConfig
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProxyConfig
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProxyConfig        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProxyConfig          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProxyConfig = fmt.Errorf("proto: unexpected end of group")
)
