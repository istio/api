{
  "openapi": "3.0.0",
  "components": {
    "schema": {
      "istio.networking.v1alpha3.StringMatch": {
        "description": "Describes how to match a given string in HTTP headers. Match is\n case-sensitive.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "exact": {
                "description": "exact string match",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "prefix": {
                "description": "prefix-based match",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "regex": {
                "description": "ECMAscript style regex-based match",
                "type": "string",
                "format": "string"
              }
            }
          }
        ]
      },
      "istio.networking.v1alpha3.PortSelector": {
        "description": "PortSelector specifies the number of a port to be used for\n matching or selection for final routing.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "number": {
                "description": "Valid port number",
                "type": "integer",
                "minimum": 0,
                "maximum": 4294967295
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "description": "$hide_from_docs",
                "type": "string",
                "format": "string"
              }
            }
          }
        ]
      },
      "istio.networking.v1alpha3.DestinationRule": {
        "type": "object",
        "properties": {
          "exportTo": {
            "description": "A list of namespaces to which this destination rule is exported.\n The resolution of a destination rule to apply to a service occurs in the\n context of a hierarchy of namespaces. Exporting a destination rule allows\n it to be included in the resolution hierarchy for services in\n other namespaces. This feature provides a mechanism for service owners\n and mesh administrators to control the visibility of destination rules\n across namespace boundaries.\n\n If no namespaces are specified then the destination rule is exported to all\n namespaces by default.\n\n The value \".\" is reserved and defines an export to the same namespace that\n the destination rule is declared in. Similarly, the value \"*\" is reserved and\n defines an export to all namespaces.\n\n NOTE: in the current release, the `exportTo` value is restricted to\n \".\" or \"*\" (i.e., the current namespace or all namespaces).",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "host": {
            "description": "REQUIRED. The name of a service from the service registry. Service\n names are looked up from the platform's service registry (e.g.,\n Kubernetes services, Consul services, etc.) and from the hosts\n declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/v1alpha3/service-entry/#ServiceEntry). Rules defined for\n services that do not exist in the service registry will be ignored.\n\n *Note for Kubernetes users*: When short names are used (e.g. \"reviews\"\n instead of \"reviews.default.svc.cluster.local\"), Istio will interpret\n the short name based on the namespace of the rule, not the service. A\n rule in the \"default\" namespace containing a host \"reviews\" will be\n interpreted as \"reviews.default.svc.cluster.local\", irrespective of\n the actual namespace associated with the reviews service. _To avoid\n potential misconfigurations, it is recommended to always use fully\n qualified domain names over short names._\n\n Note that the host field applies to both HTTP and TCP services.",
            "type": "string",
            "format": "string"
          },
          "subsets": {
            "description": "One or more named sets that represent individual versions of a\n service. Traffic policies can be overridden at subset level.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.Subset"
            }
          },
          "trafficPolicy": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.TrafficPolicy"
          }
        }
      },
      "istio.networking.v1alpha3.TrafficPolicy": {
        "description": "Traffic policies to apply for a specific destination, across all\n destination ports. See DestinationRule for examples.",
        "type": "object",
        "properties": {
          "connectionPool": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.ConnectionPoolSettings"
          },
          "loadBalancer": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.LoadBalancerSettings"
          },
          "outlierDetection": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.OutlierDetection"
          },
          "portLevelSettings": {
            "description": "Traffic policies specific to individual ports. Note that port level\n settings will override the destination-level settings. Traffic\n settings specified at the destination-level will not be inherited when\n overridden by port-level settings, i.e. default values will be applied\n to fields omitted in port-level traffic policies.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy"
            }
          },
          "tls": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.TLSSettings"
          }
        }
      },
      "istio.networking.v1alpha3.Subset": {
        "description": "A subset of endpoints of a service. Subsets can be used for scenarios\n like A/B testing, or routing to a specific version of a service. Refer\n to [VirtualService](https://istio.io/docs/reference/config/networking/v1alpha3/virtual-service/#VirtualService) documentation for examples of using\n subsets in these scenarios. In addition, traffic policies defined at the\n service-level can be overridden at a subset-level. The following rule\n uses a round robin load balancing policy for all traffic going to a\n subset named testversion that is composed of endpoints (e.g., pods) with\n labels (version:v3).\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: DestinationRule\n metadata:\n   name: bookinfo-ratings\n spec:\n   host: ratings.prod.svc.cluster.local\n   trafficPolicy:\n     loadBalancer:\n       simple: LEAST_CONN\n   subsets:\n   - name: testversion\n     labels:\n       version: v3\n     trafficPolicy:\n       loadBalancer:\n         simple: ROUND_ROBIN\n ```\n\n **Note:** Policies specified for subsets will not take effect until\n a route rule explicitly sends traffic to this subset.\n\n One or more labels are typically required to identify the subset destination,\n however, when the corresponding DestinationRule represents a host that\n supports multiple SNI hosts (e.g., an egress gateway), a subset without labels\n may be meaningful. In this case a traffic policy with [TLSSettings](#TLSSettings)\n can be used to identify a specific SNI host corresponding to the named subset.",
        "type": "object",
        "required": [
          "labels"
        ],
        "properties": {
          "labels": {
            "description": "Labels apply a filter over the endpoints of a service in the\n service registry. See route rules for examples of usage.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "name": {
            "description": "REQUIRED. Name of the subset. The service name and the subset name can\n be used for traffic splitting in a route rule.",
            "type": "string",
            "format": "string"
          },
          "trafficPolicy": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.TrafficPolicy"
          }
        }
      },
      "istio.networking.v1alpha3.LoadBalancerSettings": {
        "description": "Load balancing policies to apply for a specific destination. See Envoy's\n load balancing\n [documentation](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/load_balancing)\n for more details.\n\n For example, the following rule uses a round robin load balancing policy\n for all traffic going to the ratings service.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: DestinationRule\n metadata:\n   name: bookinfo-ratings\n spec:\n   host: ratings.prod.svc.cluster.local\n   trafficPolicy:\n     loadBalancer:\n       simple: ROUND_ROBIN\n ```\n\n The following example sets up sticky sessions for the ratings service\n hashing-based load balancer for the same ratings service using the\n the User cookie as the hash key.\n\n ```yaml\n  apiVersion: networking.istio.io/v1alpha3\n  kind: DestinationRule\n  metadata:\n    name: bookinfo-ratings\n  spec:\n    host: ratings.prod.svc.cluster.local\n    trafficPolicy:\n      loadBalancer:\n        consistentHash:\n          httpCookie:\n            name: user\n            ttl: 0s\n ```",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "simple": {
                "$ref": "#/components/schema/istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "consistentHash": {
                "$ref": "#/components/schema/istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB"
              }
            }
          }
        ]
      },
      "istio.networking.v1alpha3.ConnectionPoolSettings": {
        "description": "Connection pool settings for an upstream host. The settings apply to\n each individual host in the upstream service.  See Envoy's [circuit\n breaker](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/circuit_breaking)\n for more details. Connection pool settings can be applied at the TCP\n level as well as at HTTP level.\n\n For example, the following rule sets a limit of 100 connections to redis\n service called myredissrv with a connect timeout of 30ms\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: DestinationRule\n metadata:\n   name: bookinfo-redis\n spec:\n   host: myredissrv.prod.svc.cluster.local\n   trafficPolicy:\n     connectionPool:\n       tcp:\n         maxConnections: 100\n         connectTimeout: 30ms\n         tcpKeepalive:\n           time: 7200s\n           interval: 75s\n ```",
        "type": "object",
        "properties": {
          "http": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings"
          },
          "tcp": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings"
          }
        }
      },
      "istio.networking.v1alpha3.OutlierDetection": {
        "description": "A Circuit breaker implementation that tracks the status of each\n individual host in the upstream service.  Applicable to both HTTP and\n TCP services.  For HTTP services, hosts that continually return 5xx\n errors for API calls are ejected from the pool for a pre-defined period\n of time. For TCP services, connection timeouts or connection\n failures to a given host counts as an error when measuring the\n consecutive errors metric. See Envoy's [outlier\n detection](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier)\n for more details.\n\n The following rule sets a connection pool size of 100 connections and\n 1000 concurrent HTTP2 requests, with no more than 10 req/connection to\n \"reviews\" service. In addition, it configures upstream hosts to be\n scanned every 5 mins, such that any host that fails 7 consecutive times\n with 5XX error code will be ejected for 15 minutes.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: DestinationRule\n metadata:\n   name: reviews-cb-policy\n spec:\n   host: reviews.prod.svc.cluster.local\n   trafficPolicy:\n     connectionPool:\n       tcp:\n         maxConnections: 100\n       http:\n         http2MaxRequests: 1000\n         maxRequestsPerConnection: 10\n     outlierDetection:\n       consecutiveErrors: 7\n       interval: 5m\n       baseEjectionTime: 15m\n ```",
        "type": "object",
        "properties": {
          "baseEjectionTime": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          },
          "consecutiveErrors": {
            "description": "Number of errors before a host is ejected from the connection\n pool. Defaults to 5. When the upstream host is accessed over HTTP, a\n 502, 503 or 504 return code qualifies as an error. When the upstream host\n is accessed over an opaque TCP connection, connect timeouts and\n connection error/failure events qualify as an error.",
            "type": "integer",
            "format": "int32"
          },
          "interval": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          },
          "maxEjectionPercent": {
            "description": "Maximum % of hosts in the load balancing pool for the upstream\n service that can be ejected. Defaults to 10%.",
            "type": "integer",
            "format": "int32"
          },
          "minHealthPercent": {
            "description": "Outlier detection will be enabled as long as the associated load balancing\n pool has at least min_health_percent hosts in healthy mode. When the\n percentage of healthy hosts in the load balancing pool drops below this\n threshold, outlier detection will be disabled and the proxy will load balance\n across all hosts in the pool (healthy and unhealthy).  The default is 50%.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "istio.networking.v1alpha3.TLSSettings": {
        "description": "SSL/TLS related settings for upstream connections. See Envoy's [TLS\n context](https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/auth/cert.proto.html)\n for more details. These settings are common to both HTTP and TCP upstreams.\n\n For example, the following rule configures a client to use mutual TLS\n for connections to upstream database cluster.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: DestinationRule\n metadata:\n   name: db-mtls\n spec:\n   host: mydbserver.prod.svc.cluster.local\n   trafficPolicy:\n     tls:\n       mode: MUTUAL\n       clientCertificate: /etc/certs/myclientcert.pem\n       privateKey: /etc/certs/client_private_key.pem\n       caCertificates: /etc/certs/rootcacerts.pem\n ```\n\n The following rule configures a client to use TLS when talking to a\n foreign service whose domain matches *.foo.com.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: DestinationRule\n metadata:\n   name: tls-foo\n spec:\n   host: \"*.foo.com\"\n   trafficPolicy:\n     tls:\n       mode: SIMPLE\n ```\n\n The following rule configures a client to use Istio mutual TLS when talking\n to rating services.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: DestinationRule\n metadata:\n   name: ratings-istio-mtls\n spec:\n   host: ratings.prod.svc.cluster.local\n   trafficPolicy:\n     tls:\n       mode: ISTIO_MUTUAL\n ```",
        "type": "object",
        "properties": {
          "caCertificates": {
            "description": "OPTIONAL: The path to the file containing certificate authority\n certificates to use in verifying a presented server certificate. If\n omitted, the proxy will not verify the server's certificate.\n Should be empty if mode is `ISTIO_MUTUAL`.",
            "type": "string",
            "format": "string"
          },
          "clientCertificate": {
            "description": "REQUIRED if mode is `MUTUAL`. The path to the file holding the\n client-side TLS certificate to use.\n Should be empty if mode is `ISTIO_MUTUAL`.",
            "type": "string",
            "format": "string"
          },
          "mode": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.TLSSettings.TLSmode"
          },
          "privateKey": {
            "description": "REQUIRED if mode is `MUTUAL`. The path to the file holding the\n client's private key.\n Should be empty if mode is `ISTIO_MUTUAL`.",
            "type": "string",
            "format": "string"
          },
          "sni": {
            "description": "SNI string to present to the server during TLS handshake.",
            "type": "string",
            "format": "string"
          },
          "subjectAltNames": {
            "description": "A list of alternate names to verify the subject identity in the\n certificate. If specified, the proxy will verify that the server\n certificate's subject alt name matches one of the specified values.\n If specified, this list overrides the value of subject_alt_names\n from the ServiceEntry.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy": {
        "description": "Traffic policies that apply to specific ports of the service",
        "type": "object",
        "properties": {
          "connectionPool": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.ConnectionPoolSettings"
          },
          "loadBalancer": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.LoadBalancerSettings"
          },
          "outlierDetection": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.OutlierDetection"
          },
          "port": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.PortSelector"
          },
          "tls": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.TLSSettings"
          }
        }
      },
      "istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB": {
        "description": "Standard load balancing algorithms that require no tuning.",
        "enum": [
          "ROUND_ROBIN",
          "LEAST_CONN",
          "RANDOM",
          "PASSTHROUGH"
        ],
        "default": "ROUND_ROBIN"
      },
      "istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB": {
        "description": "Consistent Hash-based load balancing can be used to provide soft\n session affinity based on HTTP headers, cookies or other\n properties. This load balancing policy is applicable only for HTTP\n connections. The affinity to a particular destination host will be\n lost when one or more hosts are added/removed from the destination\n service.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "httpHeaderName": {
                "description": "Hash based on a specific HTTP header.",
                "type": "string",
                "format": "string"
              },
              "minimumRingSize": {
                "description": "The minimum number of virtual nodes to use for the hash\n ring. Defaults to 1024. Larger ring sizes result in more granular\n load distributions. If the number of hosts in the load balancing\n pool is larger than the ring size, each host will be assigned a\n single virtual node.",
                "type": "integer",
                "minimum": 0,
                "maximum": 18446744073709551615
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "httpCookie": {
                "$ref": "#/components/schema/istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie"
              },
              "minimumRingSize": {
                "description": "The minimum number of virtual nodes to use for the hash\n ring. Defaults to 1024. Larger ring sizes result in more granular\n load distributions. If the number of hosts in the load balancing\n pool is larger than the ring size, each host will be assigned a\n single virtual node.",
                "type": "integer",
                "minimum": 0,
                "maximum": 18446744073709551615
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "minimumRingSize": {
                "description": "The minimum number of virtual nodes to use for the hash\n ring. Defaults to 1024. Larger ring sizes result in more granular\n load distributions. If the number of hosts in the load balancing\n pool is larger than the ring size, each host will be assigned a\n single virtual node.",
                "type": "integer",
                "minimum": 0,
                "maximum": 18446744073709551615
              },
              "useSourceIp": {
                "description": "Hash based on the source IP address.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie": {
        "description": "Describes a HTTP cookie that will be used as the hash key for the\n Consistent Hash load balancer. If the cookie is not present, it will\n be generated.",
        "type": "object",
        "properties": {
          "name": {
            "description": "REQUIRED. Name of the cookie.",
            "type": "string",
            "format": "string"
          },
          "path": {
            "description": "Path to set for the cookie.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings": {
        "description": "Settings common to both HTTP and TCP upstream connections.",
        "type": "object",
        "properties": {
          "connectTimeout": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          },
          "maxConnections": {
            "description": "Maximum number of HTTP1 /TCP connections to a destination host. Default 1024.",
            "type": "integer",
            "format": "int32"
          },
          "tcpKeepalive": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive"
          }
        }
      },
      "istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings": {
        "description": "Settings applicable to HTTP1.1/HTTP2/GRPC connections.",
        "type": "object",
        "properties": {
          "h2UpgradePolicy": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy"
          },
          "http1MaxPendingRequests": {
            "description": "Maximum number of pending HTTP requests to a destination. Default 1024.",
            "type": "integer",
            "format": "int32"
          },
          "http2MaxRequests": {
            "description": "Maximum number of requests to a backend. Default 1024.",
            "type": "integer",
            "format": "int32"
          },
          "idleTimeout": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          },
          "maxRequestsPerConnection": {
            "description": "Maximum number of requests per connection to a backend. Setting this\n parameter to 1 disables keep alive. Default 0, meaning \"unlimited\",\n up to 2^29.",
            "type": "integer",
            "format": "int32"
          },
          "maxRetries": {
            "description": "Maximum number of retries that can be outstanding to all hosts in a\n cluster at a given time. Defaults to 1024.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive": {
        "description": "TCP keepalive.",
        "type": "object",
        "properties": {
          "interval": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          },
          "probes": {
            "description": "Maximum number of keepalive probes to send without response before\n deciding the connection is dead. Default is to use the OS level configuration\n (unless overridden, Linux defaults to 9.)",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "time": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          }
        }
      },
      "istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy": {
        "description": "Policy for upgrading http1.1 connections to http2.",
        "enum": [
          "DEFAULT",
          "DO_NOT_UPGRADE",
          "UPGRADE"
        ],
        "default": "DEFAULT"
      },
      "istio.networking.v1alpha3.TLSSettings.TLSmode": {
        "description": "TLS connection mode",
        "enum": [
          "DISABLE",
          "SIMPLE",
          "MUTUAL",
          "ISTIO_MUTUAL"
        ],
        "default": "DISABLE"
      },
      "istio.networking.v1alpha3.EnvoyFilter": {
        "type": "object",
        "required": [
          "workloadLabels"
        ],
        "properties": {
          "configPatches": {
            "description": "REQUIRED. One or more patches with match conditions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectPatch"
            }
          },
          "filters": {
            "description": "$hide_from_docs",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.Filter"
            }
          },
          "workloadLabels": {
            "description": "Deprecated. Use workload_selector instead.\n $hide_from_docs",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "workloadSelector": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.WorkloadSelector"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.Filter": {
        "description": "Deprecated.\n Envoy filters to be added to a network or http filter chain.\n $hide_from_docs",
        "type": "object",
        "properties": {
          "filterConfig": {
            "$ref": "#/components/schema/google.protobuf.Struct"
          },
          "filterName": {
            "description": "REQUIRED: The name of the filter to instantiate. The name must match a supported\n filter _compiled into_ Envoy.",
            "type": "string",
            "format": "string"
          },
          "filterType": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.Filter.FilterType"
          },
          "insertPosition": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.InsertPosition"
          },
          "listenerMatch": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.DeprecatedListenerMatch"
          }
        }
      },
      "istio.networking.v1alpha3.WorkloadSelector": {
        "description": "WorkloadSelector specifies the criteria used to determine if the Gateway,\n Sidecar, or EnvoyFilter resource can be applied to a proxy. The matching criteria\n includes the metadata associated with a proxy, workload instance info such as\n labels attached to the pod/VM, or any other info that the proxy provides\n to Istio during the initial handshake. If multiple conditions are\n specified, all conditions need to match in order for the workload instance to be\n selected. Currently, only label based selection mechanism is supported.",
        "type": "object",
        "required": [
          "labels"
        ],
        "properties": {
          "labels": {
            "description": "REQUIRED: One or more labels that indicate a specific set of pods/VMs\n on which this sidecar configuration should be applied. The scope of\n label search is restricted to the configuration namespace in which the\n the resource is present.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectPatch": {
        "description": "Changes to be made to various envoy config objects.",
        "type": "object",
        "properties": {
          "applyTo": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.ApplyTo"
          },
          "match": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectMatch"
          },
          "patch": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.Patch"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.DeprecatedListenerMatch": {
        "description": "Deprecated.\n Select a listener to add the filter to based on the match conditions.\n All conditions specified in the ListenerMatch must be met for the filter\n to be applied to a listener.\n $hide_from_docs",
        "type": "object",
        "properties": {
          "address": {
            "description": "One or more IP addresses to which the listener is bound. If\n specified, should match at least one address in the list.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "listenerProtocol": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.DeprecatedListenerMatch.ListenerProtocol"
          },
          "listenerType": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.DeprecatedListenerMatch.ListenerType"
          },
          "portNamePrefix": {
            "description": "Instead of using specific port numbers, a set of ports matching a\n given port name prefix can be selected. E.g., \"mongo\" selects ports\n named mongo-port, mongo, mongoDB, MONGO, etc. Matching is case\n insensitive.",
            "type": "string",
            "format": "string"
          },
          "portNumber": {
            "description": "The service port/gateway port to which traffic is being\n sent/received. If not specified, matches all listeners. Even though\n inbound listeners are generated for the instance/pod ports, only\n service ports should be used to match listeners.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.DeprecatedListenerMatch.ListenerType": {
        "enum": [
          "ANY",
          "SIDECAR_INBOUND",
          "SIDECAR_OUTBOUND",
          "GATEWAY"
        ],
        "default": "ANY"
      },
      "istio.networking.v1alpha3.EnvoyFilter.DeprecatedListenerMatch.ListenerProtocol": {
        "enum": [
          "ALL",
          "HTTP",
          "TCP"
        ],
        "default": "ALL"
      },
      "istio.networking.v1alpha3.EnvoyFilter.InsertPosition": {
        "description": "Deprecated.\n Indicates the relative index in the filter chain where the filter should be inserted.\n $hide_from_docs",
        "type": "object",
        "properties": {
          "index": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.InsertPosition.Index"
          },
          "relativeTo": {
            "description": "If BEFORE or AFTER position is specified, specify the name of the\n filter relative to which this filter should be inserted.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.InsertPosition.Index": {
        "description": "Index/position in the filter chain.",
        "enum": [
          "FIRST",
          "LAST",
          "BEFORE",
          "AFTER"
        ],
        "default": "FIRST"
      },
      "istio.networking.v1alpha3.EnvoyFilter.Filter.FilterType": {
        "enum": [
          "INVALID",
          "HTTP",
          "NETWORK"
        ],
        "default": "INVALID"
      },
      "istio.networking.v1alpha3.EnvoyFilter.ApplyTo": {
        "description": "ApplyTo specifies where in the Envoy configuration, the given patch should be applied.",
        "enum": [
          "INVALID",
          "LISTENER",
          "FILTER_CHAIN",
          "NETWORK_FILTER",
          "HTTP_FILTER",
          "ROUTE_CONFIGURATION",
          "VIRTUAL_HOST",
          "CLUSTER"
        ],
        "default": "INVALID"
      },
      "istio.networking.v1alpha3.EnvoyFilter.PatchContext": {
        "description": "PatchContext selects a class of configurations based on the\n traffic flow direction and workload type.",
        "enum": [
          "ANY",
          "SIDECAR_INBOUND",
          "SIDECAR_OUTBOUND",
          "GATEWAY"
        ],
        "default": "ANY"
      },
      "istio.networking.v1alpha3.EnvoyFilter.ClusterMatch": {
        "description": "Conditions specified in ClusterMatch must be met for the patch\n to be applied to a cluster.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The exact name of the cluster to match. To match a specific\n cluster by name, such as the internally generated \"Passthrough\"\n cluster, leave all fields in clusterMatch empty, except the\n name.",
            "type": "string",
            "format": "string"
          },
          "portNumber": {
            "description": "The service port for which this cluster was generated.  If\n omitted, applies to clusters for any port.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "service": {
            "description": "The fully qualified service name for this cluster. If omitted,\n applies to clusters for any service. For services defined\n through service entries, the service name is same as the hosts\n defined in the service entry.",
            "type": "string",
            "format": "string"
          },
          "subset": {
            "description": "The subset associated with the service. If omitted, applies to\n clusters for any subset of a service.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.RouteConfigurationMatch": {
        "description": "Conditions specified in RouteConfigurationMatch must be met for\n the patch to be applied to a route configuration object or a\n specific virtual host within the route configuration.",
        "type": "object",
        "properties": {
          "gateway": {
            "description": "The Istio gateway config's namespace/name for which this route\n configuration was generated. Applies only if the context is\n GATEWAY. Should be in the namespace/name format. Use this field\n in conjunction with the portNumber and portName to accurately\n select the Envoy route configuration for a specific HTTPS\n server within a gateway config object.",
            "type": "string",
            "format": "string"
          },
          "name": {
            "description": "Route configuration name to match on. Can be used to match a\n specific route configuration by name, such as the internally\n generated \"http_proxy\" route configuration for all sidecars.",
            "type": "string",
            "format": "string"
          },
          "portName": {
            "description": "Applicable only for GATEWAY context. The gateway server port\n name for which this route configuration was generated.",
            "type": "string",
            "format": "string"
          },
          "portNumber": {
            "description": "The service port number or gateway server port number for which\n this route configuration was generated. If omitted, applies to\n route configurations for all ports.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "vhost": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.RouteConfigurationMatch.VirtualHostMatch"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.RouteConfigurationMatch.VirtualHostMatch": {
        "description": "Match a specific virtual host inside a route configuration.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The VirtualHosts objects generated by Istio are named as\n host:port, where the host typically corresponds to the\n VirtualService's host field or the hostname of a service in the\n registry.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.ListenerMatch": {
        "description": "Conditions specified in a listener match must be met for the\n patch to be applied to a specific listener across all filter\n chains, or a specific filter chain inside the listener.",
        "type": "object",
        "properties": {
          "filterChain": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.ListenerMatch.FilterChainMatch"
          },
          "name": {
            "description": "Match a specific listener by its name. The listeners generated\n by Pilot are typically named as IP:Port.",
            "type": "string",
            "format": "string"
          },
          "portName": {
            "description": "Instead of using specific port numbers, a set of ports matching\n a given service's port name can be selected. Matching is case\n insensitive.",
            "type": "string",
            "format": "string"
          },
          "portNumber": {
            "description": "The service port/gateway port to which traffic is being\n sent/received. If not specified, matches all listeners. Even though\n inbound listeners are generated for the instance/pod ports, only\n service ports should be used to match listeners.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.ListenerMatch.FilterChainMatch": {
        "description": "For listeners with multiple filter chains (e.g., inbound\n listeners on sidecars with permissive mTLS, gateway listeners\n with multiple SNI matches), the filter chain match can be used\n to select a specific filter chain to patch.",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.ListenerMatch.FilterMatch"
          },
          "sni": {
            "description": "The SNI value used by a filter chain's match condition.  This\n condition will evaluate to false if the filter chain has no\n sni match.",
            "type": "string",
            "format": "string"
          },
          "transportProtocol": {
            "description": "Applies only to SIDECAR_INBOUND context. If non-empty, a\n transport protocol to consider when determining a filter\n chain match.  This value will be compared against the\n transport protocol of a new connection, when it's detected by\n one of the listener filters.\n\n Accepted values include:\n\n * `raw_buffer` - default, used when no transport protocol is detected.\n * `tls` - set when TLS protocol is detected by the TLS inspector.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.ListenerMatch.FilterMatch": {
        "description": "Conditions to match a specific filter within a filter chain.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The filter name to match on.",
            "type": "string",
            "format": "string"
          },
          "subFilter": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.ListenerMatch.SubFilterMatch"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.ListenerMatch.SubFilterMatch": {
        "description": "Conditions to match a specific filter within another\n filter. This field is typically useful to match a HTTP filter\n inside the envoy.http_connection_manager network filter. This\n could also be applicable for thrift filters.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The filter name to match on.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.Patch": {
        "description": "Patch specifies the JSON path in the generated proto and the\n content to merge/remove on the specific path.",
        "type": "object",
        "properties": {
          "operation": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.Patch.Operation"
          },
          "value": {
            "$ref": "#/components/schema/google.protobuf.Value"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.Patch.Operation": {
        "description": "Operation denotes how the patch should be applied to the selected\n configuration.",
        "enum": [
          "INVALID",
          "MERGE",
          "ADD",
          "REMOVE",
          "INSERT_BEFORE",
          "INSERT_AFTER"
        ],
        "default": "INVALID"
      },
      "istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectMatch": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "listener": {
                "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.ListenerMatch"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "routeConfiguration": {
                "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.RouteConfigurationMatch"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "cluster": {
                "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.ClusterMatch"
              }
            }
          }
        ]
      },
      "istio.networking.v1alpha3.EnvoyFilter.EnvoyFilterMatchCondition": {
        "description": "Match conditions for selecting an object to patch.",
        "type": "object",
        "properties": {
          "context": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.PatchContext"
          },
          "match": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectMatch"
          }
        }
      },
      "istio.networking.v1alpha3.Gateway": {
        "type": "object",
        "required": [
          "selector"
        ],
        "properties": {
          "selector": {
            "description": "REQUIRED: One or more labels that indicate a specific set of pods/VMs\n on which this gateway configuration should be applied. The scope of\n label search is restricted to the configuration namespace in which the\n the resource is present. In other words, the Gateway resource must\n reside in the same namespace as the gateway workload instance.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "servers": {
            "description": "REQUIRED: A list of server specifications.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.Server"
            }
          }
        }
      },
      "istio.networking.v1alpha3.Server": {
        "description": "`Server` describes the properties of the proxy on a given load balancer\n port. For example,\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: Gateway\n metadata:\n   name: my-ingress\n spec:\n   selector:\n     app: my-ingress-gateway\n   servers:\n   - port:\n       number: 80\n       name: http2\n       protocol: HTTP2\n     hosts:\n     - \"*\"\n ```\n\n Another example\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: Gateway\n metadata:\n   name: my-tcp-ingress\n spec:\n   selector:\n     app: my-tcp-ingress-gateway\n   servers:\n   - port:\n       number: 27018\n       name: mongo\n       protocol: MONGO\n     hosts:\n     - \"*\"\n ```\n\n The following is an example of TLS configuration for port 443\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: Gateway\n metadata:\n   name: my-tls-ingress\n spec:\n   selector:\n     app: my-tls-ingress-gateway\n   servers:\n   - port:\n       number: 443\n       name: https\n       protocol: HTTPS\n     hosts:\n     - \"*\"\n     tls:\n       mode: SIMPLE\n       serverCertificate: /etc/certs/server.pem\n       privateKey: /etc/certs/privatekey.pem\n ```",
        "type": "object",
        "properties": {
          "bind": {
            "description": "$hide_from_docs\n The ip or the Unix domain socket to which the listener should be bound\n to. Format: `x.x.x.x` or `unix:///path/to/uds` or `unix://@foobar`\n (Linux abstract namespace). When using Unix domain sockets, the port\n number should be 0.",
            "type": "string",
            "format": "string"
          },
          "defaultEndpoint": {
            "description": "The loopback IP endpoint or Unix domain socket to which traffic should\n be forwarded to by default. Format should be `127.0.0.1:PORT` or\n `unix:///path/to/socket` or `unix://@foobar` (Linux abstract namespace).",
            "type": "string",
            "format": "string"
          },
          "hosts": {
            "description": "REQUIRED. One or more hosts exposed by this gateway.\n While typically applicable to\n HTTP services, it can also be used for TCP services using TLS with SNI.\n A host is specified as a `dnsName` with an optional `namespace/` prefix.\n The `dnsName` should be specified using FQDN format, optionally including\n a wildcard character in the left-most component (e.g., `prod/*.example.com`).\n Set the `dnsName` to `*` to select all `VirtualService` hosts from the\n specified namespace (e.g.,`prod/*`). If no `namespace/` is specified,\n the `VirtualService` hosts will be selected from any available namespace.\n Any associated `DestinationRule` in the same namespace will also be used.\n\n A `VirtualService` must be bound to the gateway and must have one or\n more hosts that match the hosts specified in a server. The match\n could be an exact match or a suffix match with the server's hosts. For\n example, if the server's hosts specifies `*.example.com`, a\n `VirtualService` with hosts `dev.example.com` or `prod.example.com` will\n match. However, a `VirtualService` with host `example.com` or\n `newexample.com` will not match.\n\n NOTE: Only virtual services exported to the gateway's namespace\n (e.g., `exportTo` value of `*`) can be referenced.\n Private configurations (e.g., `exportTo` set to `.`) will not be\n available. Refer to the `exportTo` setting in `VirtualService`,\n `DestinationRule`, and `ServiceEntry` configurations for details.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "port": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Port"
          },
          "tls": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Server.TLSOptions"
          }
        }
      },
      "istio.networking.v1alpha3.Port": {
        "description": "Port describes the properties of a specific port of a service.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Label assigned to the port.",
            "type": "string",
            "format": "string"
          },
          "number": {
            "description": "REQUIRED: A valid non-negative integer port number.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "protocol": {
            "description": "REQUIRED: The protocol exposed on the port.\n MUST BE one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS.\n TLS implies the connection will be routed based on the SNI header to\n the destination without terminating the TLS connection.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.Server.TLSOptions": {
        "type": "object",
        "properties": {
          "caCertificates": {
            "description": "REQUIRED if mode is `MUTUAL`. The path to a file containing\n certificate authority certificates to use in verifying a presented\n client side certificate.",
            "type": "string",
            "format": "string"
          },
          "cipherSuites": {
            "description": "Optional: If specified, only support the specified cipher list.\n Otherwise default to the default cipher list supported by Envoy.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "credentialName": {
            "description": "The credentialName stands for a unique identifier that can be used\n to identify the serverCertificate and the privateKey. The\n credentialName appended with suffix \"-cacert\" is used to identify\n the CaCertificates associated with this server. Gateway workloads\n capable of fetching credentials from a remote credential store such\n as Kubernetes secrets, will be configured to retrieve the\n serverCertificate and the privateKey using credentialName, instead\n of using the file system paths specified above. If using mutual TLS,\n gateway workload instances will retrieve the CaCertificates using\n credentialName-cacert. The semantics of the name are platform\n dependent.  In Kubernetes, the default Istio supplied credential\n server expects the credentialName to match the name of the\n Kubernetes secret that holds the server certificate, the private\n key, and the CA certificate (if using mutual TLS). Set the\n `ISTIO_META_USER_SDS` metadata variable in the gateway's proxy to\n enable the dynamic credential fetching feature.",
            "type": "string",
            "format": "string"
          },
          "httpsRedirect": {
            "description": "If set to true, the load balancer will send a 301 redirect for all\n http connections, asking the clients to use HTTPS.",
            "type": "boolean"
          },
          "maxProtocolVersion": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Server.TLSOptions.TLSProtocol"
          },
          "minProtocolVersion": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Server.TLSOptions.TLSProtocol"
          },
          "mode": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Server.TLSOptions.TLSmode"
          },
          "privateKey": {
            "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file\n holding the server's private key.",
            "type": "string",
            "format": "string"
          },
          "serverCertificate": {
            "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file\n holding the server-side TLS certificate to use.",
            "type": "string",
            "format": "string"
          },
          "subjectAltNames": {
            "description": "A list of alternate names to verify the subject identity in the\n certificate presented by the client.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.networking.v1alpha3.Server.TLSOptions.TLSmode": {
        "description": "TLS modes enforced by the proxy",
        "enum": [
          "PASSTHROUGH",
          "SIMPLE",
          "MUTUAL",
          "AUTO_PASSTHROUGH"
        ],
        "default": "PASSTHROUGH"
      },
      "istio.networking.v1alpha3.Server.TLSOptions.TLSProtocol": {
        "description": "TLS protocol versions.",
        "enum": [
          "TLS_AUTO",
          "TLSV1_0",
          "TLSV1_1",
          "TLSV1_2",
          "TLSV1_3"
        ],
        "default": "TLS_AUTO"
      },
      "istio.networking.v1alpha3.ServiceEntry": {
        "type": "object",
        "properties": {
          "addresses": {
            "description": "The virtual IP addresses associated with the service. Could be CIDR\n prefix. For HTTP traffic, generated route configurations will include http route\n domains for both the `addresses` and `hosts` field values and the destination will\n be identified based on the HTTP Host/Authority header.\n If one or more IP addresses are specified,\n the incoming traffic will be identified as belonging to this service\n if the destination IP matches the IP/CIDRs specified in the addresses\n field. If the Addresses field is empty, traffic will be identified\n solely based on the destination port. In such scenarios, the port on\n which the service is being accessed must not be shared by any other\n service in the mesh. In other words, the sidecar will behave as a\n simple TCP proxy, forwarding incoming traffic on a specified port to\n the specified destination endpoint IP/host. Unix domain socket\n addresses are not supported in this field.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "endpoints": {
            "description": "One or more endpoints associated with the service.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.ServiceEntry.Endpoint"
            }
          },
          "exportTo": {
            "description": "A list of namespaces to which this service is exported. Exporting a service\n allows it to be used by sidecars, gateways and virtual services defined in\n other namespaces. This feature provides a mechanism for service owners\n and mesh administrators to control the visibility of services across\n namespace boundaries.\n\n If no namespaces are specified then the service is exported to all\n namespaces by default.\n\n The value \".\" is reserved and defines an export to the same namespace that\n the service is declared in. Similarly the value \"*\" is reserved and\n defines an export to all namespaces.\n\n For a Kubernetes Service, the equivalent effect can be achieved by setting\n the annotation \"networking.istio.io/exportTo\" to a comma-separated list\n of namespace names.\n\n NOTE: in the current release, the `exportTo` value is restricted to\n \".\" or \"*\" (i.e., the current namespace or all namespaces).",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "hosts": {
            "description": "REQUIRED. The hosts associated with the ServiceEntry. Could be a DNS\n name with wildcard prefix.\n\n 1. The hosts field is used to select matching hosts in VirtualServices and DestinationRules.\n 2. For HTTP traffic the HTTP Host/Authority header will be matched against the hosts field.\n 3. For HTTPs or TLS traffic containing Server Name Indication (SNI), the SNI value\n will be matched against the hosts field.\n\n Note that when resolution is set to type DNS\n and no endpoints are specified, the host field will be used as the DNS name\n of the endpoint to route traffic to.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "location": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.ServiceEntry.Location"
          },
          "ports": {
            "description": "REQUIRED. The ports associated with the external service. If the\n Endpoints are Unix domain socket addresses, there must be exactly one\n port.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.Port"
            }
          },
          "resolution": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.ServiceEntry.Resolution"
          },
          "subjectAltNames": {
            "description": "The list of subject alternate names allowed for workload instances that\n implement this service. This information is used to enforce\n [secure-naming](https://istio.io/docs/concepts/security/#secure-naming).\n If specified, the proxy will verify that the server\n certificate's subject alternate name matches one of the specified values.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.networking.v1alpha3.ServiceEntry.Location": {
        "description": "Location specifies whether the service is part of Istio mesh or\n outside the mesh.  Location determines the behavior of several\n features, such as service-to-service mTLS authentication, policy\n enforcement, etc. When communicating with services outside the mesh,\n Istio's mTLS authentication is disabled, and policy enforcement is\n performed on the client-side as opposed to server-side.",
        "enum": [
          "MESH_EXTERNAL",
          "MESH_INTERNAL"
        ],
        "default": "MESH_EXTERNAL"
      },
      "istio.networking.v1alpha3.ServiceEntry.Resolution": {
        "description": "Resolution determines how the proxy will resolve the IP addresses of\n the network endpoints associated with the service, so that it can\n route to one of them. The resolution mode specified here has no impact\n on how the application resolves the IP address associated with the\n service. The application may still have to use DNS to resolve the\n service to an IP so that the outbound traffic can be captured by the\n Proxy. Alternatively, for HTTP services, the application could\n directly communicate with the proxy (e.g., by setting HTTP_PROXY) to\n talk to these services.",
        "enum": [
          "NONE",
          "STATIC",
          "DNS"
        ],
        "default": "NONE"
      },
      "istio.networking.v1alpha3.ServiceEntry.Endpoint": {
        "description": "Endpoint defines a network address (IP or hostname) associated with\n the mesh service.",
        "type": "object",
        "required": [
          "labels",
          "ports"
        ],
        "properties": {
          "address": {
            "description": "REQUIRED: Address associated with the network endpoint without the\n port.  Domain names can be used if and only if the resolution is set\n to DNS, and must be fully-qualified without wildcards. Use the form\n unix:///absolute/path/to/socket for Unix domain socket endpoints.",
            "type": "string",
            "format": "string"
          },
          "labels": {
            "description": "One or more labels associated with the endpoint.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "locality": {
            "description": "The locality associated with the endpoint. A locality corresponds\n to a failure domain (e.g., country/region/zone). Arbitrary failure\n domain hierarchies can be represented by separating each\n encapsulating failure domain by /. For example, the locality of an\n an endpoint in US, in US-East-1 region, within availability zone\n az-1, in data center rack r11 can be represented as\n us/us-east-1/az-1/r11. Istio will configure the sidecar to route to\n endpoints within the same locality as the sidecar. If none of the\n endpoints in the locality are available, endpoints parent locality\n (but within the same network ID) will be chosen. For example, if\n there are two endpoints in same network (networkID \"n1\"), say e1\n with locality us/us-east-1/az-1/r11 and e2 with locality\n us/us-east-1/az-2/r12, a sidecar from us/us-east-1/az-1/r11 locality\n will prefer e1 from the same locality over e2 from a different\n locality. Endpoint e2 could be the IP associated with a gateway\n (that bridges networks n1 and n2), or the IP associated with a\n standard service endpoint.",
            "type": "string",
            "format": "string"
          },
          "network": {
            "description": "Network enables Istio to group endpoints resident in the same L3\n domain/network. All endpoints in the same network are assumed to be\n directly reachable from one another. When endpoints in different\n networks cannot reach each other directly, an Istio Gateway can be\n used to establish connectivity (usually using the\n AUTO_PASSTHROUGH mode in a Gateway Server). This is\n an advanced configuration used typically for spanning an Istio mesh\n over multiple clusters.",
            "type": "string",
            "format": "string"
          },
          "ports": {
            "description": "Set of ports associated with the endpoint. The ports must be\n associated with a port name that was declared as part of the\n service. Do not use for `unix://` addresses.",
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "minimum": 0,
              "maximum": 4294967295
            }
          },
          "weight": {
            "description": "The load balancing weight associated with the endpoint. Endpoints\n with higher weights will receive proportionally higher traffic.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          }
        }
      },
      "istio.networking.v1alpha3.Sidecar": {
        "type": "object",
        "properties": {
          "egress": {
            "description": "Egress specifies the configuration of the sidecar for processing\n outbound traffic from the attached workload instance to other services in the\n mesh. If omitted, Istio will automatically configure the sidecar to be able to\n reach every service in the mesh that is visible to this namespace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.IstioEgressListener"
            }
          },
          "ingress": {
            "description": "Ingress specifies the configuration of the sidecar for processing\n inbound traffic to the attached workload instance. If omitted, Istio will\n automatically configure the sidecar based on the information about the workload\n obtained from the orchestration platform (e.g., exposed ports, services,\n etc.). If specified, inbound ports are configured if and only if the\n workload instance is associated with a service.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.IstioIngressListener"
            }
          },
          "workloadSelector": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.WorkloadSelector"
          }
        }
      },
      "istio.networking.v1alpha3.IstioIngressListener": {
        "description": "IstioIngressListener specifies the properties of an inbound\n traffic listener on the sidecar proxy attached to a workload instance.",
        "type": "object",
        "properties": {
          "bind": {
            "description": "The ip or the Unix domain socket to which the listener should be bound\n to. Format: `x.x.x.x` or `unix:///path/to/uds` or `unix://@foobar` (Linux\n abstract namespace). If omitted, Istio will automatically configure the defaults\n based on imported services and the workload instances to which this\n configuration is applied to.",
            "type": "string",
            "format": "string"
          },
          "captureMode": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.CaptureMode"
          },
          "defaultEndpoint": {
            "description": "REQUIRED: The loopback IP endpoint or Unix domain socket to which\n traffic should be forwarded to. This configuration can be used to\n redirect traffic arriving at the bind point on the sidecar to a port\n or Unix domain socket where the application workload instance is listening for\n connections. Format should be 127.0.0.1:PORT or `unix:///path/to/socket`",
            "type": "string",
            "format": "string"
          },
          "port": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Port"
          }
        }
      },
      "istio.networking.v1alpha3.IstioEgressListener": {
        "description": "IstioEgressListener specifies the properties of an outbound traffic\n listener on the sidecar proxy attached to a workload instance.",
        "type": "object",
        "properties": {
          "bind": {
            "description": "The ip or the Unix domain socket to which the listener should be bound\n to. Port MUST be specified if bind is not empty. Format: `x.x.x.x` or\n `unix:///path/to/uds` or `unix://@foobar` (Linux abstract namespace). If\n omitted, Istio will automatically configure the defaults based on imported\n services, the workload instances to which this configuration is applied to and\n the captureMode. If captureMode is NONE, bind will default to\n 127.0.0.1.",
            "type": "string",
            "format": "string"
          },
          "captureMode": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.CaptureMode"
          },
          "hosts": {
            "description": "REQUIRED: One or more service hosts exposed by the listener\n in `namespace/dnsName` format. Services in the specified namespace\n matching `dnsName` will be exposed.\n The corresponding service can be a service in the service registry\n (e.g., a Kubernetes or cloud foundry service) or a service specified\n using a `ServiceEntry` or `VirtualService` configuration. Any\n associated `DestinationRule` in the same namespace will also be used.\n\n The `dnsName` should be specified using FQDN format, optionally including\n a wildcard character in the left-most component (e.g., `prod/*.example.com`).\n Set the `dnsName` to `*` to select all services from the specified namespace\n (e.g.,`prod/*`). The `namespace` can also be set to `*` to select a particular\n service from any available namespace (e.g., \"*/foo.example.com\").\n\n NOTE: Only services and configuration artifacts exported to the sidecar's\n namespace (e.g., `exportTo` value of `*`) can be referenced.\n Private configurations (e.g., `exportTo` set to `.`) will\n not be available. Refer to the `exportTo` setting in `VirtualService`,\n `DestinationRule`, and `ServiceEntry` configurations for details.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "port": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Port"
          }
        }
      },
      "istio.networking.v1alpha3.CaptureMode": {
        "description": "CaptureMode describes how traffic to a listener is expected to be\n captured. Applicable only when the listener is bound to an IP.",
        "enum": [
          "DEFAULT",
          "IPTABLES",
          "NONE"
        ],
        "default": "DEFAULT"
      },
      "istio.networking.v1alpha3.VirtualService": {
        "type": "object",
        "properties": {
          "exportTo": {
            "description": "A list of namespaces to which this virtual service is exported. Exporting a\n virtual service allows it to be used by sidecars and gateways defined in\n other namespaces. This feature provides a mechanism for service owners\n and mesh administrators to control the visibility of virtual services\n across namespace boundaries.\n\n If no namespaces are specified then the virtual service is exported to all\n namespaces by default.\n\n The value \".\" is reserved and defines an export to the same namespace that\n the virtual service is declared in. Similarly the value \"*\" is reserved and\n defines an export to all namespaces.\n\n NOTE: in the current release, the `exportTo` value is restricted to\n \".\" or \"*\" (i.e., the current namespace or all namespaces).",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "gateways": {
            "description": "The names of gateways and sidecars that should apply these routes. A\n single VirtualService is used for sidecars inside the mesh as well as\n for one or more gateways. The selection condition imposed by this\n field can be overridden using the source field in the match conditions\n of protocol-specific routes. The reserved word `mesh` is used to imply\n all the sidecars in the mesh. When this field is omitted, the default\n gateway (`mesh`) will be used, which would apply the rule to all\n sidecars in the mesh. If a list of gateway names is provided, the\n rules will apply only to the gateways. To apply the rules to both\n gateways and sidecars, specify `mesh` as one of the gateway names.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "hosts": {
            "description": "REQUIRED. The destination hosts to which traffic is being sent. Could\n be a DNS name with wildcard prefix or an IP address.  Depending on the\n platform, short-names can also be used instead of a FQDN (i.e. has no\n dots in the name). In such a scenario, the FQDN of the host would be\n derived based on the underlying platform.\n\n A single VirtualService can be used to describe all the traffic\n properties of the corresponding hosts, including those for multiple\n HTTP and TCP ports. Alternatively, the traffic properties of a host\n can be defined using more than one VirtualService, with certain\n caveats. Refer to the\n [Operations Guide](https://istio.io/docs/ops/traffic-management/deploy-guidelines/#multiple-virtual-services-and-destination-rules-for-the-same-host)\n for details.\n\n *Note for Kubernetes users*: When short names are used (e.g. \"reviews\"\n instead of \"reviews.default.svc.cluster.local\"), Istio will interpret\n the short name based on the namespace of the rule, not the service. A\n rule in the \"default\" namespace containing a host \"reviews will be\n interpreted as \"reviews.default.svc.cluster.local\", irrespective of\n the actual namespace associated with the reviews service. _To avoid\n potential misconfigurations, it is recommended to always use fully\n qualified domain names over short names._\n\n The hosts field applies to both HTTP and TCP services. Service inside\n the mesh, i.e., those found in the service registry, must always be\n referred to using their alphanumeric names. IP addresses are allowed\n only for services defined via the Gateway.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "http": {
            "description": "An ordered list of route rules for HTTP traffic. HTTP routes will be\n applied to platform service ports named 'http-*'/'http2-*'/'grpc-*', gateway\n ports with protocol HTTP/HTTP2/GRPC/ TLS-terminated-HTTPS and service\n entry ports using HTTP/HTTP2/GRPC protocols.  The first rule matching\n an incoming request is used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.HTTPRoute"
            }
          },
          "tcp": {
            "description": "An ordered list of route rules for opaque TCP traffic. TCP routes will\n be applied to any port that is not a HTTP or TLS port. The first rule\n matching an incoming request is used.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.TCPRoute"
            }
          },
          "tls": {
            "description": "An ordered list of route rule for non-terminated TLS \u0026 HTTPS\n traffic. Routing is typically performed using the SNI value presented\n by the ClientHello message. TLS routes will be applied to platform\n service ports named 'https-*', 'tls-*', unterminated gateway ports using\n HTTPS/TLS protocols (i.e. with \"passthrough\" TLS mode) and service\n entry ports using HTTPS/TLS protocols.  The first rule matching an\n incoming request is used.  NOTE: Traffic 'https-*' or 'tls-*' ports\n without associated virtual service will be treated as opaque TCP\n traffic.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.TLSRoute"
            }
          }
        }
      },
      "istio.networking.v1alpha3.HTTPRoute": {
        "description": "Describes match conditions and actions for routing HTTP/1.1, HTTP2, and\n gRPC traffic. See VirtualService for usage examples.",
        "type": "object",
        "required": [
          "appendHeaders",
          "appendResponseHeaders",
          "appendRequestHeaders"
        ],
        "properties": {
          "appendHeaders": {
            "description": "Use of `append_headers` is deprecated. Use the `headers`\n field instead.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "appendRequestHeaders": {
            "description": "Use of `append_request_headers` is deprecated. Use the `headers`\n field instead.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "appendResponseHeaders": {
            "description": "Use of `append_response_headers` is deprecated. Use the `headers`\n field instead.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "corsPolicy": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.CorsPolicy"
          },
          "fault": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.HTTPFaultInjection"
          },
          "headers": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Headers"
          },
          "match": {
            "description": "Match conditions to be satisfied for the rule to be\n activated. All conditions inside a single match block have AND\n semantics, while the list of match blocks have OR semantics. The rule\n is matched if any one of the match blocks succeed.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.HTTPMatchRequest"
            }
          },
          "mirror": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Destination"
          },
          "redirect": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.HTTPRedirect"
          },
          "removeRequestHeaders": {
            "description": "Use of `remove_request_headers` is deprecated. Use the `headers`\n field instead.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "removeResponseHeaders": {
            "description": "Use of `remove_response_header` is deprecated. Use the `headers`\n field instead.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "retries": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.HTTPRetry"
          },
          "rewrite": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.HTTPRewrite"
          },
          "route": {
            "description": "A http rule can either redirect or forward (default) traffic. The\n forwarding target can be one of several versions of a service (see\n glossary in beginning of document). Weights associated with the\n service version determine the proportion of traffic it receives.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.HTTPRouteDestination"
            }
          },
          "timeout": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          },
          "websocketUpgrade": {
            "description": "Deprecated. Websocket upgrades are done automatically starting from Istio 1.0.\n $hide_from_docs",
            "type": "boolean"
          }
        }
      },
      "istio.networking.v1alpha3.TLSRoute": {
        "description": "Describes match conditions and actions for routing unterminated TLS\n traffic (TLS/HTTPS) The following routing rule forwards unterminated TLS\n traffic arriving at port 443 of gateway called \"mygateway\" to internal\n services in the mesh based on the SNI value.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: bookinfo-sni\n spec:\n   hosts:\n   - \"*.bookinfo.com\"\n   gateways:\n   - mygateway\n   tls:\n   - match:\n     - port: 443\n       sniHosts:\n       - login.bookinfo.com\n     route:\n     - destination:\n         host: login.prod.svc.cluster.local\n   - match:\n     - port: 443\n       sniHosts:\n       - reviews.bookinfo.com\n     route:\n     - destination:\n         host: reviews.prod.svc.cluster.local\n ```",
        "type": "object",
        "properties": {
          "match": {
            "description": "REQUIRED. Match conditions to be satisfied for the rule to be\n activated. All conditions inside a single match block have AND\n semantics, while the list of match blocks have OR semantics. The rule\n is matched if any one of the match blocks succeed.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.TLSMatchAttributes"
            }
          },
          "route": {
            "description": "The destination to which the connection should be forwarded to.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.RouteDestination"
            }
          }
        }
      },
      "istio.networking.v1alpha3.TCPRoute": {
        "description": "Describes match conditions and actions for routing TCP traffic. The\n following routing rule forwards traffic arriving at port 27017 for\n mongo.prod.svc.cluster.local to another Mongo server on port 5555.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: bookinfo-Mongo\n spec:\n   hosts:\n   - mongo.prod.svc.cluster.local\n   tcp:\n   - match:\n     - port: 27017\n     route:\n     - destination:\n         host: mongo.backup.svc.cluster.local\n         port:\n           number: 5555\n ```",
        "type": "object",
        "properties": {
          "match": {
            "description": "Match conditions to be satisfied for the rule to be\n activated. All conditions inside a single match block have AND\n semantics, while the list of match blocks have OR semantics. The rule\n is matched if any one of the match blocks succeed.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.L4MatchAttributes"
            }
          },
          "route": {
            "description": "The destination to which the connection should be forwarded to.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.RouteDestination"
            }
          }
        }
      },
      "istio.networking.v1alpha3.Destination": {
        "description": "Destination indicates the network addressable service to which the\n request/connection will be sent after processing a routing rule. The\n destination.host should unambiguously refer to a service in the service\n registry. Istio's service registry is composed of all the services found\n in the platform's service registry (e.g., Kubernetes services, Consul\n services), as well as services declared through the\n [ServiceEntry](https://istio.io/docs/reference/config/networking/v1alpha3/service-entry/#ServiceEntry) resource.\n\n *Note for Kubernetes users*: When short names are used (e.g. \"reviews\"\n instead of \"reviews.default.svc.cluster.local\"), Istio will interpret\n the short name based on the namespace of the rule, not the service. A\n rule in the \"default\" namespace containing a host \"reviews will be\n interpreted as \"reviews.default.svc.cluster.local\", irrespective of the\n actual namespace associated with the reviews service. _To avoid potential\n misconfigurations, it is recommended to always use fully qualified\n domain names over short names._\n\n The following Kubernetes example routes all traffic by default to pods\n of the reviews service with label \"version: v1\" (i.e., subset v1), and\n some to subset v2, in a Kubernetes environment.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: reviews-route\n   namespace: foo\n spec:\n   hosts:\n   - reviews # interpreted as reviews.foo.svc.cluster.local\n   http:\n   - match:\n     - uri:\n         prefix: \"/wpcatalog\"\n     - uri:\n         prefix: \"/consumercatalog\"\n     rewrite:\n       uri: \"/newcatalog\"\n     route:\n     - destination:\n         host: reviews # interpreted as reviews.foo.svc.cluster.local\n         subset: v2\n   - route:\n     - destination:\n         host: reviews # interpreted as reviews.foo.svc.cluster.local\n         subset: v1\n ```\n\n And the associated DestinationRule\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: DestinationRule\n metadata:\n   name: reviews-destination\n   namespace: foo\n spec:\n   host: reviews # interpreted as reviews.foo.svc.cluster.local\n   subsets:\n   - name: v1\n     labels:\n       version: v1\n   - name: v2\n     labels:\n       version: v2\n ```\n\n The following VirtualService sets a timeout of 5s for all calls to\n productpage.prod.svc.cluster.local service in Kubernetes. Notice that\n there are no subsets defined in this rule. Istio will fetch all\n instances of productpage.prod.svc.cluster.local service from the service\n registry and populate the sidecar's load balancing pool. Also, notice\n that this rule is set in the istio-system namespace but uses the fully\n qualified domain name of the productpage service,\n productpage.prod.svc.cluster.local. Therefore the rule's namespace does\n not have an impact in resolving the name of the productpage service.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: my-productpage-rule\n   namespace: istio-system\n spec:\n   hosts:\n   - productpage.prod.svc.cluster.local # ignores rule namespace\n   http:\n   - timeout: 5s\n     route:\n     - destination:\n         host: productpage.prod.svc.cluster.local\n ```\n\n To control routing for traffic bound to services outside the mesh, external\n services must first be added to Istio's internal service registry using the\n ServiceEntry resource. VirtualServices can then be defined to control traffic\n bound to these external services. For example, the following rules define a\n Service for wikipedia.org and set a timeout of 5s for http requests.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: ServiceEntry\n metadata:\n   name: external-svc-wikipedia\n spec:\n   hosts:\n   - wikipedia.org\n   location: MESH_EXTERNAL\n   ports:\n   - number: 80\n     name: example-http\n     protocol: HTTP\n   resolution: DNS\n\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: my-wiki-rule\n spec:\n   hosts:\n   - wikipedia.org\n   http:\n   - timeout: 5s\n     route:\n     - destination:\n         host: wikipedia.org\n ```",
        "type": "object",
        "properties": {
          "host": {
            "description": "REQUIRED. The name of a service from the service registry. Service\n names are looked up from the platform's service registry (e.g.,\n Kubernetes services, Consul services, etc.) and from the hosts\n declared by [ServiceEntry](https://istio.io/docs/reference/config/networking/v1alpha3/service-entry/#ServiceEntry). Traffic forwarded to\n destinations that are not found in either of the two, will be dropped.\n\n *Note for Kubernetes users*: When short names are used (e.g. \"reviews\"\n instead of \"reviews.default.svc.cluster.local\"), Istio will interpret\n the short name based on the namespace of the rule, not the service. A\n rule in the \"default\" namespace containing a host \"reviews will be\n interpreted as \"reviews.default.svc.cluster.local\", irrespective of\n the actual namespace associated with the reviews service. _To avoid\n potential misconfigurations, it is recommended to always use fully\n qualified domain names over short names._",
            "type": "string",
            "format": "string"
          },
          "port": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.PortSelector"
          },
          "subset": {
            "description": "The name of a subset within the service. Applicable only to services\n within the mesh. The subset must be defined in a corresponding\n DestinationRule.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.HTTPMatchRequest": {
        "description": "HttpMatchRequest specifies a set of criterion to be met in order for the\n rule to be applied to the HTTP request. For example, the following\n restricts the rule to match only requests where the URL path\n starts with /ratings/v2/ and the request contains a custom `end-user` header\n with value `jason`.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: ratings-route\n spec:\n   hosts:\n   - ratings.prod.svc.cluster.local\n   http:\n   - match:\n     - headers:\n         end-user:\n           exact: jason\n       uri:\n         prefix: \"/ratings/v2/\"\n       ignoreUriCase: true\n     route:\n     - destination:\n         host: ratings.prod.svc.cluster.local\n ```\n\n HTTPMatchRequest CANNOT be empty.",
        "type": "object",
        "required": [
          "headers",
          "sourceLabels",
          "queryParams"
        ],
        "properties": {
          "authority": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.StringMatch"
          },
          "gateways": {
            "description": "Names of gateways where the rule should be applied to. Gateway names\n at the top of the VirtualService (if any) are overridden. The gateway match is\n independent of sourceLabels.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "headers": {
            "description": "The header keys must be lowercase and use hyphen as the separator,\n e.g. _x-request-id_.\n\n Header values are case-sensitive and formatted as follows:\n\n - `exact: \"value\"` for exact string match\n\n - `prefix: \"value\"` for prefix-based match\n\n - `regex: \"value\"` for ECMAscript style regex-based match\n\n **Note:** The keys `uri`, `scheme`, `method`, and `authority` will be ignored.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.StringMatch"
            }
          },
          "ignoreUriCase": {
            "description": "Flag to specify whether the URI matching should be case-insensitive.\n\n **Note:** The case will be ignored only in the case of `exact` and `prefix`\n URI matches.",
            "type": "boolean"
          },
          "method": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.StringMatch"
          },
          "port": {
            "description": "Specifies the ports on the host that is being addressed. Many services\n only expose a single port or label ports with the protocols they support,\n in these cases it is not required to explicitly select the port.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "queryParams": {
            "description": "Query parameters for matching.\n\n Ex:\n - For a query parameter like \"?key=true\", the map key would be \"key\" and\n   the string match could be defined as `exact: \"true\"`.\n - For a query parameter like \"?key\", the map key would be \"key\" and the\n   string match could be defined as `exact: \"\"`.\n - For a query parameter like \"?key=123\", the map key would be \"key\" and the\n   string match could be defined as `regex: \"\\d+$\"`. Note that this\n   configuration will only match values like \"123\" but not \"a123\" or \"123a\".\n\n **Note:** `prefix` matching is currently not supported.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/istio.networking.v1alpha3.StringMatch"
            }
          },
          "scheme": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.StringMatch"
          },
          "sourceLabels": {
            "description": "One or more labels that constrain the applicability of a rule to\n workloads with the given labels. If the VirtualService has a list of\n gateways specified at the top, it should include the reserved gateway\n `mesh` in order for this field to be applicable.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "uri": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.StringMatch"
          }
        }
      },
      "istio.networking.v1alpha3.HTTPRouteDestination": {
        "description": "Each routing rule is associated with one or more service versions (see\n glossary in beginning of document). Weights associated with the version\n determine the proportion of traffic it receives. For example, the\n following rule will route 25% of traffic for the \"reviews\" service to\n instances with the \"v2\" tag and the remaining traffic (i.e., 75%) to\n \"v1\".\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: reviews-route\n spec:\n   hosts:\n   - reviews.prod.svc.cluster.local\n   http:\n   - route:\n     - destination:\n         host: reviews.prod.svc.cluster.local\n         subset: v2\n       weight: 25\n     - destination:\n         host: reviews.prod.svc.cluster.local\n         subset: v1\n       weight: 75\n ```\n\n And the associated DestinationRule\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: DestinationRule\n metadata:\n   name: reviews-destination\n spec:\n   host: reviews.prod.svc.cluster.local\n   subsets:\n   - name: v1\n     labels:\n       version: v1\n   - name: v2\n     labels:\n       version: v2\n ```\n\n Traffic can also be split across two entirely different services without\n having to define new subsets. For example, the following rule forwards 25% of\n traffic to reviews.com to dev.reviews.com\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: reviews-route-two-domains\n spec:\n   hosts:\n   - reviews.com\n   http:\n   - route:\n     - destination:\n         host: dev.reviews.com\n       weight: 25\n     - destination:\n         host: reviews.com\n       weight: 75\n ```",
        "type": "object",
        "required": [
          "appendResponseHeaders",
          "appendRequestHeaders"
        ],
        "properties": {
          "appendRequestHeaders": {
            "description": "Use of `append_request_headers` is deprecated. Use the `headers`\n field instead.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "appendResponseHeaders": {
            "description": "Use of `append_response_headers` is deprecated. Use the `headers`\n field instead.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "destination": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Destination"
          },
          "headers": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Headers"
          },
          "removeRequestHeaders": {
            "description": "Use of `remove_request_headers` is deprecated. Use the `headers`\n field instead.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "removeResponseHeaders": {
            "description": "Use of `remove_response_header` is deprecated. Use the `headers`\n field instead.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "weight": {
            "description": "REQUIRED. The proportion of traffic to be forwarded to the service\n version. (0-100). Sum of weights across destinations SHOULD BE == 100.\n If there is only one destination in a rule, the weight value is assumed to\n be 100.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "istio.networking.v1alpha3.HTTPRedirect": {
        "description": "HTTPRedirect can be used to send a 301 redirect response to the caller,\n where the Authority/Host and the URI in the response can be swapped with\n the specified values. For example, the following rule redirects\n requests for /v1/getProductRatings API on the ratings service to\n /v1/bookRatings provided by the bookratings service.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: ratings-route\n spec:\n   hosts:\n   - ratings.prod.svc.cluster.local\n   http:\n   - match:\n     - uri:\n         exact: /v1/getProductRatings\n     redirect:\n       uri: /v1/bookRatings\n       authority: newratings.default.svc.cluster.local\n   ...\n ```",
        "type": "object",
        "properties": {
          "authority": {
            "description": "On a redirect, overwrite the Authority/Host portion of the URL with\n this value.",
            "type": "string",
            "format": "string"
          },
          "uri": {
            "description": "On a redirect, overwrite the Path portion of the URL with this\n value. Note that the entire path will be replaced, irrespective of the\n request URI being matched as an exact path or prefix.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.HTTPRewrite": {
        "description": "HTTPRewrite can be used to rewrite specific parts of a HTTP request\n before forwarding the request to the destination. Rewrite primitive can\n be used only with HTTPRouteDestination. The following example\n demonstrates how to rewrite the URL prefix for api call (/ratings) to\n ratings service before making the actual API call.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: ratings-route\n spec:\n   hosts:\n   - ratings.prod.svc.cluster.local\n   http:\n   - match:\n     - uri:\n         prefix: /ratings\n     rewrite:\n       uri: /v1/bookRatings\n     route:\n     - destination:\n         host: ratings.prod.svc.cluster.local\n         subset: v1\n ```",
        "type": "object",
        "properties": {
          "authority": {
            "description": "rewrite the Authority/Host header with this value.",
            "type": "string",
            "format": "string"
          },
          "uri": {
            "description": "rewrite the path (or the prefix) portion of the URI with this\n value. If the original URI was matched based on prefix, the value\n provided in this field will replace the corresponding matched prefix.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.HTTPRetry": {
        "description": "Describes the retry policy to use when a HTTP request fails. For\n example, the following rule sets the maximum number of retries to 3 when\n calling ratings:v1 service, with a 2s timeout per retry attempt.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: ratings-route\n spec:\n   hosts:\n   - ratings.prod.svc.cluster.local\n   http:\n   - route:\n     - destination:\n         host: ratings.prod.svc.cluster.local\n         subset: v1\n     retries:\n       attempts: 3\n       perTryTimeout: 2s\n       retryOn: gateway-error,connect-failure,refused-stream\n ```",
        "type": "object",
        "properties": {
          "attempts": {
            "description": "REQUIRED. Number of retries for a given request. The interval\n between retries will be determined automatically (25ms+). Actual\n number of retries attempted depends on the httpReqTimeout.",
            "type": "integer",
            "format": "int32"
          },
          "perTryTimeout": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          },
          "retryOn": {
            "description": "Specifies the conditions under which retry takes place.\n One or more policies can be specified using a ‘,’ delimited list.\n See the [supported policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_filters/router_filter#x-envoy-retry-on)\n and [here](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_filters/router_filter#x-envoy-retry-grpc-on) for more details.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.HTTPFaultInjection": {
        "description": "HTTPFaultInjection can be used to specify one or more faults to inject\n while forwarding http requests to the destination specified in a route.\n Fault specification is part of a VirtualService rule. Faults include\n aborting the Http request from downstream service, and/or delaying\n proxying of requests. A fault rule MUST HAVE delay or abort or both.\n\n *Note:* Delay and abort faults are independent of one another, even if\n both are specified simultaneously.",
        "type": "object",
        "properties": {
          "abort": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.HTTPFaultInjection.Abort"
          },
          "delay": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.HTTPFaultInjection.Delay"
          }
        }
      },
      "istio.networking.v1alpha3.CorsPolicy": {
        "description": "Describes the Cross-Origin Resource Sharing (CORS) policy, for a given\n service. Refer to [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)\n for further details about cross origin resource sharing. For example,\n the following rule restricts cross origin requests to those originating\n from example.com domain using HTTP POST/GET, and sets the\n `Access-Control-Allow-Credentials` header to false. In addition, it only\n exposes `X-Foo-bar` header and sets an expiry period of 1 day.\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: ratings-route\n spec:\n   hosts:\n   - ratings.prod.svc.cluster.local\n   http:\n   - route:\n     - destination:\n         host: ratings.prod.svc.cluster.local\n         subset: v1\n     corsPolicy:\n       allowOrigin:\n       - example.com\n       allowMethods:\n       - POST\n       - GET\n       allowCredentials: false\n       allowHeaders:\n       - X-Foo-Bar\n       maxAge: \"24h\"\n ```",
        "type": "object",
        "properties": {
          "allowCredentials": {
            "$ref": "#/components/schema/google.protobuf.BoolValue"
          },
          "allowHeaders": {
            "description": "List of HTTP headers that can be used when requesting the\n resource. Serialized to Access-Control-Allow-Headers header.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "allowMethods": {
            "description": "List of HTTP methods allowed to access the resource. The content will\n be serialized into the Access-Control-Allow-Methods header.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "allowOrigin": {
            "description": "The list of origins that are allowed to perform CORS requests. The\n content will be serialized into the Access-Control-Allow-Origin\n header. Wildcard * will allow all origins.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "exposeHeaders": {
            "description": "A white list of HTTP headers that the browsers are allowed to\n access. Serialized into Access-Control-Expose-Headers header.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "maxAge": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          }
        }
      },
      "istio.networking.v1alpha3.Headers": {
        "description": "Header manipulation rules",
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Headers.HeaderOperations"
          },
          "response": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Headers.HeaderOperations"
          }
        }
      },
      "istio.networking.v1alpha3.Headers.HeaderOperations": {
        "description": "HeaderOperations Describes the header manipulations to apply",
        "type": "object",
        "required": [
          "set",
          "add"
        ],
        "properties": {
          "add": {
            "description": "Append the given values to the headers specified by keys\n (will create a comma-separated list of values)",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "remove": {
            "description": "Remove a the specified headers",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "set": {
            "description": "Overwrite the headers specified by key with the given values",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.networking.v1alpha3.TLSMatchAttributes": {
        "description": "TLS connection match attributes.",
        "type": "object",
        "required": [
          "sourceLabels"
        ],
        "properties": {
          "destinationSubnets": {
            "description": "IPv4 or IPv6 ip addresses of destination with optional subnet.  E.g.,\n a.b.c.d/xx form or just a.b.c.d.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "gateways": {
            "description": "Names of gateways where the rule should be applied to. Gateway names\n at the top of the VirtualService (if any) are overridden. The gateway\n match is independent of sourceLabels.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "port": {
            "description": "Specifies the port on the host that is being addressed. Many services\n only expose a single port or label ports with the protocols they\n support, in these cases it is not required to explicitly select the\n port.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "sniHosts": {
            "description": "REQUIRED. SNI (server name indicator) to match on. Wildcard prefixes\n can be used in the SNI value, e.g., *.com will match foo.example.com\n as well as example.com. An SNI value must be a subset (i.e., fall\n within the domain) of the corresponding virtual serivce's hosts.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "sourceLabels": {
            "description": "One or more labels that constrain the applicability of a rule to\n workloads with the given labels. If the VirtualService has a list of\n gateways specified at the top, it should include the reserved gateway\n `mesh` in order for this field to be applicable.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "sourceSubnet": {
            "description": "IPv4 or IPv6 ip address of source with optional subnet. E.g., a.b.c.d/xx\n form or just a.b.c.d\n $hide_from_docs",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.RouteDestination": {
        "description": "L4 routing rule weighted destination.",
        "type": "object",
        "properties": {
          "destination": {
            "$ref": "#/components/schema/istio.networking.v1alpha3.Destination"
          },
          "weight": {
            "description": "REQUIRED. The proportion of traffic to be forwarded to the service\n version. If there is only one destination in a rule, all traffic will be\n routed to it irrespective of the weight.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "istio.networking.v1alpha3.L4MatchAttributes": {
        "description": "L4 connection match attributes. Note that L4 connection matching support\n is incomplete.",
        "type": "object",
        "required": [
          "sourceLabels"
        ],
        "properties": {
          "destinationSubnets": {
            "description": "IPv4 or IPv6 ip addresses of destination with optional subnet.  E.g.,\n a.b.c.d/xx form or just a.b.c.d.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "gateways": {
            "description": "Names of gateways where the rule should be applied to. Gateway names\n at the top of the VirtualService (if any) are overridden. The gateway\n match is independent of sourceLabels.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "port": {
            "description": "Specifies the port on the host that is being addressed. Many services\n only expose a single port or label ports with the protocols they support,\n in these cases it is not required to explicitly select the port.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "sourceLabels": {
            "description": "One or more labels that constrain the applicability of a rule to\n workloads with the given labels. If the VirtualService has a list of\n gateways specified at the top, it should include the reserved gateway\n `mesh` in order for this field to be applicable.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "sourceSubnet": {
            "description": "IPv4 or IPv6 ip address of source with optional subnet. E.g., a.b.c.d/xx\n form or just a.b.c.d\n $hide_from_docs",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.HTTPFaultInjection.Delay": {
        "description": "Delay specification is used to inject latency into the request\n forwarding path. The following example will introduce a 5 second delay\n in 1 out of every 1000 requests to the \"v1\" version of the \"reviews\"\n service from all pods with label env: prod\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: reviews-route\n spec:\n   hosts:\n   - reviews.prod.svc.cluster.local\n   http:\n   - match:\n     - sourceLabels:\n         env: prod\n     route:\n     - destination:\n         host: reviews.prod.svc.cluster.local\n         subset: v1\n     fault:\n       delay:\n         percentage:\n           value: 0.1\n         fixedDelay: 5s\n ```\n\n The _fixedDelay_ field is used to indicate the amount of delay in seconds.\n The optional _percentage_ field can be used to only delay a certain\n percentage of requests. If left unspecified, all request will be delayed.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "fixedDelay": {
                "$ref": "#/components/schema/google.protobuf.Duration"
              },
              "percent": {
                "description": "Percentage of requests on which the delay will be injected (0-100).\n Use of integer `percent` value is deprecated. Use the double `percentage`\n field instead.",
                "type": "integer",
                "format": "int32"
              },
              "percentage": {
                "$ref": "#/components/schema/istio.networking.v1alpha3.Percent"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "exponentialDelay": {
                "$ref": "#/components/schema/google.protobuf.Duration"
              },
              "percent": {
                "description": "Percentage of requests on which the delay will be injected (0-100).\n Use of integer `percent` value is deprecated. Use the double `percentage`\n field instead.",
                "type": "integer",
                "format": "int32"
              },
              "percentage": {
                "$ref": "#/components/schema/istio.networking.v1alpha3.Percent"
              }
            }
          }
        ]
      },
      "istio.networking.v1alpha3.HTTPFaultInjection.Abort": {
        "description": "Abort specification is used to prematurely abort a request with a\n pre-specified error code. The following example will return an HTTP 400\n error code for 1 out of every 1000 requests to the \"ratings\" service \"v1\".\n\n ```yaml\n apiVersion: networking.istio.io/v1alpha3\n kind: VirtualService\n metadata:\n   name: ratings-route\n spec:\n   hosts:\n   - ratings.prod.svc.cluster.local\n   http:\n   - route:\n     - destination:\n         host: ratings.prod.svc.cluster.local\n         subset: v1\n     fault:\n       abort:\n         percentage:\n           value: 0.1\n         httpStatus: 400\n ```\n\n The _httpStatus_ field is used to indicate the HTTP status code to\n return to the caller. The optional _percentage_ field can be used to only\n abort a certain percentage of requests. If not specified, all requests are\n aborted.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "httpStatus": {
                "description": "REQUIRED. HTTP status code to use to abort the Http request.",
                "type": "integer",
                "format": "int32"
              },
              "percent": {
                "description": "Percentage of requests to be aborted with the error code provided (0-100).\n Use of integer `percent` value is deprecated. Use the double `percentage`\n field instead.",
                "type": "integer",
                "format": "int32"
              },
              "percentage": {
                "$ref": "#/components/schema/istio.networking.v1alpha3.Percent"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "grpcStatus": {
                "description": "$hide_from_docs",
                "type": "string",
                "format": "string"
              },
              "percent": {
                "description": "Percentage of requests to be aborted with the error code provided (0-100).\n Use of integer `percent` value is deprecated. Use the double `percentage`\n field instead.",
                "type": "integer",
                "format": "int32"
              },
              "percentage": {
                "$ref": "#/components/schema/istio.networking.v1alpha3.Percent"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "http2Error": {
                "description": "$hide_from_docs",
                "type": "string",
                "format": "string"
              },
              "percent": {
                "description": "Percentage of requests to be aborted with the error code provided (0-100).\n Use of integer `percent` value is deprecated. Use the double `percentage`\n field instead.",
                "type": "integer",
                "format": "int32"
              },
              "percentage": {
                "$ref": "#/components/schema/istio.networking.v1alpha3.Percent"
              }
            }
          }
        ]
      },
      "istio.networking.v1alpha3.Percent": {
        "description": "Percent specifies a percentage in the range of [0.0, 100.0].",
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "google.protobuf.BoolValue": {
        "description": "Indicates whether the caller is allowed to send the actual request\n (not the preflight) using credentials. Translates to\n `Access-Control-Allow-Credentials` header.",
        "type": "object",
        "properties": {
          "value": {
            "description": "The bool value.",
            "type": "boolean"
          }
        }
      },
      "google.protobuf.Duration": {
        "description": "$hide_from_docs",
        "type": "object",
        "properties": {
          "nanos": {
            "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive.",
            "type": "integer",
            "format": "int32"
          },
          "seconds": {
            "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "google.protobuf.Struct": {
        "description": "Represents a structured value.",
        "type": "object",
        "required": [
          "fields"
        ],
        "properties": {
          "fields": {
            "description": "Unordered map of dynamically typed values.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/google.protobuf.Value"
            }
          }
        }
      },
      "google.protobuf.Value": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "nullValue": {
                "$ref": "#/components/schema/google.protobuf.NullValue"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "numberValue": {
                "description": "Represents a double value.",
                "type": "number",
                "format": "double"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "stringValue": {
                "description": "Represents a string value.",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "boolValue": {
                "description": "Represents a boolean value.",
                "type": "boolean"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "structValue": {
                "$ref": "#/components/schema/google.protobuf.Struct"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "listValue": {
                "$ref": "#/components/schema/google.protobuf.ListValue"
              }
            }
          }
        ]
      },
      "google.protobuf.ListValue": {
        "description": "Represents a repeated `Value`.",
        "type": "object",
        "properties": {
          "values": {
            "description": "Repeated field of dynamically typed values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/google.protobuf.Value"
            }
          }
        }
      },
      "google.protobuf.NullValue": {
        "description": "Represents a null value.",
        "type": "string",
        "enum": [
          "NULL_VALUE"
        ]
      }
    }
  }
}