{
  "openapi": "3.0.0",
  "info": {
    "title": "Customizing Envoy configuration generated by Istio.",
    "version": "v1alpha3"
  },
  "components": {
    "schemas": {
      "istio.networking.v1alpha3.EnvoyFilter": {
        "type": "object",
        "required": [
          "workloadLabels"
        ],
        "properties": {
          "workloadLabels": {
            "description": "Deprecated. Use workload_selector instead.\n $hide_from_docs",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "filters": {
            "description": "$hide_from_docs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.Filter"
            }
          },
          "workloadSelector": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.WorkloadSelector"
          },
          "configPatches": {
            "description": "REQUIRED. One or more patches with match conditions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectPatch"
            }
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.Filter": {
        "description": "Deprecated.\n Envoy filters to be added to a network or http filter chain.\n $hide_from_docs",
        "type": "object",
        "properties": {
          "listenerMatch": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.DeprecatedListenerMatch"
          },
          "insertPosition": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.InsertPosition"
          },
          "filterType": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.Filter.FilterType"
          },
          "filterName": {
            "description": "REQUIRED: The name of the filter to instantiate. The name must match a supported\n filter _compiled into_ Envoy.",
            "type": "string",
            "format": "string"
          },
          "filterConfig": {
            "$ref": "#/components/schemas/google.protobuf.Struct"
          }
        }
      },
      "istio.networking.v1alpha3.WorkloadSelector": {
        "description": "WorkloadSelector specifies the criteria used to determine if the Gateway,\n Sidecar, or EnvoyFilter resource can be applied to a proxy. The matching criteria\n includes the metadata associated with a proxy, workload instance info such as\n labels attached to the pod/VM, or any other info that the proxy provides\n to Istio during the initial handshake. If multiple conditions are\n specified, all conditions need to match in order for the workload instance to be\n selected. Currently, only label based selection mechanism is supported.",
        "type": "object",
        "required": [
          "labels"
        ],
        "properties": {
          "labels": {
            "description": "REQUIRED: One or more labels that indicate a specific set of pods/VMs\n on which this sidecar configuration should be applied. The scope of\n label search is restricted to the configuration namespace in which the\n the resource is present.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectPatch": {
        "description": "Changes to be made to various envoy config objects.",
        "type": "object",
        "properties": {
          "match": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectMatch"
          },
          "applyTo": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.ApplyTo"
          },
          "patch": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.Patch"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.DeprecatedListenerMatch": {
        "description": "Deprecated.\n Select a listener to add the filter to based on the match conditions.\n All conditions specified in the ListenerMatch must be met for the filter\n to be applied to a listener.\n $hide_from_docs",
        "type": "object",
        "properties": {
          "portNumber": {
            "description": "The service port/gateway port to which traffic is being\n sent/received. If not specified, matches all listeners. Even though\n inbound listeners are generated for the instance/pod ports, only\n service ports should be used to match listeners.",
            "type": "integer"
          },
          "portNamePrefix": {
            "description": "Instead of using specific port numbers, a set of ports matching a\n given port name prefix can be selected. E.g., \"mongo\" selects ports\n named mongo-port, mongo, mongoDB, MONGO, etc. Matching is case\n insensitive.",
            "type": "string",
            "format": "string"
          },
          "listenerType": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.DeprecatedListenerMatch.ListenerType"
          },
          "listenerProtocol": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.DeprecatedListenerMatch.ListenerProtocol"
          },
          "address": {
            "description": "One or more IP addresses to which the listener is bound. If\n specified, should match at least one address in the list.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.DeprecatedListenerMatch.ListenerType": {
        "enum": [
          "ANY",
          "SIDECAR_INBOUND",
          "SIDECAR_OUTBOUND",
          "GATEWAY"
        ],
        "default": "ANY"
      },
      "istio.networking.v1alpha3.EnvoyFilter.DeprecatedListenerMatch.ListenerProtocol": {
        "enum": [
          "ALL",
          "HTTP",
          "TCP"
        ],
        "default": "ALL"
      },
      "istio.networking.v1alpha3.EnvoyFilter.InsertPosition": {
        "description": "Deprecated.\n Indicates the relative index in the filter chain where the filter should be inserted.\n $hide_from_docs",
        "type": "object",
        "properties": {
          "index": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.InsertPosition.Index"
          },
          "relativeTo": {
            "description": "If BEFORE or AFTER position is specified, specify the name of the\n filter relative to which this filter should be inserted.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.InsertPosition.Index": {
        "description": "Index/position in the filter chain.",
        "enum": [
          "FIRST",
          "LAST",
          "BEFORE",
          "AFTER"
        ],
        "default": "FIRST"
      },
      "istio.networking.v1alpha3.EnvoyFilter.Filter.FilterType": {
        "enum": [
          "INVALID",
          "HTTP",
          "NETWORK"
        ],
        "default": "INVALID"
      },
      "istio.networking.v1alpha3.EnvoyFilter.ApplyTo": {
        "description": "ApplyTo specifies where in the Envoy configuration, the given patch should be applied.",
        "enum": [
          "INVALID",
          "LISTENER",
          "FILTER_CHAIN",
          "NETWORK_FILTER",
          "HTTP_FILTER",
          "ROUTE_CONFIGURATION",
          "VIRTUAL_HOST",
          "CLUSTER"
        ],
        "default": "INVALID"
      },
      "istio.networking.v1alpha3.EnvoyFilter.ClusterMatch": {
        "description": "Conditions specified in ClusterMatch must be met for the patch\n to be applied to a cluster.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The exact name of the cluster to match. To match a specific\n cluster by name, such as the internally generated \"Passthrough\"\n cluster, leave all fields in clusterMatch empty, except the\n name.",
            "type": "string",
            "format": "string"
          },
          "portNumber": {
            "description": "The service port for which this cluster was generated.  If\n omitted, applies to clusters for any port.",
            "type": "integer"
          },
          "service": {
            "description": "The fully qualified service name for this cluster. If omitted,\n applies to clusters for any service. For services defined\n through service entries, the service name is same as the hosts\n defined in the service entry.",
            "type": "string",
            "format": "string"
          },
          "subset": {
            "description": "The subset associated with the service. If omitted, applies to\n clusters for any subset of a service.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.RouteConfigurationMatch": {
        "description": "Conditions specified in RouteConfigurationMatch must be met for\n the patch to be applied to a route configuration object or a\n specific virtual host within the route configuration.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Route configuration name to match on. Can be used to match a\n specific route configuration by name, such as the internally\n generated \"http_proxy\" route configuration for all sidecars.",
            "type": "string",
            "format": "string"
          },
          "portNumber": {
            "description": "The service port number or gateway server port number for which\n this route configuration was generated. If omitted, applies to\n route configurations for all ports.",
            "type": "integer"
          },
          "portName": {
            "description": "Applicable only for GATEWAY context. The gateway server port\n name for which this route configuration was generated.",
            "type": "string",
            "format": "string"
          },
          "gateway": {
            "description": "The Istio gateway config's namespace/name for which this route\n configuration was generated. Applies only if the context is\n GATEWAY. Should be in the namespace/name format. Use this field\n in conjunction with the portNumber and portName to accurately\n select the Envoy route configuration for a specific HTTPS\n server within a gateway config object.",
            "type": "string",
            "format": "string"
          },
          "vhost": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.RouteConfigurationMatch.VirtualHostMatch"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.RouteConfigurationMatch.VirtualHostMatch": {
        "description": "Match a specific virtual host inside a route configuration.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The VirtualHosts objects generated by Istio are named as\n host:port, where the host typically corresponds to the\n VirtualService's host field or the hostname of a service in the\n registry.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.ListenerMatch": {
        "description": "Conditions specified in a listener match must be met for the\n patch to be applied to a specific listener across all filter\n chains, or a specific filter chain inside the listener.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Match a specific listener by its name. The listeners generated\n by Pilot are typically named as IP:Port.",
            "type": "string",
            "format": "string"
          },
          "portNumber": {
            "description": "The service port/gateway port to which traffic is being\n sent/received. If not specified, matches all listeners. Even though\n inbound listeners are generated for the instance/pod ports, only\n service ports should be used to match listeners.",
            "type": "integer"
          },
          "portName": {
            "description": "Instead of using specific port numbers, a set of ports matching\n a given service's port name can be selected. Matching is case\n insensitive.",
            "type": "string",
            "format": "string"
          },
          "filterChain": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.ListenerMatch.FilterChainMatch"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.ListenerMatch.FilterChainMatch": {
        "description": "For listeners with multiple filter chains (e.g., inbound\n listeners on sidecars with permissive mTLS, gateway listeners\n with multiple SNI matches), the filter chain match can be used\n to select a specific filter chain to patch.",
        "type": "object",
        "properties": {
          "sni": {
            "description": "The SNI value used by a filter chain's match condition.  This\n condition will evaluate to false if the filter chain has no\n sni match.",
            "type": "string",
            "format": "string"
          },
          "transportProtocol": {
            "description": "Applies only to SIDECAR_INBOUND context. If non-empty, a\n transport protocol to consider when determining a filter\n chain match.  This value will be compared against the\n transport protocol of a new connection, when it's detected by\n one of the listener filters.",
            "type": "string",
            "format": "string"
          },
          "filter": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.ListenerMatch.FilterMatch"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.ListenerMatch.FilterMatch": {
        "description": "Conditions to match a specific filter within a filter chain.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The filter name to match on.",
            "type": "string",
            "format": "string"
          },
          "subFilter": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.ListenerMatch.SubFilterMatch"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.ListenerMatch.SubFilterMatch": {
        "description": "Conditions to match a specific filter within another\n filter. This field is typically useful to match a HTTP filter\n inside the envoy.http_connection_manager network filter. This\n could also be applicable for thrift filters.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The filter name to match on.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.Patch": {
        "description": "Patch specifies the JSON path in the generated proto and the\n content to merge/remove on the specific path.",
        "type": "object",
        "properties": {
          "operation": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.Patch.Operation"
          },
          "value": {
            "$ref": "#/components/schemas/google.protobuf.Value"
          }
        }
      },
      "istio.networking.v1alpha3.EnvoyFilter.Patch.Operation": {
        "description": "Operation denotes how the patch should be applied to the selected\n configuration.",
        "enum": [
          "INVALID",
          "MERGE",
          "ADD",
          "REMOVE",
          "INSERT_BEFORE",
          "INSERT_AFTER"
        ],
        "default": "INVALID"
      },
      "istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectMatch": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "listener": {
                "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.ListenerMatch"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "routeConfiguration": {
                "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.RouteConfigurationMatch"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "cluster": {
                "$ref": "#/components/schemas/istio.networking.v1alpha3.EnvoyFilter.ClusterMatch"
              }
            }
          }
        ]
      },
      "google.protobuf.Struct": {
        "description": "Represents a structured value.",
        "type": "object",
        "required": [
          "fields"
        ],
        "properties": {
          "fields": {
            "description": "Unordered map of dynamically typed values.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/google.protobuf.Value"
            }
          }
        }
      },
      "google.protobuf.Value": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "nullValue": {
                "$ref": "#/components/schemas/google.protobuf.NullValue"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "numberValue": {
                "description": "Represents a double value.",
                "type": "number",
                "format": "double"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "stringValue": {
                "description": "Represents a string value.",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "boolValue": {
                "description": "Represents a boolean value.",
                "type": "boolean"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "structValue": {
                "$ref": "#/components/schemas/google.protobuf.Struct"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "listValue": {
                "$ref": "#/components/schemas/google.protobuf.ListValue"
              }
            }
          }
        ]
      },
      "google.protobuf.ListValue": {
        "description": "Represents a repeated `Value`.",
        "type": "object",
        "properties": {
          "values": {
            "description": "Repeated field of dynamically typed values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/google.protobuf.Value"
            }
          }
        }
      },
      "google.protobuf.NullValue": {
        "description": "Represents a null value.",
        "type": "string",
        "enum": [
          "NULL_VALUE"
        ]
      }
    }
  }
}