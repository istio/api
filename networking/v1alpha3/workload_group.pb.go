// Code generated by protoc-gen-go. DO NOT EDIT.
// source: networking/v1alpha3/workload_group.proto

// `WorkloadGroup` describes a collection of workload instances.
// It provides a specification that the workload instances can use to bootstrap
// their proxies, including the metadata and identity. It is only intended to
// be used with non-k8s workloads like Virtual Machines, and is meant to mimic
// the existing sidecar injection and deployment specification model used for
// Kubernetes workloads to bootstrap Istio proxies.
//
// The following example declares a workload group representing a collection
// of workloads that will be registered under `reviews` in namespace
// `bookinfo`. The set of labels will be associated with each workload
// instance during the bootstrap process, and the ports 3550 and 8080
// will be associated with the workload group and use service account `default`.
// `app.kubernetes.io/version` is just an arbitrary example of a label.
//
// {{<tabset category-name="example">}}
// {{<tab name="v1alpha3" category-value="v1alpha3">}}
// ```yaml
// apiVersion: networking.istio.io/v1alpha3
// kind: WorkloadGroup
// metadata:
//   name: reviews
//   namespace: bookinfo
// spec:
//   metadata:
//     labels:
//       app.kubernetes.io/name: reviews
//       app.kubernetes.io/version: "1.3.4"
//   template:
//     ports:
//       grpc: 3550
//       http: 8080
//     serviceAccount: default
// ```
// {{</tab>}}
// {{</tabset>}}
//

package v1alpha3

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// `WorkloadGroup` enables specifying the properties of a single workload for bootstrap and
// provides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties
// of workloads via `Pod` templates. A `WorkloadGroup` can have more than one `WorkloadEntry`.
// `WorkloadGroup` has no relationship to resources which control service registry like `ServiceEntry`
// and as such doesn't configure host name for these workloads.
//
// <!-- crd generation tags
// +cue-gen:WorkloadGroup:groupName:networking.istio.io
// +cue-gen:WorkloadGroup:version:v1alpha3
// +cue-gen:WorkloadGroup:storageVersion
// +cue-gen:WorkloadGroup:subresource:status
// +cue-gen:WorkloadGroup:scope:Namespaced
// +cue-gen:WorkloadGroup:resource:categories=istio-io,networking-istio-io,shortNames=wg,plural=workloadgroups
// +cue-gen:WorkloadGroup:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description="CreationTimestamp is a timestamp
// representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations.
// Clients may not set this value. It is represented in RFC3339 form and is in UTC.
// Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
// +genclient
// +k8s:deepcopy-gen=true
// -->
type WorkloadGroup struct {
	// Metadata that will be used for all corresponding `WorkloadEntries`.
	// User labels for a workload group should be set here in `metadata` rather than in `template`.
	Metadata *WorkloadGroup_ObjectMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Template to be used for the generation of `WorkloadEntry` resources that belong to this `WorkloadGroup`.
	// Please note that `address` and `labels` fields should not be set in the template, and an empty `serviceAccount`
	// should default to `default`. The workload identities (mTLS certificates) will be bootstrapped using the
	// specified service account's token. Workload entries in this group will be in the same namespace as the
	// workload group, and inherit the labels and annotations from the above `metadata` field.
	Template             *WorkloadEntry `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *WorkloadGroup) Reset()         { *m = WorkloadGroup{} }
func (m *WorkloadGroup) String() string { return proto.CompactTextString(m) }
func (*WorkloadGroup) ProtoMessage()    {}
func (*WorkloadGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_621fb79d92a8ed09, []int{0}
}

func (m *WorkloadGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkloadGroup.Unmarshal(m, b)
}
func (m *WorkloadGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkloadGroup.Marshal(b, m, deterministic)
}
func (m *WorkloadGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkloadGroup.Merge(m, src)
}
func (m *WorkloadGroup) XXX_Size() int {
	return xxx_messageInfo_WorkloadGroup.Size(m)
}
func (m *WorkloadGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkloadGroup.DiscardUnknown(m)
}

var xxx_messageInfo_WorkloadGroup proto.InternalMessageInfo

func (m *WorkloadGroup) GetMetadata() *WorkloadGroup_ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *WorkloadGroup) GetTemplate() *WorkloadEntry {
	if m != nil {
		return m.Template
	}
	return nil
}

// `ObjectMeta` describes metadata that will be attached to a `WorkloadEntry`.
// It is a subset of the supported Kubernetes metadata.
type WorkloadGroup_ObjectMeta struct {
	// Labels to attach
	Labels map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Annotations to attach
	Annotations          map[string]string `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WorkloadGroup_ObjectMeta) Reset()         { *m = WorkloadGroup_ObjectMeta{} }
func (m *WorkloadGroup_ObjectMeta) String() string { return proto.CompactTextString(m) }
func (*WorkloadGroup_ObjectMeta) ProtoMessage()    {}
func (*WorkloadGroup_ObjectMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_621fb79d92a8ed09, []int{0, 0}
}

func (m *WorkloadGroup_ObjectMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkloadGroup_ObjectMeta.Unmarshal(m, b)
}
func (m *WorkloadGroup_ObjectMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkloadGroup_ObjectMeta.Marshal(b, m, deterministic)
}
func (m *WorkloadGroup_ObjectMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkloadGroup_ObjectMeta.Merge(m, src)
}
func (m *WorkloadGroup_ObjectMeta) XXX_Size() int {
	return xxx_messageInfo_WorkloadGroup_ObjectMeta.Size(m)
}
func (m *WorkloadGroup_ObjectMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkloadGroup_ObjectMeta.DiscardUnknown(m)
}

var xxx_messageInfo_WorkloadGroup_ObjectMeta proto.InternalMessageInfo

func (m *WorkloadGroup_ObjectMeta) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *WorkloadGroup_ObjectMeta) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func init() {
	proto.RegisterType((*WorkloadGroup)(nil), "istio.networking.v1alpha3.WorkloadGroup")
	proto.RegisterType((*WorkloadGroup_ObjectMeta)(nil), "istio.networking.v1alpha3.WorkloadGroup.ObjectMeta")
	proto.RegisterMapType((map[string]string)(nil), "istio.networking.v1alpha3.WorkloadGroup.ObjectMeta.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "istio.networking.v1alpha3.WorkloadGroup.ObjectMeta.LabelsEntry")
}

func init() {
	proto.RegisterFile("networking/v1alpha3/workload_group.proto", fileDescriptor_621fb79d92a8ed09)
}

var fileDescriptor_621fb79d92a8ed09 = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xc1, 0x4a, 0xf3, 0x40,
	0x10, 0xc7, 0x49, 0xc2, 0x57, 0xda, 0x0d, 0x1f, 0x94, 0xc5, 0x43, 0xcc, 0xc5, 0xd2, 0x53, 0x4e,
	0x1b, 0x6c, 0x2f, 0xea, 0x41, 0x69, 0x51, 0x44, 0x50, 0x0a, 0xb9, 0x14, 0xbc, 0x94, 0x89, 0xdd,
	0xa6, 0x6b, 0xb7, 0x99, 0x90, 0x4e, 0x2b, 0x7d, 0x43, 0x1f, 0xc3, 0xa7, 0xf0, 0x2c, 0xd9, 0xd4,
	0xa6, 0x8a, 0x8a, 0xf6, 0x96, 0xec, 0xce, 0xff, 0xf7, 0x9b, 0x1d, 0x86, 0x05, 0xa9, 0xa4, 0x27,
	0xcc, 0x67, 0x2a, 0x4d, 0xc2, 0xd5, 0x31, 0xe8, 0x6c, 0x0a, 0xdd, 0xb0, 0x38, 0xd0, 0x08, 0xe3,
	0x51, 0x92, 0xe3, 0x32, 0x13, 0x59, 0x8e, 0x84, 0xfc, 0x50, 0x2d, 0x48, 0xa1, 0xa8, 0xea, 0xc5,
	0x7b, 0xbd, 0x7f, 0x94, 0x20, 0x26, 0x5a, 0x86, 0x90, 0xa9, 0x70, 0xa2, 0xa4, 0x1e, 0x8f, 0x62,
	0x39, 0x85, 0x95, 0xc2, 0xbc, 0xcc, 0xfa, 0x3f, 0x5b, 0x64, 0x4a, 0xf9, 0xba, 0xac, 0x6c, 0xbf,
	0x3a, 0xec, 0xff, 0x70, 0x73, 0x71, 0x5d, 0xd8, 0xf9, 0x80, 0xd5, 0xe7, 0x92, 0x60, 0x0c, 0x04,
	0x9e, 0xd5, 0xb2, 0x02, 0xb7, 0xd3, 0x15, 0xdf, 0xb6, 0x22, 0x3e, 0x64, 0xc5, 0x20, 0x7e, 0x94,
	0x0f, 0x74, 0x27, 0x09, 0xa2, 0x2d, 0x84, 0xdf, 0xb0, 0x3a, 0xc9, 0x79, 0xa6, 0x81, 0xa4, 0x67,
	0x1b, 0x60, 0xf0, 0x0b, 0xe0, 0x55, 0xd1, 0x64, 0xdf, 0x79, 0xe9, 0xd9, 0xd1, 0x36, 0xee, 0x3f,
	0xdb, 0x8c, 0x55, 0x0e, 0x3e, 0x64, 0x35, 0x0d, 0xb1, 0xd4, 0x0b, 0xcf, 0x6a, 0x39, 0x81, 0xdb,
	0xb9, 0xd8, 0xa3, 0x51, 0x71, 0x6b, 0x08, 0x46, 0x17, 0x6d, 0x70, 0x7c, 0xc2, 0x5c, 0x48, 0x53,
	0x24, 0x20, 0x85, 0xe9, 0xc2, 0xb3, 0x0d, 0xfd, 0x72, 0x1f, 0x7a, 0xaf, 0xc2, 0x94, 0x8a, 0x5d,
	0xb0, 0x7f, 0xca, 0xdc, 0x1d, 0x3d, 0x6f, 0x32, 0x67, 0x26, 0xd7, 0x66, 0xea, 0x8d, 0xa8, 0xf8,
	0xe4, 0x07, 0xec, 0xdf, 0x0a, 0xf4, 0xb2, 0x1c, 0x5c, 0x23, 0x2a, 0x7f, 0xce, 0xec, 0x13, 0xcb,
	0x3f, 0x67, 0xcd, 0xcf, 0xec, 0xbf, 0xe4, 0xfb, 0xed, 0xfb, 0x56, 0xf9, 0x1c, 0x85, 0x66, 0x8f,
	0xbe, 0xd8, 0x98, 0xb8, 0x66, 0x76, 0xa4, 0xfb, 0x16, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x3d, 0x4b,
	0xd0, 0xb5, 0x02, 0x00, 0x00,
}
