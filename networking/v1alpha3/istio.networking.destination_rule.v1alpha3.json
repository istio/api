{
  "openapi": "3.0.0",
  "info": {
    "title": "Configuration affecting load balancing, outlier detection, etc.",
    "version": "v1alpha3"
  },
  "components": {
    "schemas": {
      "istio.networking.v1alpha3.DestinationRule": {
        "type": "object",
        "properties": {
          "host": {
            "description": "REQUIRED. The name of a service from the service registry. Service\n names are looked up from the platform's service registry (e.g.,\n Kubernetes services, Consul services, etc.) and from the hosts\n declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/v1alpha3/service-entry/#ServiceEntry). Rules defined for\n services that do not exist in the service registry will be ignored.",
            "type": "string",
            "format": "string"
          },
          "trafficPolicy": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.TrafficPolicy"
          },
          "subsets": {
            "description": "One or more named sets that represent individual versions of a\n service. Traffic policies can be overridden at subset level.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.networking.v1alpha3.Subset"
            }
          },
          "exportTo": {
            "description": "A list of namespaces to which this destination rule is exported.\n The resolution of a destination rule to apply to a service occurs in the\n context of a hierarchy of namespaces. Exporting a destination rule allows\n it to be included in the resolution hierarchy for services in\n other namespaces. This feature provides a mechanism for service owners\n and mesh administrators to control the visibility of destination rules\n across namespace boundaries.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.networking.v1alpha3.TrafficPolicy": {
        "description": "Traffic policies to apply for a specific destination, across all\n destination ports. See DestinationRule for examples.",
        "type": "object",
        "properties": {
          "loadBalancer": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.LoadBalancerSettings"
          },
          "connectionPool": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ConnectionPoolSettings"
          },
          "outlierDetection": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.OutlierDetection"
          },
          "tls": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.TLSSettings"
          },
          "portLevelSettings": {
            "description": "Traffic policies specific to individual ports. Note that port level\n settings will override the destination-level settings. Traffic\n settings specified at the destination-level will not be inherited when\n overridden by port-level settings, i.e. default values will be applied\n to fields omitted in port-level traffic policies.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy"
            }
          }
        }
      },
      "istio.networking.v1alpha3.Subset": {
        "description": "A subset of endpoints of a service. Subsets can be used for scenarios\n like A/B testing, or routing to a specific version of a service. Refer\n to [VirtualService](https://istio.io/docs/reference/config/networking/v1alpha3/virtual-service/#VirtualService) documentation for examples of using\n subsets in these scenarios. In addition, traffic policies defined at the\n service-level can be overridden at a subset-level. The following rule\n uses a round robin load balancing policy for all traffic going to a\n subset named testversion that is composed of endpoints (e.g., pods) with\n labels (version:v3).",
        "type": "object",
        "required": [
          "labels"
        ],
        "properties": {
          "name": {
            "description": "REQUIRED. Name of the subset. The service name and the subset name can\n be used for traffic splitting in a route rule.",
            "type": "string",
            "format": "string"
          },
          "trafficPolicy": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.TrafficPolicy"
          },
          "labels": {
            "description": "Labels apply a filter over the endpoints of a service in the\n service registry. See route rules for examples of usage.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.networking.v1alpha3.LoadBalancerSettings": {
        "description": "Load balancing policies to apply for a specific destination. See Envoy's\n load balancing\n [documentation](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/load_balancing)\n for more details.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "simple": {
                "$ref": "#/components/schemas/istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "consistentHash": {
                "$ref": "#/components/schemas/istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB"
              }
            }
          }
        ]
      },
      "istio.networking.v1alpha3.ConnectionPoolSettings": {
        "description": "Connection pool settings for an upstream host. The settings apply to\n each individual host in the upstream service.  See Envoy's [circuit\n breaker](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/circuit_breaking)\n for more details. Connection pool settings can be applied at the TCP\n level as well as at HTTP level.",
        "type": "object",
        "properties": {
          "tcp": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings"
          },
          "http": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings"
          }
        }
      },
      "istio.networking.v1alpha3.OutlierDetection": {
        "description": "A Circuit breaker implementation that tracks the status of each\n individual host in the upstream service.  Applicable to both HTTP and\n TCP services.  For HTTP services, hosts that continually return 5xx\n errors for API calls are ejected from the pool for a pre-defined period\n of time. For TCP services, connection timeouts or connection\n failures to a given host counts as an error when measuring the\n consecutive errors metric. See Envoy's [outlier\n detection](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier)\n for more details.",
        "type": "object",
        "properties": {
          "interval": {
            "$ref": "#/components/schemas/google.protobuf.Duration"
          },
          "consecutiveErrors": {
            "description": "Number of errors before a host is ejected from the connection\n pool. Defaults to 5. When the upstream host is accessed over HTTP, a\n 502, 503 or 504 return code qualifies as an error. When the upstream host\n is accessed over an opaque TCP connection, connect timeouts and\n connection error/failure events qualify as an error.",
            "type": "integer",
            "format": "int32"
          },
          "baseEjectionTime": {
            "$ref": "#/components/schemas/google.protobuf.Duration"
          },
          "maxEjectionPercent": {
            "description": "Maximum % of hosts in the load balancing pool for the upstream\n service that can be ejected. Defaults to 10%.",
            "type": "integer",
            "format": "int32"
          },
          "minHealthPercent": {
            "description": "Outlier detection will be enabled as long as the associated load balancing\n pool has at least min_health_percent hosts in healthy mode. When the\n percentage of healthy hosts in the load balancing pool drops below this\n threshold, outlier detection will be disabled and the proxy will load balance\n across all hosts in the pool (healthy and unhealthy).  The default is 50%.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "istio.networking.v1alpha3.TLSSettings": {
        "description": "SSL/TLS related settings for upstream connections. See Envoy's [TLS\n context](https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/auth/cert.proto.html)\n for more details. These settings are common to both HTTP and TCP upstreams.",
        "type": "object",
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.TLSSettings.TLSmode"
          },
          "clientCertificate": {
            "description": "REQUIRED if mode is `MUTUAL`. The path to the file holding the\n client-side TLS certificate to use.\n Should be empty if mode is `ISTIO_MUTUAL`.",
            "type": "string",
            "format": "string"
          },
          "privateKey": {
            "description": "REQUIRED if mode is `MUTUAL`. The path to the file holding the\n client's private key.\n Should be empty if mode is `ISTIO_MUTUAL`.",
            "type": "string",
            "format": "string"
          },
          "caCertificates": {
            "description": "OPTIONAL: The path to the file containing certificate authority\n certificates to use in verifying a presented server certificate. If\n omitted, the proxy will not verify the server's certificate.\n Should be empty if mode is `ISTIO_MUTUAL`.",
            "type": "string",
            "format": "string"
          },
          "subjectAltNames": {
            "description": "A list of alternate names to verify the subject identity in the\n certificate. If specified, the proxy will verify that the server\n certificate's subject alt name matches one of the specified values.\n If specified, this list overrides the value of subject_alt_names\n from the ServiceEntry.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "sni": {
            "description": "SNI string to present to the server during TLS handshake.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy": {
        "description": "Traffic policies that apply to specific ports of the service",
        "type": "object",
        "properties": {
          "loadBalancer": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.LoadBalancerSettings"
          },
          "connectionPool": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ConnectionPoolSettings"
          },
          "outlierDetection": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.OutlierDetection"
          },
          "tls": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.TLSSettings"
          },
          "port": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.PortSelector"
          }
        }
      },
      "istio.networking.v1alpha3.PortSelector": {
        "description": "PortSelector specifies the number of a port to be used for\n matching or selection for final routing.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "number": {
                "description": "Valid port number",
                "type": "integer"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "description": "$hide_from_docs",
                "type": "string",
                "format": "string"
              }
            }
          }
        ]
      },
      "istio.networking.v1alpha3.LoadBalancerSettings.SimpleLB": {
        "description": "Standard load balancing algorithms that require no tuning.",
        "enum": [
          "ROUND_ROBIN",
          "LEAST_CONN",
          "RANDOM",
          "PASSTHROUGH"
        ],
        "default": "ROUND_ROBIN"
      },
      "istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB": {
        "description": "Consistent Hash-based load balancing can be used to provide soft\n session affinity based on HTTP headers, cookies or other\n properties. This load balancing policy is applicable only for HTTP\n connections. The affinity to a particular destination host will be\n lost when one or more hosts are added/removed from the destination\n service.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "minimumRingSize": {
                "description": "The minimum number of virtual nodes to use for the hash\n ring. Defaults to 1024. Larger ring sizes result in more granular\n load distributions. If the number of hosts in the load balancing\n pool is larger than the ring size, each host will be assigned a\n single virtual node.",
                "type": "integer"
              },
              "httpHeaderName": {
                "description": "Hash based on a specific HTTP header.",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "minimumRingSize": {
                "description": "The minimum number of virtual nodes to use for the hash\n ring. Defaults to 1024. Larger ring sizes result in more granular\n load distributions. If the number of hosts in the load balancing\n pool is larger than the ring size, each host will be assigned a\n single virtual node.",
                "type": "integer"
              },
              "httpCookie": {
                "$ref": "#/components/schemas/istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "minimumRingSize": {
                "description": "The minimum number of virtual nodes to use for the hash\n ring. Defaults to 1024. Larger ring sizes result in more granular\n load distributions. If the number of hosts in the load balancing\n pool is larger than the ring size, each host will be assigned a\n single virtual node.",
                "type": "integer"
              },
              "useSourceIp": {
                "description": "Hash based on the source IP address.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "istio.networking.v1alpha3.LoadBalancerSettings.ConsistentHashLB.HTTPCookie": {
        "description": "Describes a HTTP cookie that will be used as the hash key for the\n Consistent Hash load balancer. If the cookie is not present, it will\n be generated.",
        "type": "object",
        "properties": {
          "path": {
            "description": "Path to set for the cookie.",
            "type": "string",
            "format": "string"
          },
          "name": {
            "description": "REQUIRED. Name of the cookie.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings": {
        "description": "Settings common to both HTTP and TCP upstream connections.",
        "type": "object",
        "properties": {
          "maxConnections": {
            "description": "Maximum number of HTTP1 /TCP connections to a destination host. Default 1024.",
            "type": "integer",
            "format": "int32"
          },
          "connectTimeout": {
            "$ref": "#/components/schemas/google.protobuf.Duration"
          },
          "tcpKeepalive": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive"
          }
        }
      },
      "istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings": {
        "description": "Settings applicable to HTTP1.1/HTTP2/GRPC connections.",
        "type": "object",
        "properties": {
          "http1MaxPendingRequests": {
            "description": "Maximum number of pending HTTP requests to a destination. Default 1024.",
            "type": "integer",
            "format": "int32"
          },
          "http2MaxRequests": {
            "description": "Maximum number of requests to a backend. Default 1024.",
            "type": "integer",
            "format": "int32"
          },
          "maxRequestsPerConnection": {
            "description": "Maximum number of requests per connection to a backend. Setting this\n parameter to 1 disables keep alive. Default 0, meaning \"unlimited\",\n up to 2^29.",
            "type": "integer",
            "format": "int32"
          },
          "maxRetries": {
            "description": "Maximum number of retries that can be outstanding to all hosts in a\n cluster at a given time. Defaults to 1024.",
            "type": "integer",
            "format": "int32"
          },
          "idleTimeout": {
            "$ref": "#/components/schemas/google.protobuf.Duration"
          },
          "h2UpgradePolicy": {
            "$ref": "#/components/schemas/istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy"
          }
        }
      },
      "istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive": {
        "description": "TCP keepalive.",
        "type": "object",
        "properties": {
          "time": {
            "$ref": "#/components/schemas/google.protobuf.Duration"
          },
          "probes": {
            "description": "Maximum number of keepalive probes to send without response before\n deciding the connection is dead. Default is to use the OS level configuration\n (unless overridden, Linux defaults to 9.)",
            "type": "integer"
          },
          "interval": {
            "$ref": "#/components/schemas/google.protobuf.Duration"
          }
        }
      },
      "istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy": {
        "description": "Policy for upgrading http1.1 connections to http2.",
        "enum": [
          "DEFAULT",
          "DO_NOT_UPGRADE",
          "UPGRADE"
        ],
        "default": "DEFAULT"
      },
      "istio.networking.v1alpha3.TLSSettings.TLSmode": {
        "description": "TLS connection mode",
        "enum": [
          "DISABLE",
          "SIMPLE",
          "MUTUAL",
          "ISTIO_MUTUAL"
        ],
        "default": "DISABLE"
      },
      "google.protobuf.Duration": {
        "description": "$hide_from_docs",
        "type": "object",
        "properties": {
          "seconds": {
            "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
            "type": "integer",
            "format": "int64"
          },
          "nanos": {
            "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive.",
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}