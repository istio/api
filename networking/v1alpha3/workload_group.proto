// Copyright 2020 Istio Authors
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

import "google/api/field_behavior.proto";
import "networking/v1alpha3/workload_entry.proto";

// $schema: istio.networking.v1alpha3.WorkloadGroup
// $title: Workload Group
// $description: Describes a collection of workload instances.
// $location: https://istio.io/docs/reference/config/networking/workload-group.html
// $aliases: [/docs/reference/config/networking/v1alpha3/workload-group]

// `WorkloadGroup` describes a collection of workload instances.
// It provides a specification that the workload instances can use to bootstrap 
// their proxies, including the metadata and identity. It is only intended to 
// be used with non-k8s workloads like Virtual Machines, and is meant to mimic 
// the existing sidecar injection and deployment specification model used for 
// Kubernetes workloads to bootstrap Istio proxies.
//
// The following example declares a workload group representing a collection 
// of workloads that will be registered under `reviews` in namespace
// `bookinfo`. The set of labels will be associated with each workload 
// instance during the bootstrap process, and the ports 3550 and 8080
// will be associated with the workload group and use service account `default`.
// `app.kubernetes.io/version` is just an arbitrary example of a label.
//
// {{<tabset category-name="example">}}
// {{<tab name="v1alpha3" category-value="v1alpha3">}}
// ```yaml
// apiVersion: networking.istio.io/v1alpha3
// kind: WorkloadGroup
// metadata:
//   name: reviews
//   namespace: bookinfo
// spec:
//   template:
//     metadata:
//       labels:
//         app.kubernetes.io/name: reviews
//         app.kubernetes.io/version: "1.3.4"
//     spec:
//       ports:
//         grpc: 3550
//         http: 8080
//       serviceAccount: default
// ```
// {{</tab>}}
// {{</tabset>}}
//
package istio.networking.v1alpha3;

option go_package = "istio.io/api/networking/v1alpha3";

// `WorkloadGroup` enables specifying the properties of a single workload for bootstrap and
// provides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties
// of workloads via `Pod` templates. 
// `WorkloadGroup` has no relationship to resources which control service registry like `ServiceEntry` 
// and as such doesn't configure host name for these workloads.
//
// <!-- crd generation tags
// +cue-gen:WorkloadGroup:groupName:networking.istio.io
// +cue-gen:WorkloadGroup:version:v1alpha3
// +cue-gen:WorkloadGroup:storageVersion
// +cue-gen:WorkloadGroup:subresource:status
// +cue-gen:WorkloadGroup:scope:Namespaced
// +cue-gen:WorkloadGroup:resource:categories=istio-io,networking-istio-io,shortNames=wg,plural=workloadgroups
// +cue-gen:WorkloadGroup:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description="CreationTimestamp is a timestamp
// representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations.
// Clients may not set this value. It is represented in RFC3339 form and is in UTC.
// Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
// +genclient
// +k8s:deepcopy-gen=true
// -->
message WorkloadGroup {
  // Template to be used for the generation of WorkloadEntry resources that belong
  // to this WorkloadGroup
  WorkloadEntryTemplate template = 1;
}

// `WorkloadEntryTemplate` is the underlying workload template that is associated with the workload group.
// The `address` and `labels` fields in `template` are invalid for a `WorkloadEntryTemplate`.
// A `WorkloadGroup` can have more than one `WorkloadEntry`.
message WorkloadEntryTemplate {
  // Metadata that will be used for all corresponding WorkloadEntries.
  ObjectMeta metadata = 1;

  // Describes the WorkloadEntry resources that will be created.
  WorkloadEntry template = 2;
}

// From k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta.
message ObjectMeta {
    string name = 1 [(google.api.field_behavior) = REQUIRED];
    string namespace = 2 [(google.api.field_behavior) = REQUIRED];
    map<string, string> labels = 3;
    map<string, string> annotations = 4;
}