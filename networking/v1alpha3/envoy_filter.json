{
  "openapi": "3.0.1",
  "info": {
    "title": "Customizing Envoy configuration generated by Istio.",
    "version": "v1alpha3"
  },
  "components": {
    "schemas": {
      "istio.networking.v1alpha3.EnvoyFilter": {
        "properties": {
          "config_patches": {
            "description": "REQUIRED. One or more patches with match conditions.",
            "items": {
              "description": "Changes to be made to various envoy config objects.",
              "properties": {
                "apply_to": {
                  "description": "Specifies where in the Envoy configuration, the patch should be applied. The match is expected to select the appropriate object based on applyTo. For example, an applyTo with HTTP_FILTER is expected to have a match condition on the listeners, with a network filter selection on envoy.http_connection_manager and a sub filter selection on the HTTP filter relative to which the insertion should be performed.",
                  "enum": [
                    [
                      "INVALID",
                      "LISTENER",
                      "FILTER_CHAIN",
                      "NETWORK_FILTER",
                      "HTTP_FILTER",
                      "ROUTE_CONFIGURATION",
                      "VIRTUAL_HOST",
                      "CLUSTER"
                    ]
                  ],
                  "type": "string"
                },
                "match": {
                  "description": "Match on listener/route configuration/cluster.",
                  "properties": {
                    "object_types": {
                      "oneOf": [
                        {
                          "properties": {
                            "filter_chain": {
                              "description": "Match a specific filter chain in a listener. If specified, the patch will be applied to the filter chain (and a specific filter if specified) and not to other filter chains in the listener.",
                              "properties": {
                                "filter": {
                                  "description": "The name of a specific filter to apply the patch to. Set this to envoy.http_connection_manager to add a filter or apply a patch to the HTTP connection manager.",
                                  "properties": {
                                    "name": {
                                      "description": "The filter name to match on.",
                                      "type": "string"
                                    },
                                    "sub_filter": {
                                      "description": "The next level filter within this filter to match upon. Typically used for HTTP Connection Manager filters and Thrift filters. This field is REQUIRED when the apply to is HTTP_FILTER.",
                                      "properties": {
                                        "name": {
                                          "description": "The filter name to match on.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "sni": {
                                  "description": "The SNI value used by a filter chain's match condition. This condition will evaluate to false if the filter chain has no sni match.",
                                  "type": "string"
                                },
                                "transport_protocol": {
                                  "description": "Applies only to SIDECAR_INBOUND context. If non-empty, a transport protocol to consider when determining a filter chain match. This value will be compared against the transport protocol of a new connection, when it's detected by one of the listener filters.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "name": {
                              "description": "Match a specific listener by its name. The listeners generated by Pilot are typically named as IP:Port.",
                              "type": "string"
                            },
                            "port_name": {
                              "description": "Instead of using specific port numbers, a set of ports matching a given service's port name can be selected. Matching is case insensitive.",
                              "type": "string"
                            },
                            "port_number": {
                              "description": "The service port/gateway port to which traffic is being sent/received. If not specified, matches all listeners. Even though inbound listeners are generated for the instance/pod ports, only service ports should be used to match listeners.",
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "gateway": {
                              "description": "The Istio gateway config's namespace/name for which this route configuration was generated. Applies only if the context is GATEWAY. Should be in the namespace/name format. Use this field in conjunction with the portNumber and portName to accurately select the Envoy route configuration for a specific HTTPS server within a gateway config object.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Route configuration name to match on. Can be used to match a specific route configuration by name, such as the internally generated \"http_proxy\" route configuration for all sidecars.",
                              "type": "string"
                            },
                            "port_name": {
                              "description": "Applicable only for GATEWAY context. The gateway server port name for which this route configuration was generated.",
                              "type": "string"
                            },
                            "port_number": {
                              "description": "The service port number or gateway server port number for which this route configuration was generated. If omitted, applies to route configurations for all ports.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "vhost": {
                              "description": "Match a specific virtual host in a route configuration and apply the patch to the virtual host.",
                              "properties": {
                                "name": {
                                  "description": "The VirtualHosts objects generated by Istio are named as host:port, where the host typically corresponds to the VirtualService's host field or the hostname of a service in the registry.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "name": {
                              "description": "The exact name of the cluster to match. To match a specific cluster by name, such as the internally generated \"Passthrough\" cluster, leave all fields in clusterMatch empty, except the name.",
                              "type": "string"
                            },
                            "port_number": {
                              "description": "The service port for which this cluster was generated. If omitted, applies to clusters for any port.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "service": {
                              "description": "The fully qualified service name for this cluster. If omitted, applies to clusters for any service. For services defined through service entries, the service name is same as the hosts defined in the service entry.",
                              "type": "string"
                            },
                            "subset": {
                              "description": "The subset associated with the service. If omitted, applies to clusters for any subset of a service.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "patch": {
                  "description": "The patch to apply along with the operation.",
                  "properties": {
                    "operation": {
                      "description": "Determines how the patch should be applied.",
                      "enum": [
                        [
                          "INVALID",
                          "MERGE",
                          "ADD",
                          "REMOVE",
                          "INSERT_BEFORE",
                          "INSERT_AFTER"
                        ]
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "The proto equivalent of JSON Value. This will be merged using json merge semantics with the existing proto in the path.",
                      "properties": {
                        "kind": {
                          "oneOf": [
                            {
                              "description": "Represents a null value.",
                              "enum": [
                                [
                                  "NULL_VALUE"
                                ]
                              ],
                              "type": "string"
                            },
                            {
                              "description": "Represents a double value.",
                              "type": "number"
                            },
                            {
                              "description": "Represents a string value.",
                              "type": "string"
                            },
                            {
                              "description": "Represents a boolean value.",
                              "type": "boolean"
                            },
                            {
                              "description": "Represents a structured value.",
                              "properties": {
                                "fields": {
                                  "additionalProperties": true,
                                  "type": "object"
                                }
                              }
                            },
                            {
                              "description": "Represents a repeated `Value`.",
                              "properties": {
                                "values": {
                                  "items": {
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "workload_selector": {
            "description": "Criteria used to select the specific set of pods/VMs on which this patch configuration should be applied. If omitted, the set of patches in this configuration will be applied to all workload instances in the same namespace. If omitted, the EnvoyFilter patches will be applied to all workloads in the same namespace. If the EnvoyFilter is present in the config root namespace, it will be applied to all applicable workloads in any namespace.",
            "properties": {
              "labels": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "REQUIRED: One or more labels that indicate a specific set of pods/VMs on which this sidecar configuration should be applied. The scope of label search is restricted to the configuration namespace in which the the resource is present.",
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    }
  }
}