// Code generated by protoc-gen-gogo. DO NOT EDIT.
// policy/v1beta1/cfg.proto is a deprecated file.

package v1beta1

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	_ "istio.io/gogo-genproto/googleapis/google/api"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// DeepCopyInto supports using AttributeManifest within kubernetes types, where deepcopy-gen is used.
func (in *AttributeManifest) DeepCopyInto(out *AttributeManifest) {
	p := proto.Clone(in).(*AttributeManifest)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeManifest. Required by controller-gen.
func (in *AttributeManifest) DeepCopy() *AttributeManifest {
	if in == nil {
		return nil
	}
	out := new(AttributeManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using AttributeManifest_AttributeInfo within kubernetes types, where deepcopy-gen is used.
func (in *AttributeManifest_AttributeInfo) DeepCopyInto(out *AttributeManifest_AttributeInfo) {
	p := proto.Clone(in).(*AttributeManifest_AttributeInfo)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeManifest_AttributeInfo. Required by controller-gen.
func (in *AttributeManifest_AttributeInfo) DeepCopy() *AttributeManifest_AttributeInfo {
	if in == nil {
		return nil
	}
	out := new(AttributeManifest_AttributeInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using Rule within kubernetes types, where deepcopy-gen is used.
func (in *Rule) DeepCopyInto(out *Rule) {
	p := proto.Clone(in).(*Rule)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rule. Required by controller-gen.
func (in *Rule) DeepCopy() *Rule {
	if in == nil {
		return nil
	}
	out := new(Rule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using Rule_HeaderOperationTemplate within kubernetes types, where deepcopy-gen is used.
func (in *Rule_HeaderOperationTemplate) DeepCopyInto(out *Rule_HeaderOperationTemplate) {
	p := proto.Clone(in).(*Rule_HeaderOperationTemplate)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rule_HeaderOperationTemplate. Required by controller-gen.
func (in *Rule_HeaderOperationTemplate) DeepCopy() *Rule_HeaderOperationTemplate {
	if in == nil {
		return nil
	}
	out := new(Rule_HeaderOperationTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using Action within kubernetes types, where deepcopy-gen is used.
func (in *Action) DeepCopyInto(out *Action) {
	p := proto.Clone(in).(*Action)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Action. Required by controller-gen.
func (in *Action) DeepCopy() *Action {
	if in == nil {
		return nil
	}
	out := new(Action)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using Instance within kubernetes types, where deepcopy-gen is used.
func (in *Instance) DeepCopyInto(out *Instance) {
	p := proto.Clone(in).(*Instance)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance. Required by controller-gen.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using Handler within kubernetes types, where deepcopy-gen is used.
func (in *Handler) DeepCopyInto(out *Handler) {
	p := proto.Clone(in).(*Handler)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Handler. Required by controller-gen.
func (in *Handler) DeepCopy() *Handler {
	if in == nil {
		return nil
	}
	out := new(Handler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using Connection within kubernetes types, where deepcopy-gen is used.
func (in *Connection) DeepCopyInto(out *Connection) {
	p := proto.Clone(in).(*Connection)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection. Required by controller-gen.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using Sampling within kubernetes types, where deepcopy-gen is used.
func (in *Sampling) DeepCopyInto(out *Sampling) {
	p := proto.Clone(in).(*Sampling)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sampling. Required by controller-gen.
func (in *Sampling) DeepCopy() *Sampling {
	if in == nil {
		return nil
	}
	out := new(Sampling)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using RandomSampling within kubernetes types, where deepcopy-gen is used.
func (in *RandomSampling) DeepCopyInto(out *RandomSampling) {
	p := proto.Clone(in).(*RandomSampling)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RandomSampling. Required by controller-gen.
func (in *RandomSampling) DeepCopy() *RandomSampling {
	if in == nil {
		return nil
	}
	out := new(RandomSampling)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using RateLimitSampling within kubernetes types, where deepcopy-gen is used.
func (in *RateLimitSampling) DeepCopyInto(out *RateLimitSampling) {
	p := proto.Clone(in).(*RateLimitSampling)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitSampling. Required by controller-gen.
func (in *RateLimitSampling) DeepCopy() *RateLimitSampling {
	if in == nil {
		return nil
	}
	out := new(RateLimitSampling)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using FractionalPercent within kubernetes types, where deepcopy-gen is used.
func (in *FractionalPercent) DeepCopyInto(out *FractionalPercent) {
	p := proto.Clone(in).(*FractionalPercent)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FractionalPercent. Required by controller-gen.
func (in *FractionalPercent) DeepCopy() *FractionalPercent {
	if in == nil {
		return nil
	}
	out := new(FractionalPercent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using Authentication within kubernetes types, where deepcopy-gen is used.
func (in *Authentication) DeepCopyInto(out *Authentication) {
	p := proto.Clone(in).(*Authentication)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Authentication. Required by controller-gen.
func (in *Authentication) DeepCopy() *Authentication {
	if in == nil {
		return nil
	}
	out := new(Authentication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using Tls within kubernetes types, where deepcopy-gen is used.
func (in *Tls) DeepCopyInto(out *Tls) {
	p := proto.Clone(in).(*Tls)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tls. Required by controller-gen.
func (in *Tls) DeepCopy() *Tls {
	if in == nil {
		return nil
	}
	out := new(Tls)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using OAuth within kubernetes types, where deepcopy-gen is used.
func (in *OAuth) DeepCopyInto(out *OAuth) {
	p := proto.Clone(in).(*OAuth)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OAuth. Required by controller-gen.
func (in *OAuth) DeepCopy() *OAuth {
	if in == nil {
		return nil
	}
	out := new(OAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using Mutual within kubernetes types, where deepcopy-gen is used.
func (in *Mutual) DeepCopyInto(out *Mutual) {
	p := proto.Clone(in).(*Mutual)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mutual. Required by controller-gen.
func (in *Mutual) DeepCopy() *Mutual {
	if in == nil {
		return nil
	}
	out := new(Mutual)
	in.DeepCopyInto(out)
	return out
}
