// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: policy/v1beta1/type.proto

// Describes the rules used to configure Mixer's policy and telemetry features.

package v1beta1

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// DeepCopyInto supports using Value within kubernetes types, where deepcopy-gen is used.
func (in *Value) DeepCopyInto(out *Value) {
	p := proto.Clone(in).(*Value)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Value. Required by controller-gen.
func (in *Value) DeepCopy() *Value {
	if in == nil {
		return nil
	}
	out := new(Value)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using IPAddress within kubernetes types, where deepcopy-gen is used.
func (in *IPAddress) DeepCopyInto(out *IPAddress) {
	p := proto.Clone(in).(*IPAddress)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddress. Required by controller-gen.
func (in *IPAddress) DeepCopy() *IPAddress {
	if in == nil {
		return nil
	}
	out := new(IPAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using Duration within kubernetes types, where deepcopy-gen is used.
func (in *Duration) DeepCopyInto(out *Duration) {
	p := proto.Clone(in).(*Duration)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Duration. Required by controller-gen.
func (in *Duration) DeepCopy() *Duration {
	if in == nil {
		return nil
	}
	out := new(Duration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using TimeStamp within kubernetes types, where deepcopy-gen is used.
func (in *TimeStamp) DeepCopyInto(out *TimeStamp) {
	p := proto.Clone(in).(*TimeStamp)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeStamp. Required by controller-gen.
func (in *TimeStamp) DeepCopy() *TimeStamp {
	if in == nil {
		return nil
	}
	out := new(TimeStamp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using DNSName within kubernetes types, where deepcopy-gen is used.
func (in *DNSName) DeepCopyInto(out *DNSName) {
	p := proto.Clone(in).(*DNSName)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSName. Required by controller-gen.
func (in *DNSName) DeepCopy() *DNSName {
	if in == nil {
		return nil
	}
	out := new(DNSName)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using StringMap within kubernetes types, where deepcopy-gen is used.
func (in *StringMap) DeepCopyInto(out *StringMap) {
	p := proto.Clone(in).(*StringMap)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StringMap. Required by controller-gen.
func (in *StringMap) DeepCopy() *StringMap {
	if in == nil {
		return nil
	}
	out := new(StringMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using EmailAddress within kubernetes types, where deepcopy-gen is used.
func (in *EmailAddress) DeepCopyInto(out *EmailAddress) {
	p := proto.Clone(in).(*EmailAddress)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailAddress. Required by controller-gen.
func (in *EmailAddress) DeepCopy() *EmailAddress {
	if in == nil {
		return nil
	}
	out := new(EmailAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto supports using Uri within kubernetes types, where deepcopy-gen is used.
func (in *Uri) DeepCopyInto(out *Uri) {
	p := proto.Clone(in).(*Uri)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Uri. Required by controller-gen.
func (in *Uri) DeepCopy() *Uri {
	if in == nil {
		return nil
	}
	out := new(Uri)
	in.DeepCopyInto(out)
	return out
}
