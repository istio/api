{
  "openapi": "3.0.0",
  "components": {
    "schema": {
      "istio.policy.v1beta1.Duration": {
        "description": "An instance field of type Duration denotes that the expression for the field must evaluate to\n [ValueType.DURATION][istio.policy.v1beta1.ValueType.DURATION]\n\n Objects of type Duration are also passed to the adapters during request-time for the instance fields of\n type Duration",
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          }
        }
      },
      "istio.policy.v1beta1.Value": {
        "description": "An instance field of type Value denotes that the expression for the field is of dynamic type and can evaluate to any\n [ValueType][istio.policy.v1beta1.ValueType] enum values. For example, when\n authoring an instance configuration for a template that has a field `data` of type `istio.policy.v1beta1.Value`,\n both of the following expressions are valid `data: source.ip | ip(\"0.0.0.0\")`, `data: request.id | \"\"`;\n the resulting type is either ValueType.IP_ADDRESS or ValueType.STRING for the two cases respectively.\n\n Objects of type Value are also passed to the adapters during request-time. There is a 1:1 mapping between\n oneof fields in `Value` and enum values inside `ValueType`. Depending on the expression's evaluated `ValueType`,\n the equivalent oneof field in `Value` is populated by Mixer and passed to the adapters.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "stringValue": {
                "description": "Used for values of type STRING",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "int64Value": {
                "description": "Used for values of type INT64",
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "doubleValue": {
                "description": "Used for values of type DOUBLE",
                "type": "number",
                "format": "double"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "boolValue": {
                "description": "Used for values of type BOOL",
                "type": "boolean"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "ipAddressValue": {
                "$ref": "#/components/schema/istio.policy.v1beta1.IPAddress"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "timestampValue": {
                "$ref": "#/components/schema/istio.policy.v1beta1.TimeStamp"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "durationValue": {
                "$ref": "#/components/schema/istio.policy.v1beta1.Duration"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "emailAddressValue": {
                "$ref": "#/components/schema/istio.policy.v1beta1.EmailAddress"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "dnsNameValue": {
                "$ref": "#/components/schema/istio.policy.v1beta1.DNSName"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "uriValue": {
                "$ref": "#/components/schema/istio.policy.v1beta1.Uri"
              }
            }
          }
        ]
      },
      "istio.policy.v1beta1.AttributeManifest": {
        "description": "AttributeManifest describes a set of Attributes produced by some component\n of an Istio deployment.",
        "type": "object",
        "required": [
          "attributes"
        ],
        "properties": {
          "attributes": {
            "description": "The set of attributes this Istio component will be responsible for producing at runtime.\n We map from attribute name to the attribute's specification. The name of an attribute,\n which is how attributes are referred to in aspect configuration, must conform to:\n\n     Name = IDENT { SEPARATOR IDENT };\n\n Where `IDENT` must match the regular expression `[a-z][a-z0-9]+` and `SEPARATOR` must\n match the regular expression `[\\.-]`.\n\n Attribute names must be unique within a single Istio deployment. The set of canonical\n attributes are described at [here](https://istio.io/docs/reference/config/policy-and-telemetry/attribute-vocabulary/).\n Attributes not in that list should be named with a component-specific suffix such as\n `request.count-my.component`.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/istio.policy.v1beta1.AttributeManifest.AttributeInfo"
            }
          },
          "name": {
            "description": "Required. Name of the component producing these attributes. This can be\n the proxy (with the canonical name `istio-proxy`) or the name of an\n `attributes` kind adapter in Mixer.",
            "type": "string",
            "format": "string"
          },
          "revision": {
            "description": "Optional. The revision of this document. Assigned by server.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.policy.v1beta1.AttributeManifest.AttributeInfo": {
        "description": "AttributeInfo describes the schema of an Istio `Attribute`.\n\n # Istio Attributes\n\n Istio uses `attributes` to describe runtime activities of Istio services.\n An Istio attribute carries a specific piece of information about an activity,\n such as the error code of an API request, the latency of an API request, or the\n original IP address of a TCP connection. The attributes are often generated\n and consumed by different services. For example, a frontend service can\n generate an authenticated user attribute and pass it to a backend service for\n access control purpose.\n\n To simplify the system and improve developer experience, Istio uses\n shared attribute definitions across all components. For example, the same\n authenticated user attribute will be used for logging, monitoring, analytics,\n billing, access control, auditing. Many Istio components provide their\n functionality by collecting, generating, and operating on attributes.\n For example, the proxy collects the error code attribute, and the logging\n stores it into a log.\n\n # Design\n\n Each Istio attribute must conform to an `AttributeInfo` in an\n `AttributeManifest` in the current Istio deployment at runtime. An\n [`AttributeInfo`][istio.policy.v1beta1] is used to define an attribute's\n metadata: the type of its value and a detailed description that explains\n the semantics of the attribute type. Each attribute's name is globally unique;\n in other words an attribute name can only appear once across all manifests.\n\n The runtime presentation of an attribute is intentionally left out of this\n specification, because passing attribute using JSON, XML, or Protocol Buffers\n does not change the semantics of the attribute. Different implementations\n can choose different representations based on their needs.\n\n # HTTP Mapping\n\n Because many systems already have REST APIs, it makes sense to define a\n standard HTTP mapping for Istio attributes that are compatible with typical\n REST APIs. The design is to map one attribute to one HTTP header, the\n attribute name and value becomes the HTTP header name and value. The actual\n encoding scheme will be decided later.",
        "type": "object",
        "properties": {
          "description": {
            "description": "Optional. A human-readable description of the attribute's purpose.",
            "type": "string",
            "format": "string"
          },
          "valueType": {
            "$ref": "#/components/schema/istio.policy.v1beta1.ValueType"
          }
        }
      },
      "istio.policy.v1beta1.ValueType": {
        "description": "ValueType describes the types that values in the Istio system can take. These\n are used to describe the type of Attributes at run time, describe the type of\n the result of evaluating an expression, and to describe the runtime type of\n fields of other descriptors.",
        "enum": [
          "VALUE_TYPE_UNSPECIFIED",
          "STRING",
          "INT64",
          "DOUBLE",
          "BOOL",
          "TIMESTAMP",
          "IP_ADDRESS",
          "EMAIL_ADDRESS",
          "URI",
          "DNS_NAME",
          "DURATION",
          "STRING_MAP"
        ],
        "default": "VALUE_TYPE_UNSPECIFIED"
      },
      "istio.policy.v1beta1.Rule": {
        "description": "A Rule is a selector and a set of intentions to be executed when the\n selector is `true`\n\n The following example instructs Mixer to invoke `prometheus-handler` handler for all services and pass it the\n instance constructed using the 'RequestCountByService' instance.\n\n ```yaml\n - match: match(destination.service.host, \"*\")\n   actions:\n   - handler: prometheus-handler\n     instances:\n     - RequestCountByService\n ```",
        "type": "object",
        "properties": {
          "actions": {
            "description": "Optional. The actions that will be executed when match evaluates to `true`.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.policy.v1beta1.Action"
            }
          },
          "match": {
            "description": "Required. Match is an attribute based predicate. When Mixer receives a\n request it evaluates the match expression and executes all the associated `actions`\n if the match evaluates to true.\n\n A few example match:\n\n * an empty match evaluates to `true`\n * `true`, a boolean literal; a rule with this match will always be executed\n * `match(destination.service.host, \"ratings.*\")` selects any request targeting a service whose\n name starts with \"ratings\"\n * `attr1 == \"20\" \u0026\u0026 attr2 == \"30\"` logical AND, OR, and NOT are also available",
            "type": "string",
            "format": "string"
          },
          "requestHeaderOperations": {
            "description": "Optional. Templatized operations on the request headers using values produced by the\n rule actions. Require the check action result to be OK.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.policy.v1beta1.Rule.HeaderOperationTemplate"
            }
          },
          "responseHeaderOperations": {
            "description": "Optional. Templatized operations on the response headers using values produced by the\n rule actions. Require the check action result to be OK.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.policy.v1beta1.Rule.HeaderOperationTemplate"
            }
          },
          "sampling": {
            "$ref": "#/components/schema/istio.policy.v1beta1.Sampling"
          }
        }
      },
      "istio.policy.v1beta1.Action": {
        "description": "Action describes which [Handler][istio.policy.v1beta1.Handler] to invoke and what data to pass to it for processing.\n\n The following example instructs Mixer to invoke 'prometheus-handler' handler and pass it the object\n constructed using the instance 'RequestCountByService'.\n\n ```yaml\n   handler: prometheus-handler\n   instances:\n   - RequestCountByService\n ```",
        "type": "object",
        "properties": {
          "handler": {
            "description": "Required. Fully qualified name of the handler to invoke.\n Must match the `name` of a [Handler][istio.policy.v1beta1.Handler.name].",
            "type": "string",
            "format": "string"
          },
          "instances": {
            "description": "Required. Each value must match the fully qualified name of the\n [Instance][istio.policy.v1beta1.Instance.name]s.\n Referenced instances are evaluated by resolving the attributes/literals for all the fields.\n The constructed objects are then passed to the `handler` referenced within this action.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "name": {
            "description": "Optional. A handle to refer to the results of the action.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.policy.v1beta1.Rule.HeaderOperationTemplate": {
        "description": "A template for an HTTP header manipulation. Values in the template are expressions\n that may reference action outputs by name. For example, if an action `x` produces an output\n with a field `f`, then the header value expressions may use attribute `x.output.f` to reference\n the field value:\n\n ```yaml\n request_header_operations:\n - name: x-istio-header\n   values:\n   - x.output.f\n ```\n\n If the header value expression evaluates to an empty string, and the operation is to either replace\n or append a header, then the operation is not applied. This permits conditional behavior on behalf of the\n adapter to optionally modify the headers.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Header name literal value.",
            "type": "string",
            "format": "string"
          },
          "operation": {
            "$ref": "#/components/schema/istio.policy.v1beta1.Rule.HeaderOperationTemplate.Operation"
          },
          "values": {
            "description": "Optional. Header value expressions.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.policy.v1beta1.Sampling": {
        "description": "$hide_from_docs\n Sampling provides configuration of sampling strategies for Rule actions.\n Multiple sampling strategies are supported. When multiple strategies are configured,\n a request must be selected by all configured sampling strategies.",
        "type": "object",
        "properties": {
          "random": {
            "$ref": "#/components/schema/istio.policy.v1beta1.RandomSampling"
          },
          "rateLimit": {
            "$ref": "#/components/schema/istio.policy.v1beta1.RateLimitSampling"
          }
        }
      },
      "istio.policy.v1beta1.Rule.HeaderOperationTemplate.Operation": {
        "description": "Header operation type.",
        "enum": [
          "REPLACE",
          "REMOVE",
          "APPEND"
        ],
        "default": "REPLACE"
      },
      "istio.policy.v1beta1.Instance": {
        "description": "An Instance tells Mixer how to create instances for particular template.\n\n Instance is defined by the operator. Instance is defined relative to a known\n template. Their purpose is to tell Mixer how to use attributes or literals to produce\n instances of the specified template at runtime.\n\n The following example instructs Mixer to construct an instance associated with template\n 'istio.mixer.adapter.metric.Metric'. It provides a mapping from the template's fields to expressions.\n Instances produced with this instance can be referenced by [Actions][istio.policy.v1beta1.Action] using name\n 'RequestCountByService'\n\n ```yaml\n - name: RequestCountByService\n   template: istio.mixer.adapter.metric.Metric\n   params:\n     value: 1\n     dimensions:\n       source: source.name\n       destination_ip: destination.ip\n ```",
        "type": "object",
        "required": [
          "attributeBindings"
        ],
        "properties": {
          "attributeBindings": {
            "description": "Optional. Defines attribute bindings to map the output of attribute-producing adapters back into\n the attribute space. The variable `output` refers to the output template instance produced\n by the adapter.\n The following example derives `source.namespace` from `source.uid` in the context of Kubernetes:\n ```yaml\n params:\n   # Pass the required attribute data to the adapter\n   source_uid: source.uid | \"\"\n attribute_bindings:\n   # Fill the new attributes from the adapter produced output\n   source.namespace: output.source_namespace\n ```",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "compiledTemplate": {
            "description": "Required. The name of the compiled in template this instance creates instances for. For referencing non compiled-in\n templates, use the `template` field instead.\n\n The value must match the name of the available template Mixer is built with.",
            "type": "string",
            "format": "string"
          },
          "name": {
            "description": "Required. The name of this instance\n\n Must be unique amongst other Instances in scope. Used by [Action][istio.policy.v1beta1.Action] to refer\n to an instance produced by this instance.",
            "type": "string",
            "format": "string"
          },
          "params": {
            "$ref": "#/components/schema/google.protobuf.Struct"
          },
          "template": {
            "description": "Required. The name of the template this instance creates instances for. For referencing compiled-in\n templates, use the `compiled_template` field instead.\n\n The value must match the name of the available template in scope.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.policy.v1beta1.Handler": {
        "description": "Handler allows the operator to configure a specific adapter implementation.\n Each adapter implementation defines its own `params` proto.\n\n In the following example we define a `metrics` handler for the `prometheus` adapter.\n The example is in the form of a Kubernetes resource:\n * The `metadata.name` is the name of the handler\n * The `kind` refers to the adapter name\n * The `spec` block represents adapter-specific configuration as well as the connection information\n\n ```yaml\n # Sample-1: No connection specified (for compiled in adapters)\n # Note: if connection information is not specified, the adapter configuration is directly inside\n # `spec` block. This is going to be DEPRECATED in favor of Sample-2\n apiVersion: \"config.istio.io/v1alpha2\"\n kind: prometheus\n metadata:\n   name: handler\n   namespace: istio-system\n spec:\n   metrics:\n   - name: request_count\n     instance_name: requestcount.metric.istio-system\n     kind: COUNTER\n     label_names:\n     - source_service\n     - source_version\n     - destination_service\n     - destination_version\n ---\n # Sample-2: With connection information (for out-of-process adapters)\n # Note: Unlike sample-1, the adapter configuration is parallel to `connection` and is nested inside `param` block.\n apiVersion: \"config.istio.io/v1alpha2\"\n kind: prometheus\n metadata:\n   name: handler\n   namespace: istio-system\n spec:\n   param:\n     metrics:\n     - name: request_count\n       instance_name: requestcount.metric.istio-system\n       kind: COUNTER\n       label_names:\n       - source_service\n       - source_version\n       - destination_service\n       - destination_version\n   connection:\n     address: localhost:8090\n ---\n ```",
        "type": "object",
        "properties": {
          "adapter": {
            "description": "Required. The name of a specific adapter implementation. For referencing compiled-in\n adapters, use the `compiled_adapter` field instead.\n\n An adapter's implementation name is typically a constant in its code.",
            "type": "string",
            "format": "string"
          },
          "compiledAdapter": {
            "description": "Required. The name of the compiled in adapter this handler instantiates. For referencing non compiled-in\n adapters, use the `adapter` field instead.\n\n The value must match the name of the available adapter Mixer is built with. An adapter's name is typically a\n constant in its code.",
            "type": "string",
            "format": "string"
          },
          "connection": {
            "$ref": "#/components/schema/istio.policy.v1beta1.Connection"
          },
          "name": {
            "description": "Required. Must be unique in the entire Mixer configuration. Used by [Actions][istio.policy.v1beta1.Action.handler]\n to refer to this handler.",
            "type": "string",
            "format": "string"
          },
          "params": {
            "$ref": "#/components/schema/google.protobuf.Struct"
          }
        }
      },
      "istio.policy.v1beta1.Connection": {
        "description": "Connection allows the operator to specify the endpoint for out-of-process infrastructure backend.\n Connection is part of the handler custom resource and is specified alongside adapter specific configuration.",
        "type": "object",
        "properties": {
          "address": {
            "description": "The address of the backend.",
            "type": "string",
            "format": "string"
          },
          "authentication": {
            "$ref": "#/components/schema/istio.policy.v1beta1.Authentication"
          }
        }
      },
      "istio.policy.v1beta1.Authentication": {
        "description": "Authentication allows the operator to specify the authentication of\n connections to out-of-process infrastructure backend.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "tls": {
                "$ref": "#/components/schema/istio.policy.v1beta1.Tls"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "mutual": {
                "$ref": "#/components/schema/istio.policy.v1beta1.Mutual"
              }
            }
          }
        ]
      },
      "istio.policy.v1beta1.RandomSampling": {
        "description": "$hide_from_docs\n RandomSampling will filter based on the comparison of a randomly-generated value\n against the threshold provided.\n\n Example: To restrict the execution of Rule actions to only 12.5% of requests, the\n `sampling_rate` would be set `12.5`.\n\n This sampling configuration is meant to closely match the access log RuntimeFilter configuration\n [supported by Envoy](https://github.com/envoyproxy/data-plane-api/blob/master/envoy/config/filter/accesslog/v2/accesslog.proto#L113)",
        "type": "object",
        "properties": {
          "attributeExpression": {
            "description": "Specifies an attribute expression to use to override the numerator in the `percent_sampled` field.\n If this value is set, but no value is found OR if that value is not a numeric value, then\n the derived sampling rate will be 0 (meaning no `Action`s are executed for a `Rule`).",
            "type": "string",
            "format": "string"
          },
          "percentSampled": {
            "$ref": "#/components/schema/istio.policy.v1beta1.FractionalPercent"
          },
          "useIndependentRandomness": {
            "description": "By default sampling will be based on the value of the request header `x-request-id`.\n This behavior will cause consistent sampling across `Rule`s and for the full trace of a\n request through a mesh (across hosts). If that value is not present and/or\n `use_independent_randomness` is set to true, the sampling will be done based on the value of\n attribute specified in `attribute_epxression`. If that attribute does not exist, the system\n will behave as if the sampling rate was 0 (meaning no `Action`s are executed for a `Rule`).",
            "type": "boolean"
          }
        }
      },
      "istio.policy.v1beta1.RateLimitSampling": {
        "description": "$hide_from_docs\n RateLimitSampling provides the ability to limit the number of Rule action executions that\n occur over a period of time.",
        "type": "object",
        "properties": {
          "maxUnsampledEntries": {
            "description": "Number of entries to allow during the `sampling_duration` before sampling is enforced.",
            "type": "integer",
            "format": "int64"
          },
          "samplingRate": {
            "description": "The rate at which to sample entries once the unsampled limit has been reached. Sampling will be enforced\n as 1 per every `sampling_rate` entries allowed.",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "istio.policy.v1beta1.FractionalPercent": {
        "description": "$hide_from_docs\n A fractional percentage is used in cases in which for performance reasons performing floating\n point to integer conversions during randomness calculations is undesirable. The message includes\n both a numerator and denominator that together determine the final fractional value.\n\n * **Example**: 1/100 = 1%.\n * **Example**: 3/10000 = 0.03%.",
        "type": "object",
        "properties": {
          "denominator": {
            "$ref": "#/components/schema/istio.policy.v1beta1.FractionalPercent.DenominatorType"
          },
          "numerator": {
            "description": "Specifies the numerator. Defaults to 0.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          }
        }
      },
      "istio.policy.v1beta1.FractionalPercent.DenominatorType": {
        "description": "Fraction percentages support several fixed denominator values.",
        "enum": [
          "HUNDRED",
          "TEN_THOUSAND"
        ],
        "default": "HUNDRED"
      },
      "istio.policy.v1beta1.Tls": {
        "description": "Tls let operator specify client authentication setting when TLS is used for\n connection to the backend.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "authHeader": {
                "$ref": "#/components/schema/istio.policy.v1beta1.Tls.AuthHeader"
              },
              "caCertificates": {
                "description": "The path to the file holding additional CA certificates to well known\n public certs.",
                "type": "string",
                "format": "string"
              },
              "serverName": {
                "description": "Used to configure mixer TLS client to verify the hostname on the returned\n certificates. It is also included in the client's handshake to support SNI.",
                "type": "string",
                "format": "string"
              },
              "tokenPath": {
                "description": "The path to the file holding the auth token (password, jwt token, api\n key, etc).",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "caCertificates": {
                "description": "The path to the file holding additional CA certificates to well known\n public certs.",
                "type": "string",
                "format": "string"
              },
              "customHeader": {
                "description": "Customized header key to hold access token, e.g. x-api-key. Token will be\n passed as what it is.",
                "type": "string",
                "format": "string"
              },
              "serverName": {
                "description": "Used to configure mixer TLS client to verify the hostname on the returned\n certificates. It is also included in the client's handshake to support SNI.",
                "type": "string",
                "format": "string"
              },
              "tokenPath": {
                "description": "The path to the file holding the auth token (password, jwt token, api\n key, etc).",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "authHeader": {
                "$ref": "#/components/schema/istio.policy.v1beta1.Tls.AuthHeader"
              },
              "caCertificates": {
                "description": "The path to the file holding additional CA certificates to well known\n public certs.",
                "type": "string",
                "format": "string"
              },
              "oauth": {
                "$ref": "#/components/schema/istio.policy.v1beta1.OAuth"
              },
              "serverName": {
                "description": "Used to configure mixer TLS client to verify the hostname on the returned\n certificates. It is also included in the client's handshake to support SNI.",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "caCertificates": {
                "description": "The path to the file holding additional CA certificates to well known\n public certs.",
                "type": "string",
                "format": "string"
              },
              "customHeader": {
                "description": "Customized header key to hold access token, e.g. x-api-key. Token will be\n passed as what it is.",
                "type": "string",
                "format": "string"
              },
              "oauth": {
                "$ref": "#/components/schema/istio.policy.v1beta1.OAuth"
              },
              "serverName": {
                "description": "Used to configure mixer TLS client to verify the hostname on the returned\n certificates. It is also included in the client's handshake to support SNI.",
                "type": "string",
                "format": "string"
              }
            }
          }
        ]
      },
      "istio.policy.v1beta1.Mutual": {
        "description": "Mutual let operator specify TLS configuration for Mixer as client if mutual TLS is used to\n secure connection to adapter backend.",
        "type": "object",
        "properties": {
          "caCertificates": {
            "description": "The path to the file holding additional CA certificates that are needed to\n verify the presented adapter certificates. By default Mixer should already\n include Istio CA certificates and system certificates in cert pool.",
            "type": "string",
            "format": "string"
          },
          "clientCertificate": {
            "description": "The path to the file holding client certificate for mutual TLS. If omitted, the\n default Mixer certificates will be used.",
            "type": "string",
            "format": "string"
          },
          "privateKey": {
            "description": "The path to the file holding the private key for mutual TLS. If omitted, the\n default Mixer private key will be used.",
            "type": "string",
            "format": "string"
          },
          "serverName": {
            "description": "Used to configure mixer mutual TLS client to supply server name for SNI.\n It is not used to verify the hostname of the peer certificate, since\n Istio verifies whitelisted SAN fields in mutual TLS.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.policy.v1beta1.OAuth": {
        "description": "OAuth let operator specify config to fetch access token via oauth when using\n TLS for connection to the backend.",
        "type": "object",
        "required": [
          "endpointParams"
        ],
        "properties": {
          "clientId": {
            "description": "REQUIRED. OAuth client id for mixer.",
            "type": "string",
            "format": "string"
          },
          "clientSecret": {
            "description": "REQUIRED. The path to the file holding the client secret for oauth.",
            "type": "string",
            "format": "string"
          },
          "endpointParams": {
            "description": "Additional parameters for requests to the token endpoint.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "scopes": {
            "description": "List of requested permissions.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "tokenUrl": {
            "description": "REQUIRED. The Resource server's token endpoint URL.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.policy.v1beta1.Tls.AuthHeader": {
        "description": "AuthHeader specifies how to pass access token with authorization header.",
        "enum": [
          "PLAIN",
          "BEARER"
        ],
        "default": "PLAIN"
      },
      "istio.policy.v1beta1.DirectHttpResponse": {
        "description": "Direct HTTP response for a client-facing error message which can be attached\n to an RPC error.",
        "type": "object",
        "required": [
          "headers"
        ],
        "properties": {
          "body": {
            "description": "HTTP response body.",
            "type": "string",
            "format": "string"
          },
          "code": {
            "$ref": "#/components/schema/istio.policy.v1beta1.HttpStatusCode"
          },
          "headers": {
            "description": "Optional HTTP response headers.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.policy.v1beta1.HttpStatusCode": {
        "description": "HTTP response codes.\n For more details: http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml",
        "enum": [
          "Empty",
          "Continue",
          "OK",
          "Created",
          "Accepted",
          "NonAuthoritativeInformation",
          "NoContent",
          "ResetContent",
          "PartialContent",
          "MultiStatus",
          "AlreadyReported",
          "IMUsed",
          "MultipleChoices",
          "MovedPermanently",
          "Found",
          "SeeOther",
          "NotModified",
          "UseProxy",
          "TemporaryRedirect",
          "PermanentRedirect",
          "BadRequest",
          "Unauthorized",
          "PaymentRequired",
          "Forbidden",
          "NotFound",
          "MethodNotAllowed",
          "NotAcceptable",
          "ProxyAuthenticationRequired",
          "RequestTimeout",
          "Conflict",
          "Gone",
          "LengthRequired",
          "PreconditionFailed",
          "PayloadTooLarge",
          "URITooLong",
          "UnsupportedMediaType",
          "RangeNotSatisfiable",
          "ExpectationFailed",
          "MisdirectedRequest",
          "UnprocessableEntity",
          "Locked",
          "FailedDependency",
          "UpgradeRequired",
          "PreconditionRequired",
          "TooManyRequests",
          "RequestHeaderFieldsTooLarge",
          "InternalServerError",
          "NotImplemented",
          "BadGateway",
          "ServiceUnavailable",
          "GatewayTimeout",
          "HTTPVersionNotSupported",
          "VariantAlsoNegotiates",
          "InsufficientStorage",
          "LoopDetected",
          "NotExtended",
          "NetworkAuthenticationRequired"
        ],
        "default": "Empty"
      },
      "istio.policy.v1beta1.IPAddress": {
        "description": "An instance field of type IPAddress denotes that the expression for the field must evaluate to\n [ValueType.IP_ADDRESS][istio.policy.v1beta1.ValueType.IP_ADDRESS]\n\n Objects of type IPAddress are also passed to the adapters during request-time for the instance fields of\n type IPAddress",
        "type": "object",
        "properties": {
          "value": {
            "description": "IPAddress encoded as bytes.",
            "type": "string",
            "format": "byte"
          }
        }
      },
      "istio.policy.v1beta1.TimeStamp": {
        "description": "An instance field of type TimeStamp denotes that the expression for the field must evaluate to\n [ValueType.TIMESTAMP][istio.policy.v1beta1.ValueType.TIMESTAMP]\n\n Objects of type TimeStamp are also passed to the adapters during request-time for the instance fields of\n type TimeStamp",
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schema/google.protobuf.Timestamp"
          }
        }
      },
      "istio.policy.v1beta1.EmailAddress": {
        "description": "DO NOT USE !! Under Development\n An instance field of type EmailAddress denotes that the expression for the field must evaluate to\n [ValueType.EMAIL_ADDRESS][istio.policy.v1beta1.ValueType.EMAIL_ADDRESS]\n\n Objects of type EmailAddress are also passed to the adapters during request-time for the instance fields of\n type EmailAddress",
        "type": "object",
        "properties": {
          "value": {
            "description": "EmailAddress encoded as string.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.policy.v1beta1.DNSName": {
        "description": "An instance field of type DNSName denotes that the expression for the field must evaluate to\n [ValueType.DNS_NAME][istio.policy.v1beta1.ValueType.DNS_NAME]\n\n Objects of type DNSName are also passed to the adapters during request-time for the instance fields of\n type DNSName",
        "type": "object",
        "properties": {
          "value": {
            "description": "DNSName encoded as string.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.policy.v1beta1.Uri": {
        "description": "DO NOT USE !! Under Development\n An instance field of type Uri denotes that the expression for the field must evaluate to\n [ValueType.URI][istio.policy.v1beta1.ValueType.URI]\n\n Objects of type Uri are also passed to the adapters during request-time for the instance fields of\n type Uri",
        "type": "object",
        "properties": {
          "value": {
            "description": "Uri encoded as string.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "google.protobuf.Duration": {
        "description": "Duration encoded as google.protobuf.Duration.",
        "type": "object",
        "properties": {
          "nanos": {
            "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive.",
            "type": "integer",
            "format": "int32"
          },
          "seconds": {
            "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "google.protobuf.Struct": {
        "description": "Represents a structured value.",
        "type": "object",
        "required": [
          "fields"
        ],
        "properties": {
          "fields": {
            "description": "Unordered map of dynamically typed values.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/google.protobuf.Value"
            }
          }
        }
      },
      "google.protobuf.Timestamp": {
        "description": "TimeStamp encoded as google.protobuf.Timestamp.",
        "type": "object",
        "properties": {
          "nanos": {
            "description": "Non-negative fractions of a second at nanosecond resolution. Negative\n second values with fractions must still have non-negative nanos values\n that count forward in time. Must be from 0 to 999,999,999\n inclusive.",
            "type": "integer",
            "format": "int32"
          },
          "seconds": {
            "description": "Represents seconds of UTC time since Unix epoch\n 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n 9999-12-31T23:59:59Z inclusive.",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "google.protobuf.Value": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "nullValue": {
                "$ref": "#/components/schema/google.protobuf.NullValue"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "numberValue": {
                "description": "Represents a double value.",
                "type": "number",
                "format": "double"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "stringValue": {
                "description": "Represents a string value.",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "boolValue": {
                "description": "Represents a boolean value.",
                "type": "boolean"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "structValue": {
                "$ref": "#/components/schema/google.protobuf.Struct"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "listValue": {
                "$ref": "#/components/schema/google.protobuf.ListValue"
              }
            }
          }
        ]
      },
      "google.protobuf.ListValue": {
        "description": "Represents a repeated `Value`.",
        "type": "object",
        "properties": {
          "values": {
            "description": "Repeated field of dynamically typed values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/google.protobuf.Value"
            }
          }
        }
      },
      "google.protobuf.NullValue": {
        "description": "Represents a null value.",
        "type": "string",
        "enum": [
          "NULL_VALUE"
        ]
      }
    }
  }
}