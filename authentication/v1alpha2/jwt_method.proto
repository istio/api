// Copyright 2019 Istio Authors
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

// $title: Authentication Policy v1alpha2
// $description: Authentication policy for Istio services.
// $location: https://istio.io/docs/reference/config/istio.authentication.v1alpha2.html

package istio.authentication.v1alpha2;

option go_package = "istio.io/api/authentication/v1alpha2";

// $hide_from_docs
// JSON Web Token (JWT) token format for authentication as defined by
// [RFC 7519](`https://tools.ietf.org/html/rfc7519`). See [OAuth
// 2.0](`https://tools.ietf.org/html/rfc6749`) and [OIDC
// 1.0](`http://openid.net/connect`) for how this is used in the whole
// authentication flow.
//
// For example:
//
// A JWT for any requests:
//
// ```yaml
// issuer: https://example.com
// audiences:
// - bookstore_android.apps.googleusercontent.com
//   bookstore_web.apps.googleusercontent.com
// jwksUri: https://example.com/.well-known/jwks.json
// ```
message Jwt {
  // Identifies the issuer that issued the JWT. See
  // [issuer](`https://tools.ietf.org/html/rfc7519#section-4.1.1`)
  // Usually a URL or an email address.
  //
  // Example: `https://securetoken.google.com`
  // Example: `1234567-compute@developer.gserviceaccount.com`
  string issuer = 1;

  // The list of JWT
  // [audiences](`https://tools.ietf.org/html/rfc7519#section-4.1.3`).
  // that are allowed to access. A JWT containing any of these
  // audiences will be accepted.
  //
  // The service name will be accepted if audiences is empty.
  //
  // Example:
  //
  // ```yaml
  // audiences:
  // - bookstore_android.apps.googleusercontent.com
  //   bookstore_web.apps.googleusercontent.com
  // ```
  repeated string audiences = 2;

  // URL of the provider's public key set to validate signature of the
  // JWT. See [OpenID Discovery](`https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata`).
  //
  // Optional if the key set document can either (a) be retrieved from
  // [OpenID
  // Discovery](`https://openid.net/specs/openid-connect-discovery-1_0.html`) of
  // the issuer or (b) inferred from the email domain of the issuer (e.g. a
  // Google service account).
  //
  // Example: `https://www.googleapis.com/oauth2/v1/certs`
  //
  // Note: Only one of `jwks_uri` and `jwks` should be used.
  string jwks_uri = 3;

  // JSON Web Key Set of public keys to validate signature of the JWT.
  // See `https://auth0.com/docs/jwks`
  //
  // Note: Only one of `jwks_uri` and `jwks` should be used.
  string jwks = 10;

  // Two fields below define where to extract the JWT from an HTTP request.
  //
  // If no explicit location is specified the following default
  // locations are tried in order:
  //
  //     1) The Authorization header using the Bearer schema,
  //        e.g. Authorization: Bearer <token>. (see
  //        [Authorization Request Header
  //        Field](`https://tools.ietf.org/html/rfc6750#section-2.1`))
  //
  //     2) `access_token` query parameter (see
  //     [URI Query Parameter](`https://tools.ietf.org/html/rfc6750#section-2.3`))

  // JWT is sent in a request header. `header` represents the
  // header name.
  //
  // For example, if `header=x-goog-iap-jwt-assertion`, the header
  // format will be `x-goog-iap-jwt-assertion`: $JWT.
  repeated string jwt_headers = 6;

  // JWT is sent in a query parameter. `query` represents the
  // query parameter name.
  //
  // For example, `query=jwt_token`.
  repeated string jwt_params = 7;

  // $hide_from_docs
  // Next available field number: 11
}