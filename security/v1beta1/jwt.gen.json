{
  "openapi": "3.0.0",
  "info": {
    "title": "Configuration to validate JWT.",
    "version": "v1beta1"
  },
  "components": {
    "schemas": {
      "istio.security.v1beta1.ClaimToHeader": {
        "description": "This message specifies the detail for copying claim to header.",
        "type": "object",
        "properties": {
          "header": {
            "description": "The name of the header to be created. The header will be overridden if it already exists in the request.",
            "type": "string"
          },
          "claim": {
            "description": "The name of the claim to be copied from. Only claim of type string/int/bool is supported. The header will not be there if the claim does not exist or the type of the claim is not supported.",
            "type": "string"
          }
        }
      },
      "istio.security.v1beta1.JWTHeader": {
        "description": "This message specifies a header location to extract JWT token.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The HTTP header name.",
            "type": "string"
          },
          "prefix": {
            "description": "The prefix that should be stripped before decoding the token. For example, for \"Authorization: Bearer \u003ctoken\u003e\", prefix=\"Bearer \" with a space at the end. If the header doesn't have this exact prefix, it is considered invalid.",
            "type": "string"
          }
        }
      },
      "istio.security.v1beta1.JWTRule": {
        "description": "\u003c!-- istio code generation tags +istio.io/sync-start --\u003e JSON Web Token (JWT) token format for authentication as defined by [RFC 7519](https://tools.ietf.org/html/rfc7519). See [OAuth 2.0](https://tools.ietf.org/html/rfc6749) and [OIDC 1.0](http://openid.net/connect) for how this is used in the whole authentication flow.",
        "type": "object",
        "properties": {
          "issuer": {
            "description": "Identifies the issuer that issued the JWT. See [issuer](https://tools.ietf.org/html/rfc7519#section-4.1.1) A JWT with different `iss` claim will be rejected.",
            "type": "string"
          },
          "audiences": {
            "description": "The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3). that are allowed to access. A JWT containing any of these audiences will be accepted.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "jwksUri": {
            "description": "URL of the provider's public key set to validate signature of the JWT. See [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).",
            "type": "string"
          },
          "jwks": {
            "description": "JSON Web Key Set of public keys to validate signature of the JWT. See https://auth0.com/docs/jwks.",
            "type": "string"
          },
          "fromHeaders": {
            "description": "List of header locations from which JWT is expected. For example, below is the location spec if JWT is expected to be found in `x-jwt-assertion` header, and have \"Bearer \" prefix: ```yaml fromHeaders: - name: x-jwt-assertion prefix: \"Bearer \" ```",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.security.v1beta1.JWTHeader"
            }
          },
          "fromParams": {
            "description": "List of query parameters from which JWT is expected. For example, if JWT is provided via query parameter `my_token` (e.g /path?my_token=\u003cJWT\u003e), the config is: ```yaml fromParams: - \"my_token\" ```",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "outputPayloadToHeader": {
            "description": "This field specifies the header name to output a successfully verified JWT payload to the backend. The forwarded data is `base64_encoded(jwt_payload_in_JSON)`. If it is not specified, the payload will not be emitted.",
            "type": "string"
          },
          "forwardOriginalToken": {
            "description": "If set to true, the original token will be kept for the upstream request. Default is false.",
            "type": "boolean"
          },
          "outputClaimToHeaders": {
            "description": "This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token. This differs from the `output_payload_to_header` by allowing outputting individual claims instead of the whole payload. The header specified in each operation in the list must be unique. Nested claims of type string/int/bool is supported as well. ``` outputClaimToHeaders: - header: x-my-company-jwt-group claim: my-group - header: x-test-environment-flag claim: test-flag - header: x-jwt-claim-group claim: nested.key.group ``` [Experimental] This feature is a experimental feature. TODO: Update the status whenever this feature is promoted",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.security.v1beta1.ClaimToHeader"
            }
          }
        }
      }
    }
  }
}