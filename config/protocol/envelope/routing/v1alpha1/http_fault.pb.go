// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config/protocol/envelope/routing/v1alpha1/http_fault.proto

package v1alpha1 // import "istio.io/api/config/protocol/envelope/routing/v1alpha1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import envelope "istio.io/api/config/protocol/envelope"
import v1alpha1 "istio.io/api/routing/v1alpha1"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HTTPFaultInjection struct {
	Metadata             *envelope.Metadata           `protobuf:"bytes,1,opt,name=Metadata" json:"Metadata,omitempty"`
	Contents             *v1alpha1.HTTPFaultInjection `protobuf:"bytes,2,opt,name=Contents" json:"Contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *HTTPFaultInjection) Reset()         { *m = HTTPFaultInjection{} }
func (m *HTTPFaultInjection) String() string { return proto.CompactTextString(m) }
func (*HTTPFaultInjection) ProtoMessage()    {}
func (*HTTPFaultInjection) Descriptor() ([]byte, []int) {
	return fileDescriptor_http_fault_94787a2d934d2bd8, []int{0}
}
func (m *HTTPFaultInjection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPFaultInjection.Unmarshal(m, b)
}
func (m *HTTPFaultInjection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPFaultInjection.Marshal(b, m, deterministic)
}
func (dst *HTTPFaultInjection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPFaultInjection.Merge(dst, src)
}
func (m *HTTPFaultInjection) XXX_Size() int {
	return xxx_messageInfo_HTTPFaultInjection.Size(m)
}
func (m *HTTPFaultInjection) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPFaultInjection.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPFaultInjection proto.InternalMessageInfo

func (m *HTTPFaultInjection) GetMetadata() *envelope.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *HTTPFaultInjection) GetContents() *v1alpha1.HTTPFaultInjection {
	if m != nil {
		return m.Contents
	}
	return nil
}

func init() {
	proto.RegisterType((*HTTPFaultInjection)(nil), "istio.config.protocol.envelope.routing.v1alpha1.HTTPFaultInjection")
}

func init() {
	proto.RegisterFile("config/protocol/envelope/routing/v1alpha1/http_fault.proto", fileDescriptor_http_fault_94787a2d934d2bd8)
}

var fileDescriptor_http_fault_94787a2d934d2bd8 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x41, 0x4b, 0x87, 0x40,
	0x10, 0x47, 0xb1, 0x43, 0xfc, 0xd9, 0x6e, 0x7b, 0x12, 0x4f, 0xd5, 0x25, 0xe9, 0x30, 0x83, 0x05,
	0x11, 0x1d, 0x2b, 0xa4, 0x0e, 0x41, 0x88, 0xa7, 0x2e, 0xb1, 0xd9, 0xaa, 0x1b, 0xdb, 0xce, 0xa2,
	0xa3, 0x1f, 0xa8, 0x4f, 0x1a, 0xa9, 0xeb, 0xa1, 0x08, 0xff, 0xf7, 0xf7, 0x1e, 0xbf, 0x19, 0x71,
	0x53, 0x91, 0xab, 0x4d, 0x83, 0xbe, 0x23, 0xa6, 0x8a, 0x2c, 0x6a, 0x37, 0x6a, 0x4b, 0x5e, 0x63,
	0x47, 0x03, 0x1b, 0xd7, 0xe0, 0x98, 0x29, 0xeb, 0x5b, 0x95, 0x61, 0xcb, 0xec, 0x5f, 0x6b, 0x35,
	0x58, 0x86, 0x89, 0x96, 0x68, 0x7a, 0x36, 0x04, 0x73, 0x01, 0x42, 0x01, 0x42, 0x01, 0x96, 0x02,
	0x84, 0x42, 0x72, 0xb2, 0xd9, 0x4c, 0xce, 0xfe, 0xdd, 0xf3, 0xa9, 0x59, 0xbd, 0x2b, 0x56, 0x33,
	0x78, 0xfa, 0x15, 0x09, 0xf9, 0x50, 0x96, 0xcf, 0xf9, 0x8f, 0xfc, 0xe8, 0x3e, 0x74, 0xc5, 0x86,
	0x9c, 0xbc, 0x17, 0xbb, 0xa7, 0x05, 0x8c, 0xa3, 0xe3, 0x28, 0x3d, 0xba, 0x48, 0x61, 0x63, 0x66,
	0xe0, 0x8b, 0xd5, 0x94, 0xb9, 0xd8, 0xdd, 0x91, 0x63, 0xed, 0xb8, 0x8f, 0x0f, 0xa6, 0xca, 0xf9,
	0x52, 0xf9, 0x7d, 0x13, 0xfc, 0xdd, 0x50, 0xac, 0xee, 0xed, 0xf5, 0xcb, 0xd5, 0xac, 0x19, 0x42,
	0xe5, 0x0d, 0xee, 0xfd, 0xec, 0xb7, 0xc3, 0x89, 0xb9, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x3a,
	0xf8, 0xa9, 0x87, 0xa0, 0x01, 0x00, 0x00,
}
