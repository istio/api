// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mesh/v1alpha1/proxy.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	v1alpha3 "istio.io/api/networking/v1alpha3"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// AuthenticationPolicy defines authentication policy. It can be set for
// different scopes (mesh, service â€¦), and the most narrow scope with
// non-INHERIT value will be used.
// Mesh policy cannot be INHERIT.
type AuthenticationPolicy int32

const (
	// Do not encrypt Envoy to Envoy traffic.
	AuthenticationPolicy_NONE AuthenticationPolicy = 0
	// Envoy to Envoy traffic is wrapped into mutual TLS connections.
	AuthenticationPolicy_MUTUAL_TLS AuthenticationPolicy = 1
	// Use the policy defined by the parent scope. Should not be used for mesh
	// policy.
	AuthenticationPolicy_INHERIT AuthenticationPolicy = 1000
)

var AuthenticationPolicy_name = map[int32]string{
	0:    "NONE",
	1:    "MUTUAL_TLS",
	1000: "INHERIT",
}

var AuthenticationPolicy_value = map[string]int32{
	"NONE":       0,
	"MUTUAL_TLS": 1,
	"INHERIT":    1000,
}

func (x AuthenticationPolicy) String() string {
	return proto.EnumName(AuthenticationPolicy_name, int32(x))
}

func (AuthenticationPolicy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5efecd978cf3d28d, []int{0}
}

// The mode used to redirect inbound traffic to Envoy.
// This setting has no effect on outbound traffic: iptables REDIRECT is always used for
// outbound connections.
type ProxyConfig_InboundInterceptionMode int32

const (
	// The REDIRECT mode uses iptables REDIRECT to NAT and redirect to Envoy. This mode loses
	// source IP addresses during redirection.
	ProxyConfig_REDIRECT ProxyConfig_InboundInterceptionMode = 0
	// The TPROXY mode uses iptables TPROXY to redirect to Envoy. This mode preserves both the
	// source and destination IP addresses and ports, so that they can be used for advanced
	// filtering and manipulation. This mode also configures the sidecar to run with the
	// CAP_NET_ADMIN capability, which is required to use TPROXY.
	ProxyConfig_TPROXY ProxyConfig_InboundInterceptionMode = 1
)

var ProxyConfig_InboundInterceptionMode_name = map[int32]string{
	0: "REDIRECT",
	1: "TPROXY",
}

var ProxyConfig_InboundInterceptionMode_value = map[string]int32{
	"REDIRECT": 0,
	"TPROXY":   1,
}

func (x ProxyConfig_InboundInterceptionMode) String() string {
	return proto.EnumName(ProxyConfig_InboundInterceptionMode_name, int32(x))
}

func (ProxyConfig_InboundInterceptionMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5efecd978cf3d28d, []int{2, 0}
}

// Tracing defines configuration for the tracing performed by Envoy instances.
type Tracing struct {
	// The tracer implementation to be used by Envoy.
	//
	// Types that are valid to be assigned to Tracer:
	//	*Tracing_Zipkin_
	//	*Tracing_Lightstep_
	//	*Tracing_Datadog_
	//	*Tracing_Stackdriver_
	Tracer               isTracing_Tracer `protobuf_oneof:"tracer"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Tracing) Reset()         { *m = Tracing{} }
func (m *Tracing) String() string { return proto.CompactTextString(m) }
func (*Tracing) ProtoMessage()    {}
func (*Tracing) Descriptor() ([]byte, []int) {
	return fileDescriptor_5efecd978cf3d28d, []int{0}
}

func (m *Tracing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tracing.Unmarshal(m, b)
}
func (m *Tracing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tracing.Marshal(b, m, deterministic)
}
func (m *Tracing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tracing.Merge(m, src)
}
func (m *Tracing) XXX_Size() int {
	return xxx_messageInfo_Tracing.Size(m)
}
func (m *Tracing) XXX_DiscardUnknown() {
	xxx_messageInfo_Tracing.DiscardUnknown(m)
}

var xxx_messageInfo_Tracing proto.InternalMessageInfo

type isTracing_Tracer interface {
	isTracing_Tracer()
}

type Tracing_Zipkin_ struct {
	Zipkin *Tracing_Zipkin `protobuf:"bytes,1,opt,name=zipkin,proto3,oneof"`
}

type Tracing_Lightstep_ struct {
	Lightstep *Tracing_Lightstep `protobuf:"bytes,2,opt,name=lightstep,proto3,oneof"`
}

type Tracing_Datadog_ struct {
	Datadog *Tracing_Datadog `protobuf:"bytes,3,opt,name=datadog,proto3,oneof"`
}

type Tracing_Stackdriver_ struct {
	Stackdriver *Tracing_Stackdriver `protobuf:"bytes,4,opt,name=stackdriver,proto3,oneof"`
}

func (*Tracing_Zipkin_) isTracing_Tracer() {}

func (*Tracing_Lightstep_) isTracing_Tracer() {}

func (*Tracing_Datadog_) isTracing_Tracer() {}

func (*Tracing_Stackdriver_) isTracing_Tracer() {}

func (m *Tracing) GetTracer() isTracing_Tracer {
	if m != nil {
		return m.Tracer
	}
	return nil
}

func (m *Tracing) GetZipkin() *Tracing_Zipkin {
	if x, ok := m.GetTracer().(*Tracing_Zipkin_); ok {
		return x.Zipkin
	}
	return nil
}

func (m *Tracing) GetLightstep() *Tracing_Lightstep {
	if x, ok := m.GetTracer().(*Tracing_Lightstep_); ok {
		return x.Lightstep
	}
	return nil
}

func (m *Tracing) GetDatadog() *Tracing_Datadog {
	if x, ok := m.GetTracer().(*Tracing_Datadog_); ok {
		return x.Datadog
	}
	return nil
}

func (m *Tracing) GetStackdriver() *Tracing_Stackdriver {
	if x, ok := m.GetTracer().(*Tracing_Stackdriver_); ok {
		return x.Stackdriver
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Tracing) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Tracing_Zipkin_)(nil),
		(*Tracing_Lightstep_)(nil),
		(*Tracing_Datadog_)(nil),
		(*Tracing_Stackdriver_)(nil),
	}
}

// Zipkin defines configuration for a Zipkin tracer.
type Tracing_Zipkin struct {
	// Address of the Zipkin service (e.g. _zipkin:9411_).
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tracing_Zipkin) Reset()         { *m = Tracing_Zipkin{} }
func (m *Tracing_Zipkin) String() string { return proto.CompactTextString(m) }
func (*Tracing_Zipkin) ProtoMessage()    {}
func (*Tracing_Zipkin) Descriptor() ([]byte, []int) {
	return fileDescriptor_5efecd978cf3d28d, []int{0, 0}
}

func (m *Tracing_Zipkin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tracing_Zipkin.Unmarshal(m, b)
}
func (m *Tracing_Zipkin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tracing_Zipkin.Marshal(b, m, deterministic)
}
func (m *Tracing_Zipkin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tracing_Zipkin.Merge(m, src)
}
func (m *Tracing_Zipkin) XXX_Size() int {
	return xxx_messageInfo_Tracing_Zipkin.Size(m)
}
func (m *Tracing_Zipkin) XXX_DiscardUnknown() {
	xxx_messageInfo_Tracing_Zipkin.DiscardUnknown(m)
}

var xxx_messageInfo_Tracing_Zipkin proto.InternalMessageInfo

func (m *Tracing_Zipkin) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// Defines configuration for a LightStep tracer.
type Tracing_Lightstep struct {
	// Address of the LightStep Satellite pool.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// The LightStep access token.
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// True if a secure connection should be used when communicating with the pool.
	Secure bool `protobuf:"varint,3,opt,name=secure,proto3" json:"secure,omitempty"`
	// Path to the trusted cacert used to authenticate the pool.
	CacertPath           string   `protobuf:"bytes,4,opt,name=cacert_path,json=cacertPath,proto3" json:"cacert_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tracing_Lightstep) Reset()         { *m = Tracing_Lightstep{} }
func (m *Tracing_Lightstep) String() string { return proto.CompactTextString(m) }
func (*Tracing_Lightstep) ProtoMessage()    {}
func (*Tracing_Lightstep) Descriptor() ([]byte, []int) {
	return fileDescriptor_5efecd978cf3d28d, []int{0, 1}
}

func (m *Tracing_Lightstep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tracing_Lightstep.Unmarshal(m, b)
}
func (m *Tracing_Lightstep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tracing_Lightstep.Marshal(b, m, deterministic)
}
func (m *Tracing_Lightstep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tracing_Lightstep.Merge(m, src)
}
func (m *Tracing_Lightstep) XXX_Size() int {
	return xxx_messageInfo_Tracing_Lightstep.Size(m)
}
func (m *Tracing_Lightstep) XXX_DiscardUnknown() {
	xxx_messageInfo_Tracing_Lightstep.DiscardUnknown(m)
}

var xxx_messageInfo_Tracing_Lightstep proto.InternalMessageInfo

func (m *Tracing_Lightstep) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Tracing_Lightstep) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *Tracing_Lightstep) GetSecure() bool {
	if m != nil {
		return m.Secure
	}
	return false
}

func (m *Tracing_Lightstep) GetCacertPath() string {
	if m != nil {
		return m.CacertPath
	}
	return ""
}

// Datadog defines configuration for a Datadog tracer.
type Tracing_Datadog struct {
	// Address of the Datadog Agent.
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tracing_Datadog) Reset()         { *m = Tracing_Datadog{} }
func (m *Tracing_Datadog) String() string { return proto.CompactTextString(m) }
func (*Tracing_Datadog) ProtoMessage()    {}
func (*Tracing_Datadog) Descriptor() ([]byte, []int) {
	return fileDescriptor_5efecd978cf3d28d, []int{0, 2}
}

func (m *Tracing_Datadog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tracing_Datadog.Unmarshal(m, b)
}
func (m *Tracing_Datadog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tracing_Datadog.Marshal(b, m, deterministic)
}
func (m *Tracing_Datadog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tracing_Datadog.Merge(m, src)
}
func (m *Tracing_Datadog) XXX_Size() int {
	return xxx_messageInfo_Tracing_Datadog.Size(m)
}
func (m *Tracing_Datadog) XXX_DiscardUnknown() {
	xxx_messageInfo_Tracing_Datadog.DiscardUnknown(m)
}

var xxx_messageInfo_Tracing_Datadog proto.InternalMessageInfo

func (m *Tracing_Datadog) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// Stackdriver defines configuration for a Stackdriver tracer.
// See [Opencensus trace config](https://github.com/census-instrumentation/opencensus-proto/blob/master/src/opencensus/proto/trace/v1/trace_config.proto) for details.
type Tracing_Stackdriver struct {
	// debug enables trace output to stdout.
	// $hide_from_docs
	Debug bool `protobuf:"varint,1,opt,name=debug,proto3" json:"debug,omitempty"`
	// The global default max number of attributes per span.
	// default is 200.
	// $hide_from_docs
	MaxNumberOfAttributes *wrappers.Int64Value `protobuf:"bytes,2,opt,name=max_number_of_attributes,json=maxNumberOfAttributes,proto3" json:"max_number_of_attributes,omitempty"`
	// The global default max number of annotation events per span.
	// default is 200.
	// $hide_from_docs
	MaxNumberOfAnnotations *wrappers.Int64Value `protobuf:"bytes,3,opt,name=max_number_of_annotations,json=maxNumberOfAnnotations,proto3" json:"max_number_of_annotations,omitempty"`
	// The global default max number of message events per span.
	// default is 200.
	// $hide_from_docs
	MaxNumberOfMessageEvents *wrappers.Int64Value `protobuf:"bytes,4,opt,name=max_number_of_message_events,json=maxNumberOfMessageEvents,proto3" json:"max_number_of_message_events,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}             `json:"-"`
	XXX_unrecognized         []byte               `json:"-"`
	XXX_sizecache            int32                `json:"-"`
}

func (m *Tracing_Stackdriver) Reset()         { *m = Tracing_Stackdriver{} }
func (m *Tracing_Stackdriver) String() string { return proto.CompactTextString(m) }
func (*Tracing_Stackdriver) ProtoMessage()    {}
func (*Tracing_Stackdriver) Descriptor() ([]byte, []int) {
	return fileDescriptor_5efecd978cf3d28d, []int{0, 3}
}

func (m *Tracing_Stackdriver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tracing_Stackdriver.Unmarshal(m, b)
}
func (m *Tracing_Stackdriver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tracing_Stackdriver.Marshal(b, m, deterministic)
}
func (m *Tracing_Stackdriver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tracing_Stackdriver.Merge(m, src)
}
func (m *Tracing_Stackdriver) XXX_Size() int {
	return xxx_messageInfo_Tracing_Stackdriver.Size(m)
}
func (m *Tracing_Stackdriver) XXX_DiscardUnknown() {
	xxx_messageInfo_Tracing_Stackdriver.DiscardUnknown(m)
}

var xxx_messageInfo_Tracing_Stackdriver proto.InternalMessageInfo

func (m *Tracing_Stackdriver) GetDebug() bool {
	if m != nil {
		return m.Debug
	}
	return false
}

func (m *Tracing_Stackdriver) GetMaxNumberOfAttributes() *wrappers.Int64Value {
	if m != nil {
		return m.MaxNumberOfAttributes
	}
	return nil
}

func (m *Tracing_Stackdriver) GetMaxNumberOfAnnotations() *wrappers.Int64Value {
	if m != nil {
		return m.MaxNumberOfAnnotations
	}
	return nil
}

func (m *Tracing_Stackdriver) GetMaxNumberOfMessageEvents() *wrappers.Int64Value {
	if m != nil {
		return m.MaxNumberOfMessageEvents
	}
	return nil
}

// SDS defines secret discovery service(SDS) configuration to be used by the proxy.
// For workload, its values are set in sidecar injector(passed as arguments to istio-proxy container).
// For pilot/mixer, it's passed as arguments to istio-proxy container in pilot/mixer deployment yaml files directly.
type SDS struct {
	// True if SDS is enabled.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Path of k8s service account JWT path.
	K8SSaJwtPath         string   `protobuf:"bytes,2,opt,name=k8s_sa_jwt_path,json=k8sSaJwtPath,proto3" json:"k8s_sa_jwt_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SDS) Reset()         { *m = SDS{} }
func (m *SDS) String() string { return proto.CompactTextString(m) }
func (*SDS) ProtoMessage()    {}
func (*SDS) Descriptor() ([]byte, []int) {
	return fileDescriptor_5efecd978cf3d28d, []int{1}
}

func (m *SDS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SDS.Unmarshal(m, b)
}
func (m *SDS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SDS.Marshal(b, m, deterministic)
}
func (m *SDS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SDS.Merge(m, src)
}
func (m *SDS) XXX_Size() int {
	return xxx_messageInfo_SDS.Size(m)
}
func (m *SDS) XXX_DiscardUnknown() {
	xxx_messageInfo_SDS.DiscardUnknown(m)
}

var xxx_messageInfo_SDS proto.InternalMessageInfo

func (m *SDS) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *SDS) GetK8SSaJwtPath() string {
	if m != nil {
		return m.K8SSaJwtPath
	}
	return ""
}

// ProxyConfig defines variables for individual Envoy instances.
type ProxyConfig struct {
	// Path to the generated configuration file directory.
	// Proxy agent generates the actual configuration and stores it in this directory.
	ConfigPath string `protobuf:"bytes,1,opt,name=config_path,json=configPath,proto3" json:"config_path,omitempty"`
	// Path to the proxy binary
	BinaryPath string `protobuf:"bytes,2,opt,name=binary_path,json=binaryPath,proto3" json:"binary_path,omitempty"`
	// Service cluster defines the name for the service_cluster that is
	// shared by all Envoy instances. This setting corresponds to
	// _--service-cluster_ flag in Envoy.  In a typical Envoy deployment, the
	// _service-cluster_ flag is used to identify the caller, for
	// source-based routing scenarios.
	//
	// Since Istio does not assign a local service/service version to each
	// Envoy instance, the name is same for all of them.  However, the
	// source/caller's identity (e.g., IP address) is encoded in the
	// _--service-node_ flag when launching Envoy.  When the RDS service
	// receives API calls from Envoy, it uses the value of the _service-node_
	// flag to compute routes that are relative to the service instances
	// located at that IP address.
	ServiceCluster string `protobuf:"bytes,3,opt,name=service_cluster,json=serviceCluster,proto3" json:"service_cluster,omitempty"`
	// The time in seconds that Envoy will drain connections during a hot
	// restart. MUST be >=1s (e.g., _1s/1m/1h_)
	DrainDuration *duration.Duration `protobuf:"bytes,4,opt,name=drain_duration,json=drainDuration,proto3" json:"drain_duration,omitempty"`
	// The time in seconds that Envoy will wait before shutting down the
	// parent process during a hot restart. MUST be >=1s (e.g., _1s/1m/1h_).
	// MUST BE greater than _drain_duration_ parameter.
	ParentShutdownDuration *duration.Duration `protobuf:"bytes,5,opt,name=parent_shutdown_duration,json=parentShutdownDuration,proto3" json:"parent_shutdown_duration,omitempty"`
	// Address of the discovery service exposing xDS with mTLS connection.
	// The inject configuration may override this value.
	DiscoveryAddress string `protobuf:"bytes,6,opt,name=discovery_address,json=discoveryAddress,proto3" json:"discovery_address,omitempty"`
	// $hide_from_docs
	DiscoveryRefreshDelay *duration.Duration `protobuf:"bytes,7,opt,name=discovery_refresh_delay,json=discoveryRefreshDelay,proto3" json:"discovery_refresh_delay,omitempty"` // Deprecated: Do not use.
	// Address of the Zipkin service (e.g. _zipkin:9411_).
	// DEPRECATED: Use [tracing][istio.mesh.v1alpha1.ProxyConfig.tracing] instead.
	ZipkinAddress string `protobuf:"bytes,8,opt,name=zipkin_address,json=zipkinAddress,proto3" json:"zipkin_address,omitempty"` // Deprecated: Do not use.
	// Connection timeout used by Envoy for supporting services. (MUST BE >=1ms)
	ConnectTimeout *duration.Duration `protobuf:"bytes,9,opt,name=connect_timeout,json=connectTimeout,proto3" json:"connect_timeout,omitempty"`
	// IP Address and Port of a statsd UDP listener (e.g. _10.75.241.127:9125_).
	StatsdUdpAddress string `protobuf:"bytes,10,opt,name=statsd_udp_address,json=statsdUdpAddress,proto3" json:"statsd_udp_address,omitempty"`
	// $hide_from_docs
	EnvoyMetricsServiceAddress string `protobuf:"bytes,20,opt,name=envoy_metrics_service_address,json=envoyMetricsServiceAddress,proto3" json:"envoy_metrics_service_address,omitempty"` // Deprecated: Do not use.
	// Port on which Envoy should listen for administrative commands.
	ProxyAdminPort int32 `protobuf:"varint,11,opt,name=proxy_admin_port,json=proxyAdminPort,proto3" json:"proxy_admin_port,omitempty"`
	// $hide_from_docs
	AvailabilityZone string `protobuf:"bytes,12,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone,omitempty"` // Deprecated: Do not use.
	// Authentication policy defines the global switch to control authentication
	// for Envoy-to-Envoy communication for istio components Mixer and Pilot.
	ControlPlaneAuthPolicy AuthenticationPolicy `protobuf:"varint,13,opt,name=control_plane_auth_policy,json=controlPlaneAuthPolicy,proto3,enum=istio.mesh.v1alpha1.AuthenticationPolicy" json:"control_plane_auth_policy,omitempty"`
	// File path of custom proxy configuration, currently used by proxies
	// in front of Mixer and Pilot.
	CustomConfigFile string `protobuf:"bytes,14,opt,name=custom_config_file,json=customConfigFile,proto3" json:"custom_config_file,omitempty"`
	// Maximum length of name field in Envoy's metrics. The length of the name field
	// is determined by the length of a name field in a service and the set of labels that
	// comprise a particular version of the service. The default value is set to 189 characters.
	// Envoy's internal metrics take up 67 characters, for a total of 256 character name per metric.
	// Increase the value of this field if you find that the metrics from Envoys are truncated.
	StatNameLength int32 `protobuf:"varint,15,opt,name=stat_name_length,json=statNameLength,proto3" json:"stat_name_length,omitempty"`
	// The number of worker threads to run. Default value is number of cores on the machine.
	Concurrency int32 `protobuf:"varint,16,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	// Path to the proxy bootstrap template file
	ProxyBootstrapTemplatePath string `protobuf:"bytes,17,opt,name=proxy_bootstrap_template_path,json=proxyBootstrapTemplatePath,proto3" json:"proxy_bootstrap_template_path,omitempty"`
	// The mode used to redirect inbound traffic to Envoy.
	InterceptionMode ProxyConfig_InboundInterceptionMode `protobuf:"varint,18,opt,name=interception_mode,json=interceptionMode,proto3,enum=istio.mesh.v1alpha1.ProxyConfig_InboundInterceptionMode" json:"interception_mode,omitempty"`
	// Tracing configuration to be used by the proxy.
	Tracing *Tracing `protobuf:"bytes,19,opt,name=tracing,proto3" json:"tracing,omitempty"`
	// secret discovery service(SDS) configuration to be used by the proxy.
	Sds *SDS `protobuf:"bytes,21,opt,name=sds,proto3" json:"sds,omitempty"`
	// Address of the service to which access logs from Envoys should be
	// sent. (e.g. accesslog-service:15000). See [Access Log
	// Service](https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/accesslog/v2/als.proto)
	// for details about Envoy's gRPC Access Log Service API.
	EnvoyAccessLogService *RemoteService `protobuf:"bytes,22,opt,name=envoy_access_log_service,json=envoyAccessLogService,proto3" json:"envoy_access_log_service,omitempty"`
	// Address of the Envoy Metrics Service implementation (e.g. metrics-service:15000).
	// See [Metric Service](https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/metrics/v2/metrics_service.proto)
	// for details about Envoy's Metrics Service API.
	EnvoyMetricsService *RemoteService `protobuf:"bytes,23,opt,name=envoy_metrics_service,json=envoyMetricsService,proto3" json:"envoy_metrics_service,omitempty"`
	// $hide_from_docs
	// Additional env variables for the proxy.
	// Names starting with ISTIO_META_ will be included in the generated bootstrap and sent to the XDS server.
	ProxyMetadata        map[string]string `protobuf:"bytes,24,rep,name=proxy_metadata,json=proxyMetadata,proto3" json:"proxy_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProxyConfig) Reset()         { *m = ProxyConfig{} }
func (m *ProxyConfig) String() string { return proto.CompactTextString(m) }
func (*ProxyConfig) ProtoMessage()    {}
func (*ProxyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_5efecd978cf3d28d, []int{2}
}

func (m *ProxyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyConfig.Unmarshal(m, b)
}
func (m *ProxyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyConfig.Marshal(b, m, deterministic)
}
func (m *ProxyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyConfig.Merge(m, src)
}
func (m *ProxyConfig) XXX_Size() int {
	return xxx_messageInfo_ProxyConfig.Size(m)
}
func (m *ProxyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyConfig proto.InternalMessageInfo

func (m *ProxyConfig) GetConfigPath() string {
	if m != nil {
		return m.ConfigPath
	}
	return ""
}

func (m *ProxyConfig) GetBinaryPath() string {
	if m != nil {
		return m.BinaryPath
	}
	return ""
}

func (m *ProxyConfig) GetServiceCluster() string {
	if m != nil {
		return m.ServiceCluster
	}
	return ""
}

func (m *ProxyConfig) GetDrainDuration() *duration.Duration {
	if m != nil {
		return m.DrainDuration
	}
	return nil
}

func (m *ProxyConfig) GetParentShutdownDuration() *duration.Duration {
	if m != nil {
		return m.ParentShutdownDuration
	}
	return nil
}

func (m *ProxyConfig) GetDiscoveryAddress() string {
	if m != nil {
		return m.DiscoveryAddress
	}
	return ""
}

// Deprecated: Do not use.
func (m *ProxyConfig) GetDiscoveryRefreshDelay() *duration.Duration {
	if m != nil {
		return m.DiscoveryRefreshDelay
	}
	return nil
}

// Deprecated: Do not use.
func (m *ProxyConfig) GetZipkinAddress() string {
	if m != nil {
		return m.ZipkinAddress
	}
	return ""
}

func (m *ProxyConfig) GetConnectTimeout() *duration.Duration {
	if m != nil {
		return m.ConnectTimeout
	}
	return nil
}

func (m *ProxyConfig) GetStatsdUdpAddress() string {
	if m != nil {
		return m.StatsdUdpAddress
	}
	return ""
}

// Deprecated: Do not use.
func (m *ProxyConfig) GetEnvoyMetricsServiceAddress() string {
	if m != nil {
		return m.EnvoyMetricsServiceAddress
	}
	return ""
}

func (m *ProxyConfig) GetProxyAdminPort() int32 {
	if m != nil {
		return m.ProxyAdminPort
	}
	return 0
}

// Deprecated: Do not use.
func (m *ProxyConfig) GetAvailabilityZone() string {
	if m != nil {
		return m.AvailabilityZone
	}
	return ""
}

func (m *ProxyConfig) GetControlPlaneAuthPolicy() AuthenticationPolicy {
	if m != nil {
		return m.ControlPlaneAuthPolicy
	}
	return AuthenticationPolicy_NONE
}

func (m *ProxyConfig) GetCustomConfigFile() string {
	if m != nil {
		return m.CustomConfigFile
	}
	return ""
}

func (m *ProxyConfig) GetStatNameLength() int32 {
	if m != nil {
		return m.StatNameLength
	}
	return 0
}

func (m *ProxyConfig) GetConcurrency() int32 {
	if m != nil {
		return m.Concurrency
	}
	return 0
}

func (m *ProxyConfig) GetProxyBootstrapTemplatePath() string {
	if m != nil {
		return m.ProxyBootstrapTemplatePath
	}
	return ""
}

func (m *ProxyConfig) GetInterceptionMode() ProxyConfig_InboundInterceptionMode {
	if m != nil {
		return m.InterceptionMode
	}
	return ProxyConfig_REDIRECT
}

func (m *ProxyConfig) GetTracing() *Tracing {
	if m != nil {
		return m.Tracing
	}
	return nil
}

func (m *ProxyConfig) GetSds() *SDS {
	if m != nil {
		return m.Sds
	}
	return nil
}

func (m *ProxyConfig) GetEnvoyAccessLogService() *RemoteService {
	if m != nil {
		return m.EnvoyAccessLogService
	}
	return nil
}

func (m *ProxyConfig) GetEnvoyMetricsService() *RemoteService {
	if m != nil {
		return m.EnvoyMetricsService
	}
	return nil
}

func (m *ProxyConfig) GetProxyMetadata() map[string]string {
	if m != nil {
		return m.ProxyMetadata
	}
	return nil
}

type RemoteService struct {
	// Address of a remove service used for various purposes (access log
	// receiver, metrics receiver, etc.). Can be IP address or a fully
	// qualified DNS name.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Use the tls_settings to specify the tls mode to use. If the remote service
	// uses Istio mutual TLS and shares the root CA with Pilot, specify the TLS
	// mode as `ISTIO_MUTUAL`.
	TlsSettings *v1alpha3.TLSSettings `protobuf:"bytes,2,opt,name=tls_settings,json=tlsSettings,proto3" json:"tls_settings,omitempty"`
	// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
	TcpKeepalive         *v1alpha3.ConnectionPoolSettings_TCPSettings_TcpKeepalive `protobuf:"bytes,3,opt,name=tcp_keepalive,json=tcpKeepalive,proto3" json:"tcp_keepalive,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                  `json:"-"`
	XXX_unrecognized     []byte                                                    `json:"-"`
	XXX_sizecache        int32                                                     `json:"-"`
}

func (m *RemoteService) Reset()         { *m = RemoteService{} }
func (m *RemoteService) String() string { return proto.CompactTextString(m) }
func (*RemoteService) ProtoMessage()    {}
func (*RemoteService) Descriptor() ([]byte, []int) {
	return fileDescriptor_5efecd978cf3d28d, []int{3}
}

func (m *RemoteService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteService.Unmarshal(m, b)
}
func (m *RemoteService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteService.Marshal(b, m, deterministic)
}
func (m *RemoteService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteService.Merge(m, src)
}
func (m *RemoteService) XXX_Size() int {
	return xxx_messageInfo_RemoteService.Size(m)
}
func (m *RemoteService) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteService.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteService proto.InternalMessageInfo

func (m *RemoteService) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RemoteService) GetTlsSettings() *v1alpha3.TLSSettings {
	if m != nil {
		return m.TlsSettings
	}
	return nil
}

func (m *RemoteService) GetTcpKeepalive() *v1alpha3.ConnectionPoolSettings_TCPSettings_TcpKeepalive {
	if m != nil {
		return m.TcpKeepalive
	}
	return nil
}

func init() {
	proto.RegisterEnum("istio.mesh.v1alpha1.AuthenticationPolicy", AuthenticationPolicy_name, AuthenticationPolicy_value)
	proto.RegisterEnum("istio.mesh.v1alpha1.ProxyConfig_InboundInterceptionMode", ProxyConfig_InboundInterceptionMode_name, ProxyConfig_InboundInterceptionMode_value)
	proto.RegisterType((*Tracing)(nil), "istio.mesh.v1alpha1.Tracing")
	proto.RegisterType((*Tracing_Zipkin)(nil), "istio.mesh.v1alpha1.Tracing.Zipkin")
	proto.RegisterType((*Tracing_Lightstep)(nil), "istio.mesh.v1alpha1.Tracing.Lightstep")
	proto.RegisterType((*Tracing_Datadog)(nil), "istio.mesh.v1alpha1.Tracing.Datadog")
	proto.RegisterType((*Tracing_Stackdriver)(nil), "istio.mesh.v1alpha1.Tracing.Stackdriver")
	proto.RegisterType((*SDS)(nil), "istio.mesh.v1alpha1.SDS")
	proto.RegisterType((*ProxyConfig)(nil), "istio.mesh.v1alpha1.ProxyConfig")
	proto.RegisterMapType((map[string]string)(nil), "istio.mesh.v1alpha1.ProxyConfig.ProxyMetadataEntry")
	proto.RegisterType((*RemoteService)(nil), "istio.mesh.v1alpha1.RemoteService")
}

func init() { proto.RegisterFile("mesh/v1alpha1/proxy.proto", fileDescriptor_5efecd978cf3d28d) }

var fileDescriptor_5efecd978cf3d28d = []byte{
	// 1332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xdd, 0x52, 0x1b, 0x39,
	0x16, 0xc6, 0x90, 0xd8, 0x70, 0x6c, 0x8c, 0x51, 0x02, 0x69, 0xbc, 0xc9, 0x2e, 0x4b, 0xf6, 0x87,
	0x64, 0xb7, 0xec, 0x4a, 0xd8, 0x4a, 0x51, 0x5b, 0xb5, 0x5b, 0xe1, 0x2f, 0x05, 0x59, 0x20, 0x54,
	0xdb, 0xa4, 0x76, 0xc8, 0x85, 0x4a, 0xee, 0x3e, 0xd8, 0x1a, 0xb7, 0xa5, 0x2e, 0x49, 0x6d, 0xe2,
	0xdc, 0xcd, 0xdb, 0xcc, 0xd5, 0x3c, 0xc7, 0xbc, 0xc8, 0x54, 0xcd, 0x63, 0x4c, 0xb5, 0xd4, 0x6d,
	0x9c, 0xc4, 0x31, 0x73, 0xd7, 0x3a, 0xfa, 0xbe, 0xaf, 0x75, 0x3e, 0x1d, 0x1d, 0x09, 0x36, 0x06,
	0xa8, 0x7b, 0xcd, 0xe1, 0x0b, 0x16, 0xc5, 0x3d, 0xf6, 0xa2, 0x19, 0x2b, 0xf9, 0x71, 0xd4, 0x88,
	0x95, 0x34, 0x92, 0x3c, 0xe0, 0xda, 0x70, 0xd9, 0x48, 0x01, 0x8d, 0x1c, 0x50, 0xff, 0x63, 0x57,
	0xca, 0x6e, 0x84, 0x4d, 0x0b, 0xe9, 0x24, 0xd7, 0xcd, 0x30, 0x51, 0xcc, 0x70, 0x29, 0x1c, 0xe9,
	0xeb, 0xf9, 0x1b, 0xc5, 0xe2, 0x18, 0x95, 0xce, 0xe6, 0x9f, 0x0b, 0x34, 0x37, 0x52, 0xf5, 0xb9,
	0xe8, 0xe6, 0x7f, 0xdd, 0x69, 0x86, 0xa8, 0x0d, 0x17, 0x56, 0x86, 0xaa, 0x24, 0x42, 0x87, 0xdd,
	0xfa, 0xb1, 0x08, 0xa5, 0xb6, 0x62, 0x01, 0x17, 0x5d, 0xf2, 0x1f, 0x28, 0x7e, 0xe2, 0x71, 0x9f,
	0x0b, 0xaf, 0xb0, 0x59, 0xd8, 0x2e, 0xbf, 0x7c, 0xda, 0x98, 0xb2, 0xba, 0x46, 0x86, 0x6e, 0x5c,
	0x59, 0xe8, 0xf1, 0x9c, 0x9f, 0x91, 0xc8, 0x1b, 0x58, 0x8a, 0x78, 0xb7, 0x67, 0xb4, 0xc1, 0xd8,
	0x9b, 0xb7, 0x0a, 0x7f, 0x9b, 0xa9, 0x70, 0x9a, 0xa3, 0x8f, 0xe7, 0xfc, 0x5b, 0x2a, 0x79, 0x0d,
	0xa5, 0x90, 0x19, 0x16, 0xca, 0xae, 0xb7, 0x60, 0x55, 0xfe, 0x32, 0x53, 0xe5, 0xd0, 0x61, 0x8f,
	0xe7, 0xfc, 0x9c, 0x46, 0x4e, 0xa1, 0xac, 0x0d, 0x0b, 0xfa, 0xa1, 0xe2, 0x43, 0x54, 0xde, 0x3d,
	0xab, 0xb2, 0x3d, 0x53, 0xa5, 0x75, 0x8b, 0x3f, 0x9e, 0xf3, 0x27, 0xe9, 0xf5, 0x2d, 0x28, 0xba,
	0x5c, 0x89, 0x07, 0x25, 0x16, 0x86, 0x0a, 0xb5, 0xb6, 0x0e, 0x2d, 0xf9, 0xf9, 0xb0, 0xfe, 0x43,
	0x01, 0x96, 0xc6, 0xe9, 0x7c, 0x1b, 0x47, 0xfe, 0x0c, 0x15, 0x16, 0x04, 0xa8, 0x35, 0x35, 0xb2,
	0x8f, 0xc2, 0xda, 0xb4, 0xe4, 0x97, 0x5d, 0xac, 0x9d, 0x86, 0xc8, 0x3a, 0x14, 0x35, 0x06, 0x89,
	0x42, 0x9b, 0xfd, 0xa2, 0x9f, 0x8d, 0xc8, 0x9f, 0xa0, 0x1c, 0xb0, 0x00, 0x95, 0xa1, 0x31, 0x33,
	0x3d, 0x9b, 0xd4, 0x92, 0x0f, 0x2e, 0x74, 0xc1, 0x4c, 0xaf, 0xfe, 0x14, 0x4a, 0x99, 0x17, 0x33,
	0x16, 0xfa, 0xd3, 0x3c, 0x94, 0x27, 0x72, 0x25, 0x0f, 0xe1, 0x7e, 0x88, 0x9d, 0xa4, 0x6b, 0x71,
	0x8b, 0xbe, 0x1b, 0x90, 0x36, 0x78, 0x03, 0xf6, 0x91, 0x8a, 0x64, 0xd0, 0x41, 0x45, 0xe5, 0x35,
	0x65, 0xc6, 0x28, 0xde, 0x49, 0x0c, 0xea, 0x6c, 0x67, 0xff, 0xd0, 0x70, 0x45, 0xd8, 0xc8, 0x8b,
	0xb0, 0x71, 0x22, 0xcc, 0xab, 0x7f, 0xbd, 0x67, 0x51, 0x82, 0xfe, 0xda, 0x80, 0x7d, 0x3c, 0xb7,
	0xdc, 0x77, 0xd7, 0x7b, 0x63, 0x26, 0x79, 0x0f, 0x1b, 0x5f, 0xa8, 0x0a, 0x21, 0x8d, 0x2d, 0x49,
	0x9d, 0x6d, 0xf5, 0x4c, 0xd9, 0xf5, 0x49, 0xd9, 0x5b, 0x2a, 0xf9, 0x00, 0x8f, 0x3f, 0xd7, 0x1d,
	0xa0, 0xd6, 0xac, 0x8b, 0x14, 0x87, 0x28, 0x8c, 0xce, 0xf6, 0x7f, 0xa6, 0xb4, 0x37, 0x21, 0x7d,
	0xe6, 0xd8, 0x47, 0x96, 0xbc, 0xbf, 0x08, 0x45, 0xa3, 0x52, 0x93, 0xb7, 0xde, 0xc0, 0x42, 0xeb,
	0xb0, 0x95, 0x7a, 0x8b, 0x82, 0x75, 0x22, 0x0c, 0x33, 0xcf, 0xf2, 0x21, 0xf9, 0x2b, 0xac, 0xf4,
	0x77, 0x35, 0xd5, 0x8c, 0x7e, 0x7f, 0x93, 0xed, 0x92, 0xdb, 0xdf, 0x4a, 0x7f, 0x57, 0xb7, 0xd8,
	0xdb, 0x1b, 0xbb, 0x4f, 0x5b, 0x3f, 0x57, 0xa0, 0x7c, 0x91, 0xf6, 0x80, 0x03, 0x29, 0xae, 0x79,
	0xd7, 0x6e, 0xac, 0xfd, 0x72, 0x94, 0x42, 0xb6, 0xb1, 0x36, 0x94, 0x12, 0x52, 0x40, 0x87, 0x0b,
	0xa6, 0x46, 0x93, 0x9a, 0xe0, 0x42, 0x16, 0xf0, 0x77, 0x58, 0xd1, 0xa8, 0x86, 0x3c, 0x40, 0x1a,
	0x44, 0x89, 0x36, 0xa8, 0xac, 0x9d, 0x4b, 0x7e, 0x35, 0x0b, 0x1f, 0xb8, 0x28, 0x79, 0x0d, 0xd5,
	0x50, 0x31, 0x2e, 0x68, 0xde, 0x51, 0x32, 0x6f, 0x36, 0xbe, 0xf2, 0xe6, 0x30, 0x03, 0xf8, 0xcb,
	0x96, 0x90, 0x0f, 0x49, 0x0b, 0xbc, 0x98, 0x29, 0x14, 0x86, 0xea, 0x5e, 0x62, 0x42, 0x79, 0x33,
	0xa1, 0x75, 0xff, 0x2e, 0xad, 0x75, 0x47, 0x6d, 0x65, 0xcc, 0xb1, 0xe8, 0x3f, 0x60, 0x35, 0xe4,
	0x3a, 0x90, 0x43, 0x54, 0x23, 0x9a, 0x17, 0x6e, 0xd1, 0x66, 0x50, 0x1b, 0x4f, 0xec, 0x65, 0x47,
	0xe8, 0x12, 0x1e, 0xdd, 0x82, 0x15, 0x5e, 0x2b, 0xd4, 0x3d, 0x1a, 0x62, 0xc4, 0x46, 0x5e, 0xe9,
	0x8e, 0x05, 0xec, 0xcf, 0x7b, 0x05, 0x7f, 0x6d, 0xcc, 0xf6, 0x1d, 0xf9, 0x30, 0xe5, 0x92, 0x67,
	0x50, 0x75, 0x7d, 0x6c, 0xbc, 0x80, 0xc5, 0x74, 0x01, 0x96, 0xb2, 0xec, 0x66, 0xf2, 0x15, 0xec,
	0xc3, 0x4a, 0x20, 0x85, 0xc0, 0xc0, 0x50, 0xc3, 0x07, 0x28, 0x13, 0xe3, 0x2d, 0xdd, 0x95, 0x7a,
	0x35, 0x63, 0xb4, 0x1d, 0x81, 0xfc, 0x13, 0x88, 0x36, 0xcc, 0xe8, 0x90, 0x26, 0x61, 0x3c, 0xfe,
	0x25, 0xb8, 0x9c, 0xdd, 0xcc, 0x65, 0x18, 0xe7, 0x7f, 0x3c, 0x82, 0x27, 0x28, 0x86, 0x72, 0x44,
	0x07, 0x68, 0x14, 0x0f, 0x34, 0xcd, 0xb7, 0x3b, 0x27, 0x3e, 0x1c, 0xaf, 0xb5, 0x6e, 0x81, 0x67,
	0x0e, 0xd7, 0x72, 0xb0, 0x5c, 0x66, 0x1b, 0x6a, 0xf6, 0xf2, 0xa1, 0x2c, 0x1c, 0x70, 0x41, 0x63,
	0xa9, 0x8c, 0x57, 0xde, 0x2c, 0x6c, 0xdf, 0xf7, 0xab, 0x36, 0xbe, 0x97, 0x86, 0x2f, 0xa4, 0x32,
	0xa4, 0x09, 0xab, 0x6c, 0xc8, 0x78, 0xc4, 0x3a, 0x3c, 0xe2, 0x66, 0x44, 0x3f, 0x49, 0x81, 0x5e,
	0x65, 0xfc, 0x93, 0xda, 0xe4, 0xe4, 0x95, 0x14, 0x48, 0x42, 0xd8, 0x08, 0xa4, 0x30, 0x4a, 0x46,
	0x34, 0x8e, 0x98, 0x40, 0xca, 0x12, 0xd3, 0xa3, 0xb1, 0x8c, 0x78, 0x30, 0xf2, 0x96, 0x37, 0x0b,
	0xdb, 0xd5, 0x97, 0xcf, 0xa6, 0x36, 0xe0, 0xbd, 0xc4, 0xf4, 0x50, 0x18, 0x1e, 0x58, 0x9f, 0x2e,
	0x2c, 0xc1, 0x5f, 0xcf, 0xb4, 0x2e, 0x52, 0xa9, 0x14, 0xe1, 0xe2, 0xa9, 0x6b, 0x41, 0xa2, 0x8d,
	0x1c, 0xd0, 0xec, 0xc4, 0x5c, 0xf3, 0x08, 0xbd, 0xaa, 0x73, 0xcd, 0xcd, 0xb8, 0x43, 0xf5, 0x86,
	0x47, 0x98, 0xa6, 0x9b, 0x3a, 0x49, 0x05, 0x1b, 0x20, 0x8d, 0x50, 0x74, 0x4d, 0xcf, 0x5b, 0x71,
	0xe9, 0xa6, 0xf1, 0x73, 0x36, 0xc0, 0x53, 0x1b, 0x25, 0x9b, 0xf6, 0x08, 0x06, 0x89, 0x52, 0x28,
	0x82, 0x91, 0x57, 0xb3, 0xa0, 0xc9, 0x10, 0xd9, 0x83, 0x27, 0xce, 0xba, 0x8e, 0x94, 0x46, 0x1b,
	0xc5, 0x62, 0x6a, 0x70, 0x10, 0x47, 0xcc, 0xa0, 0x3b, 0x95, 0xab, 0x76, 0x11, 0x75, 0x0b, 0xda,
	0xcf, 0x31, 0xed, 0x0c, 0x62, 0x4f, 0x29, 0xc2, 0x2a, 0x17, 0x06, 0x55, 0x80, 0xb1, 0xbd, 0x85,
	0x07, 0x32, 0x44, 0x8f, 0x58, 0x6b, 0x76, 0xa7, 0x5a, 0x33, 0xd1, 0x24, 0x1a, 0x27, 0xa2, 0x23,
	0x13, 0x11, 0x9e, 0x4c, 0x08, 0x9c, 0xc9, 0x10, 0xfd, 0x1a, 0xff, 0x22, 0x42, 0x5e, 0x41, 0xc9,
	0xb8, 0x4b, 0xcd, 0x7b, 0x60, 0xab, 0xf2, 0xf1, 0xac, 0x8b, 0xcf, 0xcf, 0xc1, 0xe4, 0x39, 0x2c,
	0xe8, 0x50, 0x7b, 0x6b, 0x96, 0xe3, 0x4d, 0xe5, 0xb4, 0x0e, 0x5b, 0x7e, 0x0a, 0x22, 0x1f, 0xc0,
	0x73, 0xf5, 0x98, 0x5d, 0x66, 0x91, 0xec, 0xe6, 0x25, 0xe9, 0xad, 0x5b, 0x81, 0xad, 0xa9, 0x02,
	0x3e, 0x0e, 0xa4, 0xc1, 0xac, 0x2a, 0xfd, 0x35, 0xab, 0xb1, 0x67, 0x25, 0x4e, 0x65, 0x37, 0x0b,
	0x93, 0xf7, 0xb0, 0x36, 0xb5, 0xd8, 0xbd, 0x47, 0xbf, 0x5b, 0xf9, 0xc1, 0x94, 0x43, 0x40, 0xae,
	0xc0, 0x55, 0x79, 0xaa, 0xcb, 0xd2, 0xa7, 0x82, 0xe7, 0x6d, 0x2e, 0x6c, 0x97, 0x5f, 0xee, 0xdc,
	0x69, 0xbe, 0xfd, 0x3e, 0xcb, 0x58, 0x47, 0xc2, 0xa8, 0x91, 0xbf, 0x1c, 0x4f, 0xc6, 0xea, 0xaf,
	0x81, 0x7c, 0x0d, 0x22, 0x35, 0x58, 0xe8, 0xe3, 0x28, 0xeb, 0xe8, 0xe9, 0x67, 0x7a, 0xdd, 0x0e,
	0xd3, 0x0b, 0x27, 0x6b, 0xe2, 0x6e, 0xf0, 0xef, 0xf9, 0xdd, 0xc2, 0xd6, 0x0e, 0x3c, 0xfa, 0xc6,
	0x1e, 0x93, 0x0a, 0x2c, 0xfa, 0x47, 0x87, 0x27, 0xfe, 0xd1, 0x41, 0xbb, 0x36, 0x47, 0x00, 0x8a,
	0xed, 0x0b, 0xff, 0xdd, 0xff, 0xbf, 0xab, 0x15, 0xb6, 0x7e, 0x29, 0xc0, 0xf2, 0x67, 0x99, 0xcf,
	0x78, 0x7a, 0x9c, 0x40, 0xc5, 0x44, 0xa9, 0x99, 0xc6, 0x70, 0xd1, 0xd5, 0x5f, 0xbc, 0xd0, 0x6e,
	0x9f, 0x8c, 0xb9, 0x05, 0x3b, 0x8d, 0xf6, 0x69, 0xab, 0x95, 0xa1, 0xfd, 0xb2, 0x89, 0x74, 0x3e,
	0x20, 0x12, 0x96, 0x4d, 0x10, 0xd3, 0x3e, 0x62, 0xcc, 0x22, 0x3e, 0xc4, 0xec, 0xf2, 0x7e, 0x3b,
	0x43, 0xeb, 0xc0, 0xb5, 0x3f, 0x7b, 0xc4, 0x65, 0x94, 0x2b, 0x35, 0xda, 0x07, 0x17, 0xb7, 0xdf,
	0x41, 0xfc, 0xbf, 0x5c, 0xd1, 0xaf, 0x98, 0x89, 0xd1, 0xf3, 0xff, 0xc2, 0xc3, 0x69, 0x7d, 0x82,
	0x2c, 0xc2, 0xbd, 0xf3, 0x77, 0xe7, 0x47, 0xb5, 0x39, 0x52, 0x05, 0x38, 0xbb, 0x6c, 0x5f, 0xee,
	0x9d, 0xd2, 0xf6, 0x69, 0xab, 0x56, 0x20, 0x15, 0x28, 0x9d, 0x9c, 0x1f, 0x1f, 0xf9, 0x27, 0xed,
	0xda, 0xaf, 0xa5, 0xfd, 0xc7, 0x57, 0x75, 0xb7, 0x34, 0x2e, 0x9b, 0x2c, 0xe6, 0xcd, 0xcf, 0x1e,
	0xe4, 0x9d, 0xa2, 0x6d, 0xd7, 0x3b, 0xbf, 0x05, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xa8, 0xd7, 0xc9,
	0xa8, 0x0b, 0x00, 0x00,
}
