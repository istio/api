// Copyright 2018 Istio Authors
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

package istio.mesh.v1alpha1;

option go_package="istio.io/api/mesh/v1alpha1";

// Network provides information about the endpoints in a routable L3
// network. A single routable L3 network can have one or more service
// registries. Note that the network has no relation to the locality of the
// endpoint. The endpoint locality will be obtained from the service
// registry.
message Network {
  // A unique name assigned to the network.
  string name = 1;

  // One or more service registries that are in this network. Endpoints
  // from these registries will be directly reachable to one another.
  // The names of the registries should correspond to the data sources.
  repeated string registries = 2;

  // The gateway associated with this network. Traffic from remote networks
  // will arrive at the specified gateway:port. All incoming traffic must
  // use mTLS.
  message IstioNetworkGateway {
    oneof gw {
      // A fully qualified domain name of the gateway service.  Pilot will
      // lookup the service from the service registries in the network and
      // obtain the endpoint IPs of the gateway from the service
      // registry. Note that while the service name is a fully qualified
      // domain name, it need not be resolvable outside the orchestration
      // platform for the registry. e.g., this could be
      // istio-ingressgateway.istio-system.svc.cluster.local.
      string registry_service_name = 1;

      // IP address or externally resolvable DNS address associated with the gateway.
      string address = 2;
    }

    // The port associated with the gateway.
    uint32 port = 3;

    // The locality associated with an explicitly specified gateway (i.e. ip)
    string locality = 4;
  }

  repeated IstioNetworkGateway gateways = 3;
}
