// Copyright 2019 Istio Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: envoy/config/filter/network/metadata_exchange/metadata_exchange.proto

package metadata_exchange

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// [#protodoc-title: MetadataExchange protocol match and data transfer]
// MetadataExchange protocol match and data transfer
type MetadataExchange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Protocol that Alpn should support on the server.
	// [#comment:TODO(GargNupur): Make it a list.]
	Protocol string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// If true, will attempt to use WDS in case the prefix peer metadata is not available.
	EnableDiscovery bool `protobuf:"varint,2,opt,name=enable_discovery,json=enableDiscovery,proto3" json:"enable_discovery,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MetadataExchange) Reset() {
	*x = MetadataExchange{}
	mi := &file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataExchange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataExchange) ProtoMessage() {}

func (x *MetadataExchange) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataExchange.ProtoReflect.Descriptor instead.
func (*MetadataExchange) Descriptor() ([]byte, []int) {
	return file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_rawDescGZIP(), []int{0}
}

func (x *MetadataExchange) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *MetadataExchange) GetEnableDiscovery() bool {
	if x != nil {
		return x.EnableDiscovery
	}
	return false
}

var File_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto protoreflect.FileDescriptor

const file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_rawDesc = "" +
	"\n" +
	"Eenvoy/config/filter/network/metadata_exchange/metadata_exchange.proto\x12!envoy.tcp.metadataexchange.config\"Y\n" +
	"\x10MetadataExchange\x12\x1a\n" +
	"\bprotocol\x18\x01 \x01(\tR\bprotocol\x12)\n" +
	"\x10enable_discovery\x18\x02 \x01(\bR\x0fenableDiscoveryB\x86\x01\n" +
	"/io.envoyproxy.envoy.tcp.metadataexchange.configB\x15MetadataExchangeProtoP\x01Z:istio.io/api/envoy/config/filter/network/metadata_exchangeb\x06proto3"

var (
	file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_rawDescOnce sync.Once
	file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_rawDescData []byte
)

func file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_rawDescGZIP() []byte {
	file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_rawDescOnce.Do(func() {
		file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_rawDesc), len(file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_rawDesc)))
	})
	return file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_rawDescData
}

var file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_goTypes = []any{
	(*MetadataExchange)(nil), // 0: envoy.tcp.metadataexchange.config.MetadataExchange
}
var file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_init() }
func file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_init() {
	if File_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_rawDesc), len(file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_goTypes,
		DependencyIndexes: file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_depIdxs,
		MessageInfos:      file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_msgTypes,
	}.Build()
	File_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto = out.File
	file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_goTypes = nil
	file_envoy_config_filter_network_metadata_exchange_metadata_exchange_proto_depIdxs = nil
}
