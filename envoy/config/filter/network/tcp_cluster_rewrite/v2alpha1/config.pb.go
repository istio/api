// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/network/tcp_cluster_rewrite/v2alpha1/config.proto

package v2alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// TcpClusterRewrite is the config for the TCP cluster rewrite filter.
type TcpClusterRewrite struct {
	// Specifies the regex pattern to be matched in the cluster name.
	ClusterPattern string `protobuf:"bytes,1,opt,name=cluster_pattern,json=clusterPattern,proto3" json:"cluster_pattern,omitempty"`
	// Specifies the replacement for the matched cluster pattern.
	ClusterReplacement   string   `protobuf:"bytes,2,opt,name=cluster_replacement,json=clusterReplacement,proto3" json:"cluster_replacement,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpClusterRewrite) Reset()         { *m = TcpClusterRewrite{} }
func (m *TcpClusterRewrite) String() string { return proto.CompactTextString(m) }
func (*TcpClusterRewrite) ProtoMessage()    {}
func (*TcpClusterRewrite) Descriptor() ([]byte, []int) {
	return fileDescriptor_3df0613c72936227, []int{0}
}

func (m *TcpClusterRewrite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpClusterRewrite.Unmarshal(m, b)
}
func (m *TcpClusterRewrite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpClusterRewrite.Marshal(b, m, deterministic)
}
func (m *TcpClusterRewrite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpClusterRewrite.Merge(m, src)
}
func (m *TcpClusterRewrite) XXX_Size() int {
	return xxx_messageInfo_TcpClusterRewrite.Size(m)
}
func (m *TcpClusterRewrite) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpClusterRewrite.DiscardUnknown(m)
}

var xxx_messageInfo_TcpClusterRewrite proto.InternalMessageInfo

func (m *TcpClusterRewrite) GetClusterPattern() string {
	if m != nil {
		return m.ClusterPattern
	}
	return ""
}

func (m *TcpClusterRewrite) GetClusterReplacement() string {
	if m != nil {
		return m.ClusterReplacement
	}
	return ""
}

func init() {
	proto.RegisterType((*TcpClusterRewrite)(nil), "istio.envoy.config.filter.network.tcp_cluster_rewrite.v2alpha1.TcpClusterRewrite")
}

func init() {
	proto.RegisterFile("envoy/config/filter/network/tcp_cluster_rewrite/v2alpha1/config.proto", fileDescriptor_3df0613c72936227)
}

var fileDescriptor_3df0613c72936227 = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x90, 0x31, 0x6f, 0xc2, 0x30,
	0x10, 0x85, 0x95, 0x0e, 0x95, 0xea, 0xa1, 0x55, 0xdd, 0x25, 0x63, 0xc5, 0x02, 0x93, 0x4f, 0xc0,
	0xce, 0x00, 0x8a, 0x58, 0x51, 0xc4, 0xc4, 0x12, 0x19, 0xeb, 0x02, 0x16, 0x8e, 0x6d, 0x39, 0x47,
	0x22, 0xfe, 0x3d, 0x52, 0xec, 0xc0, 0xc2, 0xc4, 0xfa, 0xbe, 0x7b, 0x9f, 0xee, 0x8e, 0x15, 0x68,
	0x3b, 0x77, 0x03, 0xe5, 0x6c, 0xad, 0x4f, 0x50, 0x6b, 0x43, 0x18, 0xc0, 0x22, 0xf5, 0x2e, 0x5c,
	0x80, 0x94, 0xaf, 0x94, 0xb9, 0xb6, 0x84, 0xa1, 0x0a, 0xd8, 0x07, 0x4d, 0x08, 0xdd, 0x42, 0x1a,
	0x7f, 0x96, 0xf3, 0x54, 0x11, 0x3e, 0x38, 0x72, 0x7c, 0xa5, 0x5b, 0xd2, 0x4e, 0x0c, 0x32, 0x91,
	0x48, 0x94, 0x89, 0x24, 0x13, 0x2f, 0x64, 0x62, 0x94, 0x4d, 0x1a, 0xf6, 0xbb, 0x57, 0x7e, 0x13,
	0x71, 0x19, 0x29, 0x9f, 0xb2, 0x9f, 0xb1, 0xe0, 0x25, 0x11, 0x06, 0x9b, 0x67, 0xff, 0xd9, 0xec,
	0xab, 0xfc, 0x4e, 0xf1, 0x2e, 0xa6, 0x1c, 0xd8, 0xdf, 0xd3, 0xec, 0x8d, 0x54, 0xd8, 0xa0, 0xa5,
	0xfc, 0x63, 0x18, 0xe6, 0x6a, 0xb4, 0x3e, 0xc8, 0x7a, 0x7b, 0x28, 0xe2, 0xc2, 0xda, 0x81, 0xf4,
	0x1a, 0xde, 0x7d, 0xc2, 0xf1, 0x73, 0x38, 0x7f, 0x79, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x75, 0x85,
	0x07, 0x19, 0x47, 0x01, 0x00, 0x00,
}
