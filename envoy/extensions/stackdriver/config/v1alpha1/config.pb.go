// Copyright 2019 Istio Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: envoy/extensions/stackdriver/config/v1alpha1/config.proto

// clang-format off
// $title: Stackdriver Config
// $description: Configuration for Stackdriver filter.
// $location: https://istio.io/docs/reference/config/proxy_extensions/stackdriver.html
// $weight: 20
// clang-format on

package v1alpha1

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Types of Access logs to export. Does not affect audit logging.
type PluginConfig_AccessLogging int32

const (
	// No Logs.
	PluginConfig_NONE PluginConfig_AccessLogging = 0
	// All logs including both success and error logs.
	PluginConfig_FULL PluginConfig_AccessLogging = 1
	// All error logs. This is currently only available for outbound/client side
	// logs. A request is classified as error when `status>=400 or
	// response_flag != "-"`
	PluginConfig_ERRORS_ONLY PluginConfig_AccessLogging = 2
)

// Enum value maps for PluginConfig_AccessLogging.
var (
	PluginConfig_AccessLogging_name = map[int32]string{
		0: "NONE",
		1: "FULL",
		2: "ERRORS_ONLY",
	}
	PluginConfig_AccessLogging_value = map[string]int32{
		"NONE":        0,
		"FULL":        1,
		"ERRORS_ONLY": 2,
	}
)

func (x PluginConfig_AccessLogging) Enum() *PluginConfig_AccessLogging {
	p := new(PluginConfig_AccessLogging)
	*p = x
	return p
}

func (x PluginConfig_AccessLogging) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PluginConfig_AccessLogging) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_enumTypes[0].Descriptor()
}

func (PluginConfig_AccessLogging) Type() protoreflect.EnumType {
	return &file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_enumTypes[0]
}

func (x PluginConfig_AccessLogging) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PluginConfig_AccessLogging.Descriptor instead.
func (PluginConfig_AccessLogging) EnumDescriptor() ([]byte, []int) {
	return file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDescGZIP(), []int{1, 0}
}

// Custom instance configuration overrides.
// Provides a way to customize logs.
type CustomConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// (Optional) Collection of tag names and tag expressions to include in the
	// instance. Conflicts are resolved by the tag name by overriding previously
	// supplied values.
	Dimensions map[string]string `protobuf:"bytes,1,rep,name=dimensions,proto3" json:"dimensions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// (Optional) A list of tags to remove.
	// Not implemented yet.
	// $hide_from_docs
	TagsToRemove  []string `protobuf:"bytes,2,rep,name=tags_to_remove,json=tagsToRemove,proto3" json:"tags_to_remove,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomConfig) Reset() {
	*x = CustomConfig{}
	mi := &file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomConfig) ProtoMessage() {}

func (x *CustomConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomConfig.ProtoReflect.Descriptor instead.
func (*CustomConfig) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDescGZIP(), []int{0}
}

func (x *CustomConfig) GetDimensions() map[string]string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *CustomConfig) GetTagsToRemove() []string {
	if x != nil {
		return x.TagsToRemove
	}
	return nil
}

// next id: 17
type PluginConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Controls whether to export server access log.
	// This is deprecated in favor of AccessLogging enum.
	//
	// Deprecated: Marked as deprecated in envoy/extensions/stackdriver/config/v1alpha1/config.proto.
	DisableServerAccessLogging bool `protobuf:"varint,1,opt,name=disable_server_access_logging,json=disableServerAccessLogging,proto3" json:"disable_server_access_logging,omitempty"`
	// Optional. Allows configuration of the size of the LogWrite request. The
	// size is in bytes, so that it allows for better performance. Default is 4MB.
	// The size of one log entry within LogWrite request is approx 1Kb.
	MaxLogBatchSizeInBytes int32 `protobuf:"varint,12,opt,name=max_log_batch_size_in_bytes,json=maxLogBatchSizeInBytes,proto3" json:"max_log_batch_size_in_bytes,omitempty"`
	// Optional. Allows configuration of the time between calls out to the
	// stackdriver logging service to report buffered LogWrite request.
	// Customers can choose to report more aggressively by keeping shorter report
	// interval if needed. Default is 10s.
	LogReportDuration *duration.Duration `protobuf:"bytes,13,opt,name=log_report_duration,json=logReportDuration,proto3" json:"log_report_duration,omitempty"`
	// Optional. Controls whether to export audit log.
	EnableAuditLog bool `protobuf:"varint,11,opt,name=enable_audit_log,json=enableAuditLog,proto3" json:"enable_audit_log,omitempty"`
	// Optional. FQDN of destination service that the request routed to, e.g.
	// productpage.default.svc.cluster.local. If not provided, request host header
	// will be used instead
	DestinationServiceName string `protobuf:"bytes,2,opt,name=destination_service_name,json=destinationServiceName,proto3" json:"destination_service_name,omitempty"`
	// Optional. Controls whether or not to export mesh edges to a mesh edges
	// service. This is disabled by default.
	// Deprecated -- Mesh edge reporting is no longer supported and this setting
	// is no-op.
	//
	// Deprecated: Marked as deprecated in envoy/extensions/stackdriver/config/v1alpha1/config.proto.
	EnableMeshEdgesReporting bool `protobuf:"varint,3,opt,name=enable_mesh_edges_reporting,json=enableMeshEdgesReporting,proto3" json:"enable_mesh_edges_reporting,omitempty"`
	// Optional. Allows configuration of the time between calls out to the mesh
	// edges service to report *NEW* edges. The minimum configurable duration is
	// `10s`. NOTE: This option ONLY configures the intermediate reporting of
	// novel edges. Once every `10m`, all edges observed in that 10m window are
	// reported and the local cache is cleared.
	// The default duration is `1m`. Any value greater than `10m` will result in
	// reporting every `10m`.
	// Deprecated -- Mesh edge reporting is no longer supported and this setting
	// is no-op.
	//
	// Deprecated: Marked as deprecated in envoy/extensions/stackdriver/config/v1alpha1/config.proto.
	MeshEdgesReportingDuration *duration.Duration `protobuf:"bytes,4,opt,name=mesh_edges_reporting_duration,json=meshEdgesReportingDuration,proto3" json:"mesh_edges_reporting_duration,omitempty"`
	// maximum size of the peer metadata cache.
	// A long lived proxy that connects with many transient peers can build up a
	// large cache. To turn off the cache, set this field to a negative value.
	MaxPeerCacheSize int32 `protobuf:"varint,5,opt,name=max_peer_cache_size,json=maxPeerCacheSize,proto3" json:"max_peer_cache_size,omitempty"`
	// Optional: Disable using host header as a fallback if destination service is
	// not available from the controlplane. Disable the fallback if the host
	// header originates outsides the mesh, like at ingress.
	DisableHostHeaderFallback bool `protobuf:"varint,6,opt,name=disable_host_header_fallback,json=disableHostHeaderFallback,proto3" json:"disable_host_header_fallback,omitempty"`
	// Optional. Allows configuration of the number of traffic assertions to batch
	// into a single request. Default is 100. Max is 1000.
	MaxEdgesBatchSize int32 `protobuf:"varint,7,opt,name=max_edges_batch_size,json=maxEdgesBatchSize,proto3" json:"max_edges_batch_size,omitempty"`
	// Optional. Allows disabling of reporting of the request and response size
	// metrics for HTTP traffic. Defaults to false (request and response size
	// metrics are enabled).
	// Deprecated -- use `metrics_overrides` instead.
	// if `metrics_overrides` is used, this value will be ignored.
	//
	// Deprecated: Marked as deprecated in envoy/extensions/stackdriver/config/v1alpha1/config.proto.
	DisableHttpSizeMetrics bool `protobuf:"varint,8,opt,name=disable_http_size_metrics,json=disableHttpSizeMetrics,proto3" json:"disable_http_size_metrics,omitempty"`
	// Optional. Allows enabling log compression for stackdriver access logs.
	EnableLogCompression *wrappers.BoolValue `protobuf:"bytes,9,opt,name=enable_log_compression,json=enableLogCompression,proto3" json:"enable_log_compression,omitempty"`
	// Optional. Controls what type of logs to export..
	AccessLogging PluginConfig_AccessLogging `protobuf:"varint,10,opt,name=access_logging,json=accessLogging,proto3,enum=stackdriver.config.v1alpha1.PluginConfig_AccessLogging" json:"access_logging,omitempty"`
	// CEL expression for filtering access logging. If the expression evaluates
	// to true, an access log entry will be generated. Otherwise, no access log
	// entry will be generated. If there are any type errors, the CEL expression
	// is evaluated as false. More details on type checking can be found
	// at https://kubernetes.io/docs/reference/using-api/cel/#type-checking.
	// A common error is referring to a non-existent field in the log entry.
	// It's crucial to note that in Envoy, the fields that appear in access log
	// entries can vary. This variation is influenced by several factors,
	// including the protocol in use (such as HTTP or TCP), the applied filters,
	// and the specific configuration of the Envoy instance. Therefore, when
	// using CEL expressions for filtering access logs, it's essential to ensure
	// that the expressions accurately refer to existing fields in the log entry.
	// The has() macro in CEL may be used in CEL expressions to check if a field
	// is accessible before attempting to access the field's value.
	// You can also quickly test CEL expressions at the CEL Playground
	// at https://playcel.undistro.io/.
	// NOTE: Audit logs ignore configured filters.
	AccessLoggingFilterExpression string `protobuf:"bytes,17,opt,name=access_logging_filter_expression,json=accessLoggingFilterExpression,proto3" json:"access_logging_filter_expression,omitempty"`
	// (Optional) Collection of tag names and tag expressions to include in the
	// logs. Conflicts are resolved by the tag name by overriding previously
	// supplied values. Does not apply to audit logs.
	// See
	// https://istio.io/latest/docs/tasks/observability/metrics/customize-metrics/#use-expressions-for-values
	// for more details about the expression language.
	CustomLogConfig *CustomConfig `protobuf:"bytes,14,opt,name=custom_log_config,json=customLogConfig,proto3" json:"custom_log_config,omitempty"`
	// Optional. Controls the metric expiry duration. If a metric time series is
	// not updated for the given duration, it will be purged from time series
	// cache as well as metric reporting. If this is not set or set to 0, time
	// series will never be expired. This option is useful to avoid unbounded
	// metric label explodes proxy memory.
	MetricExpiryDuration *duration.Duration `protobuf:"bytes,15,opt,name=metric_expiry_duration,json=metricExpiryDuration,proto3" json:"metric_expiry_duration,omitempty"`
	// Optional. Allows altering metrics behavior.
	// Metric names for specifying overloads drop the `istio.io/service` prefix.
	// Examples: `server/request_count`, `client/roundtrip_latencies`
	MetricsOverrides map[string]*MetricsOverride `protobuf:"bytes,16,rep,name=metrics_overrides,json=metricsOverrides,proto3" json:"metrics_overrides,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PluginConfig) Reset() {
	*x = PluginConfig{}
	mi := &file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginConfig) ProtoMessage() {}

func (x *PluginConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginConfig.ProtoReflect.Descriptor instead.
func (*PluginConfig) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDescGZIP(), []int{1}
}

// Deprecated: Marked as deprecated in envoy/extensions/stackdriver/config/v1alpha1/config.proto.
func (x *PluginConfig) GetDisableServerAccessLogging() bool {
	if x != nil {
		return x.DisableServerAccessLogging
	}
	return false
}

func (x *PluginConfig) GetMaxLogBatchSizeInBytes() int32 {
	if x != nil {
		return x.MaxLogBatchSizeInBytes
	}
	return 0
}

func (x *PluginConfig) GetLogReportDuration() *duration.Duration {
	if x != nil {
		return x.LogReportDuration
	}
	return nil
}

func (x *PluginConfig) GetEnableAuditLog() bool {
	if x != nil {
		return x.EnableAuditLog
	}
	return false
}

func (x *PluginConfig) GetDestinationServiceName() string {
	if x != nil {
		return x.DestinationServiceName
	}
	return ""
}

// Deprecated: Marked as deprecated in envoy/extensions/stackdriver/config/v1alpha1/config.proto.
func (x *PluginConfig) GetEnableMeshEdgesReporting() bool {
	if x != nil {
		return x.EnableMeshEdgesReporting
	}
	return false
}

// Deprecated: Marked as deprecated in envoy/extensions/stackdriver/config/v1alpha1/config.proto.
func (x *PluginConfig) GetMeshEdgesReportingDuration() *duration.Duration {
	if x != nil {
		return x.MeshEdgesReportingDuration
	}
	return nil
}

func (x *PluginConfig) GetMaxPeerCacheSize() int32 {
	if x != nil {
		return x.MaxPeerCacheSize
	}
	return 0
}

func (x *PluginConfig) GetDisableHostHeaderFallback() bool {
	if x != nil {
		return x.DisableHostHeaderFallback
	}
	return false
}

func (x *PluginConfig) GetMaxEdgesBatchSize() int32 {
	if x != nil {
		return x.MaxEdgesBatchSize
	}
	return 0
}

// Deprecated: Marked as deprecated in envoy/extensions/stackdriver/config/v1alpha1/config.proto.
func (x *PluginConfig) GetDisableHttpSizeMetrics() bool {
	if x != nil {
		return x.DisableHttpSizeMetrics
	}
	return false
}

func (x *PluginConfig) GetEnableLogCompression() *wrappers.BoolValue {
	if x != nil {
		return x.EnableLogCompression
	}
	return nil
}

func (x *PluginConfig) GetAccessLogging() PluginConfig_AccessLogging {
	if x != nil {
		return x.AccessLogging
	}
	return PluginConfig_NONE
}

func (x *PluginConfig) GetAccessLoggingFilterExpression() string {
	if x != nil {
		return x.AccessLoggingFilterExpression
	}
	return ""
}

func (x *PluginConfig) GetCustomLogConfig() *CustomConfig {
	if x != nil {
		return x.CustomLogConfig
	}
	return nil
}

func (x *PluginConfig) GetMetricExpiryDuration() *duration.Duration {
	if x != nil {
		return x.MetricExpiryDuration
	}
	return nil
}

func (x *PluginConfig) GetMetricsOverrides() map[string]*MetricsOverride {
	if x != nil {
		return x.MetricsOverrides
	}
	return nil
}

// Provides behavior modifications for Cloud Monitoring metrics.
type MetricsOverride struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. If true, no data for the associated metric will be collected or
	// exported.
	Drop bool `protobuf:"varint,1,opt,name=drop,proto3" json:"drop,omitempty"`
	// Optional. Maps tag names to value expressions that will be used at
	// reporting time. If the tag name does not match a well-known tag for the
	// istio Cloud Monitoring metrics, the configuration will have no effect.
	TagOverrides  map[string]string `protobuf:"bytes,2,rep,name=tag_overrides,json=tagOverrides,proto3" json:"tag_overrides,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsOverride) Reset() {
	*x = MetricsOverride{}
	mi := &file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsOverride) ProtoMessage() {}

func (x *MetricsOverride) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsOverride.ProtoReflect.Descriptor instead.
func (*MetricsOverride) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDescGZIP(), []int{2}
}

func (x *MetricsOverride) GetDrop() bool {
	if x != nil {
		return x.Drop
	}
	return false
}

func (x *MetricsOverride) GetTagOverrides() map[string]string {
	if x != nil {
		return x.TagOverrides
	}
	return nil
}

var File_envoy_extensions_stackdriver_config_v1alpha1_config_proto protoreflect.FileDescriptor

const file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDesc = "" +
	"\n" +
	"9envoy/extensions/stackdriver/config/v1alpha1/config.proto\x12\x1bstackdriver.config.v1alpha1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xce\x01\n" +
	"\fCustomConfig\x12Y\n" +
	"\n" +
	"dimensions\x18\x01 \x03(\v29.stackdriver.config.v1alpha1.CustomConfig.DimensionsEntryR\n" +
	"dimensions\x12$\n" +
	"\x0etags_to_remove\x18\x02 \x03(\tR\ftagsToRemove\x1a=\n" +
	"\x0fDimensionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x80\v\n" +
	"\fPluginConfig\x12E\n" +
	"\x1ddisable_server_access_logging\x18\x01 \x01(\bB\x02\x18\x01R\x1adisableServerAccessLogging\x12;\n" +
	"\x1bmax_log_batch_size_in_bytes\x18\f \x01(\x05R\x16maxLogBatchSizeInBytes\x12I\n" +
	"\x13log_report_duration\x18\r \x01(\v2\x19.google.protobuf.DurationR\x11logReportDuration\x12(\n" +
	"\x10enable_audit_log\x18\v \x01(\bR\x0eenableAuditLog\x128\n" +
	"\x18destination_service_name\x18\x02 \x01(\tR\x16destinationServiceName\x12A\n" +
	"\x1benable_mesh_edges_reporting\x18\x03 \x01(\bB\x02\x18\x01R\x18enableMeshEdgesReporting\x12`\n" +
	"\x1dmesh_edges_reporting_duration\x18\x04 \x01(\v2\x19.google.protobuf.DurationB\x02\x18\x01R\x1ameshEdgesReportingDuration\x12-\n" +
	"\x13max_peer_cache_size\x18\x05 \x01(\x05R\x10maxPeerCacheSize\x12?\n" +
	"\x1cdisable_host_header_fallback\x18\x06 \x01(\bR\x19disableHostHeaderFallback\x12/\n" +
	"\x14max_edges_batch_size\x18\a \x01(\x05R\x11maxEdgesBatchSize\x12=\n" +
	"\x19disable_http_size_metrics\x18\b \x01(\bB\x02\x18\x01R\x16disableHttpSizeMetrics\x12P\n" +
	"\x16enable_log_compression\x18\t \x01(\v2\x1a.google.protobuf.BoolValueR\x14enableLogCompression\x12^\n" +
	"\x0eaccess_logging\x18\n" +
	" \x01(\x0e27.stackdriver.config.v1alpha1.PluginConfig.AccessLoggingR\raccessLogging\x12G\n" +
	" access_logging_filter_expression\x18\x11 \x01(\tR\x1daccessLoggingFilterExpression\x12U\n" +
	"\x11custom_log_config\x18\x0e \x01(\v2).stackdriver.config.v1alpha1.CustomConfigR\x0fcustomLogConfig\x12O\n" +
	"\x16metric_expiry_duration\x18\x0f \x01(\v2\x19.google.protobuf.DurationR\x14metricExpiryDuration\x12l\n" +
	"\x11metrics_overrides\x18\x10 \x03(\v2?.stackdriver.config.v1alpha1.PluginConfig.MetricsOverridesEntryR\x10metricsOverrides\x1aq\n" +
	"\x15MetricsOverridesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12B\n" +
	"\x05value\x18\x02 \x01(\v2,.stackdriver.config.v1alpha1.MetricsOverrideR\x05value:\x028\x01\"4\n" +
	"\rAccessLogging\x12\b\n" +
	"\x04NONE\x10\x00\x12\b\n" +
	"\x04FULL\x10\x01\x12\x0f\n" +
	"\vERRORS_ONLY\x10\x02\"\xcb\x01\n" +
	"\x0fMetricsOverride\x12\x12\n" +
	"\x04drop\x18\x01 \x01(\bR\x04drop\x12c\n" +
	"\rtag_overrides\x18\x02 \x03(\v2>.stackdriver.config.v1alpha1.MetricsOverride.TagOverridesEntryR\ftagOverrides\x1a?\n" +
	"\x11TagOverridesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B;Z9istio.io/api/envoy/extensions/stackdriver/config/v1alpha1b\x06proto3"

var (
	file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDescOnce sync.Once
	file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDescData []byte
)

func file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDescGZIP() []byte {
	file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDesc), len(file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDesc)))
	})
	return file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDescData
}

var file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_goTypes = []any{
	(PluginConfig_AccessLogging)(0), // 0: stackdriver.config.v1alpha1.PluginConfig.AccessLogging
	(*CustomConfig)(nil),            // 1: stackdriver.config.v1alpha1.CustomConfig
	(*PluginConfig)(nil),            // 2: stackdriver.config.v1alpha1.PluginConfig
	(*MetricsOverride)(nil),         // 3: stackdriver.config.v1alpha1.MetricsOverride
	nil,                             // 4: stackdriver.config.v1alpha1.CustomConfig.DimensionsEntry
	nil,                             // 5: stackdriver.config.v1alpha1.PluginConfig.MetricsOverridesEntry
	nil,                             // 6: stackdriver.config.v1alpha1.MetricsOverride.TagOverridesEntry
	(*duration.Duration)(nil),       // 7: google.protobuf.Duration
	(*wrappers.BoolValue)(nil),      // 8: google.protobuf.BoolValue
}
var file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_depIdxs = []int32{
	4,  // 0: stackdriver.config.v1alpha1.CustomConfig.dimensions:type_name -> stackdriver.config.v1alpha1.CustomConfig.DimensionsEntry
	7,  // 1: stackdriver.config.v1alpha1.PluginConfig.log_report_duration:type_name -> google.protobuf.Duration
	7,  // 2: stackdriver.config.v1alpha1.PluginConfig.mesh_edges_reporting_duration:type_name -> google.protobuf.Duration
	8,  // 3: stackdriver.config.v1alpha1.PluginConfig.enable_log_compression:type_name -> google.protobuf.BoolValue
	0,  // 4: stackdriver.config.v1alpha1.PluginConfig.access_logging:type_name -> stackdriver.config.v1alpha1.PluginConfig.AccessLogging
	1,  // 5: stackdriver.config.v1alpha1.PluginConfig.custom_log_config:type_name -> stackdriver.config.v1alpha1.CustomConfig
	7,  // 6: stackdriver.config.v1alpha1.PluginConfig.metric_expiry_duration:type_name -> google.protobuf.Duration
	5,  // 7: stackdriver.config.v1alpha1.PluginConfig.metrics_overrides:type_name -> stackdriver.config.v1alpha1.PluginConfig.MetricsOverridesEntry
	6,  // 8: stackdriver.config.v1alpha1.MetricsOverride.tag_overrides:type_name -> stackdriver.config.v1alpha1.MetricsOverride.TagOverridesEntry
	3,  // 9: stackdriver.config.v1alpha1.PluginConfig.MetricsOverridesEntry.value:type_name -> stackdriver.config.v1alpha1.MetricsOverride
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_init() }
func file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_init() {
	if File_envoy_extensions_stackdriver_config_v1alpha1_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDesc), len(file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_depIdxs,
		EnumInfos:         file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_enumTypes,
		MessageInfos:      file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_msgTypes,
	}.Build()
	File_envoy_extensions_stackdriver_config_v1alpha1_config_proto = out.File
	file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_goTypes = nil
	file_envoy_extensions_stackdriver_config_v1alpha1_config_proto_depIdxs = nil
}
