# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: routing/v1alpha1/egress_rule.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from routing.v1alpha1 import route_rule_pb2 as routing_dot_v1alpha1_dot_route__rule__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='routing/v1alpha1/egress_rule.proto',
  package='istio.routing.v1alpha1',
  syntax='proto3',
  serialized_pb=_b('\n\"routing/v1alpha1/egress_rule.proto\x12\x16istio.routing.v1alpha1\x1a!routing/v1alpha1/route_rule.proto\"\xc1\x01\n\nEgressRule\x12\x39\n\x0b\x64\x65stination\x18\x01 \x01(\x0b\x32$.istio.routing.v1alpha1.IstioService\x12\x36\n\x05ports\x18\x02 \x03(\x0b\x32\'.istio.routing.v1alpha1.EgressRule.Port\x12\x18\n\x10use_egress_proxy\x18\x03 \x01(\x08\x1a&\n\x04Port\x12\x0c\n\x04port\x18\x01 \x01(\x05\x12\x10\n\x08protocol\x18\x02 \x01(\tB\x1fZ\x1distio.io/api/routing/v1alpha1b\x06proto3')
  ,
  dependencies=[routing_dot_v1alpha1_dot_route__rule__pb2.DESCRIPTOR,])




_EGRESSRULE_PORT = _descriptor.Descriptor(
  name='Port',
  full_name='istio.routing.v1alpha1.EgressRule.Port',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='port', full_name='istio.routing.v1alpha1.EgressRule.Port.port', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='protocol', full_name='istio.routing.v1alpha1.EgressRule.Port.protocol', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=253,
  serialized_end=291,
)

_EGRESSRULE = _descriptor.Descriptor(
  name='EgressRule',
  full_name='istio.routing.v1alpha1.EgressRule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='destination', full_name='istio.routing.v1alpha1.EgressRule.destination', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ports', full_name='istio.routing.v1alpha1.EgressRule.ports', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='use_egress_proxy', full_name='istio.routing.v1alpha1.EgressRule.use_egress_proxy', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_EGRESSRULE_PORT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=98,
  serialized_end=291,
)

_EGRESSRULE_PORT.containing_type = _EGRESSRULE
_EGRESSRULE.fields_by_name['destination'].message_type = routing_dot_v1alpha1_dot_route__rule__pb2._ISTIOSERVICE
_EGRESSRULE.fields_by_name['ports'].message_type = _EGRESSRULE_PORT
DESCRIPTOR.message_types_by_name['EgressRule'] = _EGRESSRULE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

EgressRule = _reflection.GeneratedProtocolMessageType('EgressRule', (_message.Message,), dict(

  Port = _reflection.GeneratedProtocolMessageType('Port', (_message.Message,), dict(
    DESCRIPTOR = _EGRESSRULE_PORT,
    __module__ = 'routing.v1alpha1.egress_rule_pb2'
    # @@protoc_insertion_point(class_scope:istio.routing.v1alpha1.EgressRule.Port)
    ))
  ,
  DESCRIPTOR = _EGRESSRULE,
  __module__ = 'routing.v1alpha1.egress_rule_pb2'
  # @@protoc_insertion_point(class_scope:istio.routing.v1alpha1.EgressRule)
  ))
_sym_db.RegisterMessage(EgressRule)
_sym_db.RegisterMessage(EgressRule.Port)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\035istio.io/api/routing/v1alpha1'))
# @@protoc_insertion_point(module_scope)
