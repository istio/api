# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: telemetry/v1alpha1/telemetry.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from type.v1beta1 import selector_pb2 as type_dot_v1beta1_dot_selector__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\"telemetry/v1alpha1/telemetry.proto\x12\x18istio.telemetry.v1alpha1\x1a\x1btype/v1beta1/selector.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\x97\x02\n\tTelemetry\x12@\n\x08selector\x18\x01 \x01(\x0b\x32$.istio.type.v1beta1.WorkloadSelectorR\x08selector\x12;\n\x07tracing\x18\x02 \x03(\x0b\x32!.istio.telemetry.v1alpha1.TracingR\x07tracing\x12;\n\x07metrics\x18\x03 \x03(\x0b\x32!.istio.telemetry.v1alpha1.MetricsR\x07metrics\x12N\n\x0e\x61\x63\x63\x65ss_logging\x18\x04 \x03(\x0b\x32\'.istio.telemetry.v1alpha1.AccessLoggingR\raccessLogging\"\xcf\x07\n\x07Tracing\x12\x43\n\tproviders\x18\x02 \x03(\x0b\x32%.istio.telemetry.v1alpha1.ProviderRefR\tproviders\x12Z\n\x1arandom_sampling_percentage\x18\x03 \x01(\x0b\x32\x1c.google.protobuf.DoubleValueR\x18randomSamplingPercentage\x12P\n\x16\x64isable_span_reporting\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.BoolValueR\x14\x64isableSpanReporting\x12R\n\x0b\x63ustom_tags\x18\x05 \x03(\x0b\x32\x31.istio.telemetry.v1alpha1.Tracing.CustomTagsEntryR\ncustomTags\x12\x63\n!use_request_id_for_trace_sampling\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.BoolValueR\x1cuseRequestIdForTraceSampling\x1a\xf8\x01\n\tCustomTag\x12\x45\n\x07literal\x18\x01 \x01(\x0b\x32).istio.telemetry.v1alpha1.Tracing.LiteralH\x00R\x07literal\x12Q\n\x0b\x65nvironment\x18\x02 \x01(\x0b\x32-.istio.telemetry.v1alpha1.Tracing.EnvironmentH\x00R\x0b\x65nvironment\x12I\n\x06header\x18\x03 \x01(\x0b\x32/.istio.telemetry.v1alpha1.Tracing.RequestHeaderH\x00R\x06headerB\x06\n\x04type\x1a\x1f\n\x07Literal\x12\x14\n\x05value\x18\x01 \x01(\tR\x05value\x1a\x46\n\x0b\x45nvironment\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12#\n\rdefault_value\x18\x02 \x01(\tR\x0c\x64\x65\x66\x61ultValue\x1aH\n\rRequestHeader\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12#\n\rdefault_value\x18\x02 \x01(\tR\x0c\x64\x65\x66\x61ultValue\x1aj\n\x0f\x43ustomTagsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x41\n\x05value\x18\x02 \x01(\x0b\x32+.istio.telemetry.v1alpha1.Tracing.CustomTagR\x05value:\x02\x38\x01\"!\n\x0bProviderRef\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\"\x98\x01\n\x07Metrics\x12\x43\n\tproviders\x18\x01 \x03(\x0b\x32%.istio.telemetry.v1alpha1.ProviderRefR\tproviders\x12H\n\toverrides\x18\x02 \x03(\x0b\x32*.istio.telemetry.v1alpha1.MetricsOverridesR\toverrides\"\xdd\x03\n\x0eMetricSelector\x12N\n\x06metric\x18\x01 \x01(\x0e\x32\x34.istio.telemetry.v1alpha1.MetricSelector.IstioMetricH\x00R\x06metric\x12%\n\rcustom_metric\x18\x02 \x01(\tH\x00R\x0c\x63ustomMetric\x12:\n\x04mode\x18\x03 \x01(\x0e\x32&.istio.telemetry.v1alpha1.WorkloadModeR\x04mode\"\x87\x02\n\x0bIstioMetric\x12\x0f\n\x0b\x41LL_METRICS\x10\x00\x12\x11\n\rREQUEST_COUNT\x10\x01\x12\x14\n\x10REQUEST_DURATION\x10\x02\x12\x10\n\x0cREQUEST_SIZE\x10\x03\x12\x11\n\rRESPONSE_SIZE\x10\x04\x12\x1a\n\x16TCP_OPENED_CONNECTIONS\x10\x05\x12\x1a\n\x16TCP_CLOSED_CONNECTIONS\x10\x06\x12\x12\n\x0eTCP_SENT_BYTES\x10\x07\x12\x16\n\x12TCP_RECEIVED_BYTES\x10\x08\x12\x19\n\x15GRPC_REQUEST_MESSAGES\x10\t\x12\x1a\n\x16GRPC_RESPONSE_MESSAGES\x10\nB\x0e\n\x0cmetric_match\"\x91\x04\n\x10MetricsOverrides\x12>\n\x05match\x18\x01 \x01(\x0b\x32(.istio.telemetry.v1alpha1.MetricSelectorR\x05match\x12\x36\n\x08\x64isabled\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.BoolValueR\x08\x64isabled\x12\x61\n\rtag_overrides\x18\x03 \x03(\x0b\x32<.istio.telemetry.v1alpha1.MetricsOverrides.TagOverridesEntryR\x0ctagOverrides\x1a\xa8\x01\n\x0bTagOverride\x12^\n\toperation\x18\x01 \x01(\x0e\x32@.istio.telemetry.v1alpha1.MetricsOverrides.TagOverride.OperationR\toperation\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value\"#\n\tOperation\x12\n\n\x06UPSERT\x10\x00\x12\n\n\x06REMOVE\x10\x01\x1aw\n\x11TagOverridesEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12L\n\x05value\x18\x02 \x01(\x0b\x32\x36.istio.telemetry.v1alpha1.MetricsOverrides.TagOverrideR\x05value:\x02\x38\x01\"\xfe\x01\n\rAccessLogging\x12\x43\n\tproviders\x18\x01 \x03(\x0b\x32%.istio.telemetry.v1alpha1.ProviderRefR\tproviders\x12\x36\n\x08\x64isabled\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.BoolValueR\x08\x64isabled\x12\x46\n\x06\x66ilter\x18\x03 \x01(\x0b\x32..istio.telemetry.v1alpha1.AccessLogging.FilterR\x06\x66ilter\x1a(\n\x06\x46ilter\x12\x1e\n\nexpression\x18\x01 \x01(\tR\nexpression*=\n\x0cWorkloadMode\x12\x15\n\x11\x43LIENT_AND_SERVER\x10\x00\x12\n\n\x06\x43LIENT\x10\x01\x12\n\n\x06SERVER\x10\x02\x42!Z\x1fistio.io/api/telemetry/v1alpha1b\x06proto3')

_WORKLOADMODE = DESCRIPTOR.enum_types_by_name['WorkloadMode']
WorkloadMode = enum_type_wrapper.EnumTypeWrapper(_WORKLOADMODE)
CLIENT_AND_SERVER = 0
CLIENT = 1
SERVER = 2


_TELEMETRY = DESCRIPTOR.message_types_by_name['Telemetry']
_TRACING = DESCRIPTOR.message_types_by_name['Tracing']
_TRACING_CUSTOMTAG = _TRACING.nested_types_by_name['CustomTag']
_TRACING_LITERAL = _TRACING.nested_types_by_name['Literal']
_TRACING_ENVIRONMENT = _TRACING.nested_types_by_name['Environment']
_TRACING_REQUESTHEADER = _TRACING.nested_types_by_name['RequestHeader']
_TRACING_CUSTOMTAGSENTRY = _TRACING.nested_types_by_name['CustomTagsEntry']
_PROVIDERREF = DESCRIPTOR.message_types_by_name['ProviderRef']
_METRICS = DESCRIPTOR.message_types_by_name['Metrics']
_METRICSELECTOR = DESCRIPTOR.message_types_by_name['MetricSelector']
_METRICSOVERRIDES = DESCRIPTOR.message_types_by_name['MetricsOverrides']
_METRICSOVERRIDES_TAGOVERRIDE = _METRICSOVERRIDES.nested_types_by_name['TagOverride']
_METRICSOVERRIDES_TAGOVERRIDESENTRY = _METRICSOVERRIDES.nested_types_by_name['TagOverridesEntry']
_ACCESSLOGGING = DESCRIPTOR.message_types_by_name['AccessLogging']
_ACCESSLOGGING_FILTER = _ACCESSLOGGING.nested_types_by_name['Filter']
_METRICSELECTOR_ISTIOMETRIC = _METRICSELECTOR.enum_types_by_name['IstioMetric']
_METRICSOVERRIDES_TAGOVERRIDE_OPERATION = _METRICSOVERRIDES_TAGOVERRIDE.enum_types_by_name['Operation']
Telemetry = _reflection.GeneratedProtocolMessageType('Telemetry', (_message.Message,), {
  'DESCRIPTOR' : _TELEMETRY,
  '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
  # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.Telemetry)
  })
_sym_db.RegisterMessage(Telemetry)

Tracing = _reflection.GeneratedProtocolMessageType('Tracing', (_message.Message,), {

  'CustomTag' : _reflection.GeneratedProtocolMessageType('CustomTag', (_message.Message,), {
    'DESCRIPTOR' : _TRACING_CUSTOMTAG,
    '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
    # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.Tracing.CustomTag)
    })
  ,

  'Literal' : _reflection.GeneratedProtocolMessageType('Literal', (_message.Message,), {
    'DESCRIPTOR' : _TRACING_LITERAL,
    '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
    # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.Tracing.Literal)
    })
  ,

  'Environment' : _reflection.GeneratedProtocolMessageType('Environment', (_message.Message,), {
    'DESCRIPTOR' : _TRACING_ENVIRONMENT,
    '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
    # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.Tracing.Environment)
    })
  ,

  'RequestHeader' : _reflection.GeneratedProtocolMessageType('RequestHeader', (_message.Message,), {
    'DESCRIPTOR' : _TRACING_REQUESTHEADER,
    '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
    # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.Tracing.RequestHeader)
    })
  ,

  'CustomTagsEntry' : _reflection.GeneratedProtocolMessageType('CustomTagsEntry', (_message.Message,), {
    'DESCRIPTOR' : _TRACING_CUSTOMTAGSENTRY,
    '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
    # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.Tracing.CustomTagsEntry)
    })
  ,
  'DESCRIPTOR' : _TRACING,
  '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
  # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.Tracing)
  })
_sym_db.RegisterMessage(Tracing)
_sym_db.RegisterMessage(Tracing.CustomTag)
_sym_db.RegisterMessage(Tracing.Literal)
_sym_db.RegisterMessage(Tracing.Environment)
_sym_db.RegisterMessage(Tracing.RequestHeader)
_sym_db.RegisterMessage(Tracing.CustomTagsEntry)

ProviderRef = _reflection.GeneratedProtocolMessageType('ProviderRef', (_message.Message,), {
  'DESCRIPTOR' : _PROVIDERREF,
  '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
  # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.ProviderRef)
  })
_sym_db.RegisterMessage(ProviderRef)

Metrics = _reflection.GeneratedProtocolMessageType('Metrics', (_message.Message,), {
  'DESCRIPTOR' : _METRICS,
  '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
  # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.Metrics)
  })
_sym_db.RegisterMessage(Metrics)

MetricSelector = _reflection.GeneratedProtocolMessageType('MetricSelector', (_message.Message,), {
  'DESCRIPTOR' : _METRICSELECTOR,
  '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
  # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.MetricSelector)
  })
_sym_db.RegisterMessage(MetricSelector)

MetricsOverrides = _reflection.GeneratedProtocolMessageType('MetricsOverrides', (_message.Message,), {

  'TagOverride' : _reflection.GeneratedProtocolMessageType('TagOverride', (_message.Message,), {
    'DESCRIPTOR' : _METRICSOVERRIDES_TAGOVERRIDE,
    '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
    # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.MetricsOverrides.TagOverride)
    })
  ,

  'TagOverridesEntry' : _reflection.GeneratedProtocolMessageType('TagOverridesEntry', (_message.Message,), {
    'DESCRIPTOR' : _METRICSOVERRIDES_TAGOVERRIDESENTRY,
    '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
    # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.MetricsOverrides.TagOverridesEntry)
    })
  ,
  'DESCRIPTOR' : _METRICSOVERRIDES,
  '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
  # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.MetricsOverrides)
  })
_sym_db.RegisterMessage(MetricsOverrides)
_sym_db.RegisterMessage(MetricsOverrides.TagOverride)
_sym_db.RegisterMessage(MetricsOverrides.TagOverridesEntry)

AccessLogging = _reflection.GeneratedProtocolMessageType('AccessLogging', (_message.Message,), {

  'Filter' : _reflection.GeneratedProtocolMessageType('Filter', (_message.Message,), {
    'DESCRIPTOR' : _ACCESSLOGGING_FILTER,
    '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
    # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.AccessLogging.Filter)
    })
  ,
  'DESCRIPTOR' : _ACCESSLOGGING,
  '__module__' : 'telemetry.v1alpha1.telemetry_pb2'
  # @@protoc_insertion_point(class_scope:istio.telemetry.v1alpha1.AccessLogging)
  })
_sym_db.RegisterMessage(AccessLogging)
_sym_db.RegisterMessage(AccessLogging.Filter)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\037istio.io/api/telemetry/v1alpha1'
  _TRACING_CUSTOMTAGSENTRY._options = None
  _TRACING_CUSTOMTAGSENTRY._serialized_options = b'8\001'
  _METRICSOVERRIDES_TAGOVERRIDESENTRY._options = None
  _METRICSOVERRIDES_TAGOVERRIDESENTRY._serialized_options = b'8\001'
  _WORKLOADMODE._serialized_start=2844
  _WORKLOADMODE._serialized_end=2905
  _TELEMETRY._serialized_start=126
  _TELEMETRY._serialized_end=405
  _TRACING._serialized_start=408
  _TRACING._serialized_end=1383
  _TRACING_CUSTOMTAG._serialized_start=848
  _TRACING_CUSTOMTAG._serialized_end=1096
  _TRACING_LITERAL._serialized_start=1098
  _TRACING_LITERAL._serialized_end=1129
  _TRACING_ENVIRONMENT._serialized_start=1131
  _TRACING_ENVIRONMENT._serialized_end=1201
  _TRACING_REQUESTHEADER._serialized_start=1203
  _TRACING_REQUESTHEADER._serialized_end=1275
  _TRACING_CUSTOMTAGSENTRY._serialized_start=1277
  _TRACING_CUSTOMTAGSENTRY._serialized_end=1383
  _PROVIDERREF._serialized_start=1385
  _PROVIDERREF._serialized_end=1418
  _METRICS._serialized_start=1421
  _METRICS._serialized_end=1573
  _METRICSELECTOR._serialized_start=1576
  _METRICSELECTOR._serialized_end=2053
  _METRICSELECTOR_ISTIOMETRIC._serialized_start=1774
  _METRICSELECTOR_ISTIOMETRIC._serialized_end=2037
  _METRICSOVERRIDES._serialized_start=2056
  _METRICSOVERRIDES._serialized_end=2585
  _METRICSOVERRIDES_TAGOVERRIDE._serialized_start=2296
  _METRICSOVERRIDES_TAGOVERRIDE._serialized_end=2464
  _METRICSOVERRIDES_TAGOVERRIDE_OPERATION._serialized_start=2429
  _METRICSOVERRIDES_TAGOVERRIDE_OPERATION._serialized_end=2464
  _METRICSOVERRIDES_TAGOVERRIDESENTRY._serialized_start=2466
  _METRICSOVERRIDES_TAGOVERRIDESENTRY._serialized_end=2585
  _ACCESSLOGGING._serialized_start=2588
  _ACCESSLOGGING._serialized_end=2842
  _ACCESSLOGGING_FILTER._serialized_start=2802
  _ACCESSLOGGING_FILTER._serialized_end=2842
# @@protoc_insertion_point(module_scope)
