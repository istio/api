# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: networking/v1alpha3/virtual_service.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import field_behavior_pb2 as google_dot_api_dot_field__behavior__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n)networking/v1alpha3/virtual_service.proto\x12\x19istio.networking.v1alpha3\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\x87\x02\n\x0eVirtualService\x12\x14\n\x05hosts\x18\x01 \x03(\tR\x05hosts\x12\x1a\n\x08gateways\x18\x02 \x03(\tR\x08gateways\x12\x38\n\x04http\x18\x03 \x03(\x0b\x32$.istio.networking.v1alpha3.HTTPRouteR\x04http\x12\x35\n\x03tls\x18\x05 \x03(\x0b\x32#.istio.networking.v1alpha3.TLSRouteR\x03tls\x12\x35\n\x03tcp\x18\x04 \x03(\x0b\x32#.istio.networking.v1alpha3.TCPRouteR\x03tcp\x12\x1b\n\texport_to\x18\x06 \x03(\tR\x08\x65xportTo\"|\n\x0b\x44\x65stination\x12\x18\n\x04host\x18\x01 \x01(\tB\x04\xe2\x41\x01\x02R\x04host\x12\x16\n\x06subset\x18\x02 \x01(\tR\x06subset\x12;\n\x04port\x18\x03 \x01(\x0b\x32\'.istio.networking.v1alpha3.PortSelectorR\x04port\"\x9c\x08\n\tHTTPRoute\x12\x12\n\x04name\x18\x11 \x01(\tR\x04name\x12\x41\n\x05match\x18\x01 \x03(\x0b\x32+.istio.networking.v1alpha3.HTTPMatchRequestR\x05match\x12\x45\n\x05route\x18\x02 \x03(\x0b\x32/.istio.networking.v1alpha3.HTTPRouteDestinationR\x05route\x12\x43\n\x08redirect\x18\x03 \x01(\x0b\x32\'.istio.networking.v1alpha3.HTTPRedirectR\x08redirect\x12?\n\x08\x64\x65legate\x18\x14 \x01(\x0b\x32#.istio.networking.v1alpha3.DelegateR\x08\x64\x65legate\x12@\n\x07rewrite\x18\x04 \x01(\x0b\x32&.istio.networking.v1alpha3.HTTPRewriteR\x07rewrite\x12\x33\n\x07timeout\x18\x06 \x01(\x0b\x32\x19.google.protobuf.DurationR\x07timeout\x12>\n\x07retries\x18\x07 \x01(\x0b\x32$.istio.networking.v1alpha3.HTTPRetryR\x07retries\x12\x43\n\x05\x66\x61ult\x18\x08 \x01(\x0b\x32-.istio.networking.v1alpha3.HTTPFaultInjectionR\x05\x66\x61ult\x12>\n\x06mirror\x18\t \x01(\x0b\x32&.istio.networking.v1alpha3.DestinationR\x06mirror\x12G\n\x0emirror_percent\x18\x12 \x01(\x0b\x32\x1c.google.protobuf.UInt32ValueB\x02\x18\x01R\rmirrorPercent\x12O\n\x11mirror_percentage\x18\x13 \x01(\x0b\x32\".istio.networking.v1alpha3.PercentR\x10mirrorPercentage\x12\x46\n\x0b\x63ors_policy\x18\n \x01(\x0b\x32%.istio.networking.v1alpha3.CorsPolicyR\ncorsPolicy\x12<\n\x07headers\x18\x10 \x01(\x0b\x32\".istio.networking.v1alpha3.HeadersR\x07headersJ\x04\x08\x05\x10\x06J\x04\x08\x0b\x10\x10R\x11websocket_upgradeR\x0e\x61ppend_headersR\x17remove_response_headersR\x17\x61ppend_response_headersR\x16remove_request_headersR\x16\x61ppend_request_headers\"<\n\x08\x44\x65legate\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n\tnamespace\x18\x02 \x01(\tR\tnamespace\"\xe6\x03\n\x07Headers\x12M\n\x07request\x18\x01 \x01(\x0b\x32\x33.istio.networking.v1alpha3.Headers.HeaderOperationsR\x07request\x12O\n\x08response\x18\x02 \x01(\x0b\x32\x33.istio.networking.v1alpha3.Headers.HeaderOperationsR\x08response\x1a\xba\x02\n\x10HeaderOperations\x12N\n\x03set\x18\x01 \x03(\x0b\x32<.istio.networking.v1alpha3.Headers.HeaderOperations.SetEntryR\x03set\x12N\n\x03\x61\x64\x64\x18\x02 \x03(\x0b\x32<.istio.networking.v1alpha3.Headers.HeaderOperations.AddEntryR\x03\x61\x64\x64\x12\x16\n\x06remove\x18\x03 \x03(\tR\x06remove\x1a\x36\n\x08SetEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x1a\x36\n\x08\x41\x64\x64\x45ntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\"\x98\x01\n\x08TLSRoute\x12I\n\x05match\x18\x01 \x03(\x0b\x32-.istio.networking.v1alpha3.TLSMatchAttributesB\x04\xe2\x41\x01\x02R\x05match\x12\x41\n\x05route\x18\x02 \x03(\x0b\x32+.istio.networking.v1alpha3.RouteDestinationR\x05route\"\x91\x01\n\x08TCPRoute\x12\x42\n\x05match\x18\x01 \x03(\x0b\x32,.istio.networking.v1alpha3.L4MatchAttributesR\x05match\x12\x41\n\x05route\x18\x02 \x03(\x0b\x32+.istio.networking.v1alpha3.RouteDestinationR\x05route\"\xa4\t\n\x10HTTPMatchRequest\x12\x12\n\x04name\x18\x0b \x01(\tR\x04name\x12\x38\n\x03uri\x18\x01 \x01(\x0b\x32&.istio.networking.v1alpha3.StringMatchR\x03uri\x12>\n\x06scheme\x18\x02 \x01(\x0b\x32&.istio.networking.v1alpha3.StringMatchR\x06scheme\x12>\n\x06method\x18\x03 \x01(\x0b\x32&.istio.networking.v1alpha3.StringMatchR\x06method\x12\x44\n\tauthority\x18\x04 \x01(\x0b\x32&.istio.networking.v1alpha3.StringMatchR\tauthority\x12R\n\x07headers\x18\x05 \x03(\x0b\x32\x38.istio.networking.v1alpha3.HTTPMatchRequest.HeadersEntryR\x07headers\x12\x12\n\x04port\x18\x06 \x01(\rR\x04port\x12\x62\n\rsource_labels\x18\x07 \x03(\x0b\x32=.istio.networking.v1alpha3.HTTPMatchRequest.SourceLabelsEntryR\x0csourceLabels\x12\x1a\n\x08gateways\x18\x08 \x03(\tR\x08gateways\x12_\n\x0cquery_params\x18\t \x03(\x0b\x32<.istio.networking.v1alpha3.HTTPMatchRequest.QueryParamsEntryR\x0bqueryParams\x12&\n\x0fignore_uri_case\x18\n \x01(\x08R\rignoreUriCase\x12h\n\x0fwithout_headers\x18\x0c \x03(\x0b\x32?.istio.networking.v1alpha3.HTTPMatchRequest.WithoutHeadersEntryR\x0ewithoutHeaders\x12)\n\x10source_namespace\x18\r \x01(\tR\x0fsourceNamespace\x1a\x62\n\x0cHeadersEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12<\n\x05value\x18\x02 \x01(\x0b\x32&.istio.networking.v1alpha3.StringMatchR\x05value:\x02\x38\x01\x1a?\n\x11SourceLabelsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x1a\x66\n\x10QueryParamsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12<\n\x05value\x18\x02 \x01(\x0b\x32&.istio.networking.v1alpha3.StringMatchR\x05value:\x02\x38\x01\x1ai\n\x13WithoutHeadersEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12<\n\x05value\x18\x02 \x01(\x0b\x32&.istio.networking.v1alpha3.StringMatchR\x05value:\x02\x38\x01\"\xa4\x02\n\x14HTTPRouteDestination\x12N\n\x0b\x64\x65stination\x18\x01 \x01(\x0b\x32&.istio.networking.v1alpha3.DestinationB\x04\xe2\x41\x01\x02R\x0b\x64\x65stination\x12\x16\n\x06weight\x18\x02 \x01(\x05R\x06weight\x12<\n\x07headers\x18\x07 \x01(\x0b\x32\".istio.networking.v1alpha3.HeadersR\x07headersJ\x04\x08\x03\x10\x07R\x17remove_response_headersR\x17\x61ppend_response_headersR\x16remove_request_headersR\x16\x61ppend_request_headers\"z\n\x10RouteDestination\x12N\n\x0b\x64\x65stination\x18\x01 \x01(\x0b\x32&.istio.networking.v1alpha3.DestinationB\x04\xe2\x41\x01\x02R\x0b\x64\x65stination\x12\x16\n\x06weight\x18\x02 \x01(\x05R\x06weight\"\xea\x02\n\x11L4MatchAttributes\x12/\n\x13\x64\x65stination_subnets\x18\x01 \x03(\tR\x12\x64\x65stinationSubnets\x12\x12\n\x04port\x18\x02 \x01(\rR\x04port\x12#\n\rsource_subnet\x18\x03 \x01(\tR\x0csourceSubnet\x12\x63\n\rsource_labels\x18\x04 \x03(\x0b\x32>.istio.networking.v1alpha3.L4MatchAttributes.SourceLabelsEntryR\x0csourceLabels\x12\x1a\n\x08gateways\x18\x05 \x03(\tR\x08gateways\x12)\n\x10source_namespace\x18\x06 \x01(\tR\x0fsourceNamespace\x1a?\n\x11SourceLabelsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\"\xff\x02\n\x12TLSMatchAttributes\x12!\n\tsni_hosts\x18\x01 \x03(\tB\x04\xe2\x41\x01\x02R\x08sniHosts\x12/\n\x13\x64\x65stination_subnets\x18\x02 \x03(\tR\x12\x64\x65stinationSubnets\x12\x12\n\x04port\x18\x03 \x01(\rR\x04port\x12\x64\n\rsource_labels\x18\x05 \x03(\x0b\x32?.istio.networking.v1alpha3.TLSMatchAttributes.SourceLabelsEntryR\x0csourceLabels\x12\x1a\n\x08gateways\x18\x06 \x03(\tR\x08gateways\x12)\n\x10source_namespace\x18\x07 \x01(\tR\x0fsourceNamespace\x1a?\n\x11SourceLabelsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01J\x04\x08\x04\x10\x05R\rsource_subnet\"\xcf\x02\n\x0cHTTPRedirect\x12\x10\n\x03uri\x18\x01 \x01(\tR\x03uri\x12\x1c\n\tauthority\x18\x02 \x01(\tR\tauthority\x12\x14\n\x04port\x18\x04 \x01(\rH\x00R\x04port\x12`\n\x0b\x64\x65rive_port\x18\x05 \x01(\x0e\x32=.istio.networking.v1alpha3.HTTPRedirect.RedirectPortSelectionH\x00R\nderivePort\x12\x16\n\x06scheme\x18\x06 \x01(\tR\x06scheme\x12#\n\rredirect_code\x18\x03 \x01(\rR\x0credirectCode\"I\n\x15RedirectPortSelection\x12\x19\n\x15\x46ROM_PROTOCOL_DEFAULT\x10\x00\x12\x15\n\x11\x46ROM_REQUEST_PORT\x10\x01\x42\x0f\n\rredirect_port\"=\n\x0bHTTPRewrite\x12\x10\n\x03uri\x18\x01 \x01(\tR\x03uri\x12\x1c\n\tauthority\x18\x02 \x01(\tR\tauthority\"e\n\x0bStringMatch\x12\x16\n\x05\x65xact\x18\x01 \x01(\tH\x00R\x05\x65xact\x12\x18\n\x06prefix\x18\x02 \x01(\tH\x00R\x06prefix\x12\x16\n\x05regex\x18\x03 \x01(\tH\x00R\x05regexB\x0c\n\nmatch_type\"\xdf\x01\n\tHTTPRetry\x12 \n\x08\x61ttempts\x18\x01 \x01(\x05\x42\x04\xe2\x41\x01\x02R\x08\x61ttempts\x12\x41\n\x0fper_try_timeout\x18\x02 \x01(\x0b\x32\x19.google.protobuf.DurationR\rperTryTimeout\x12\x19\n\x08retry_on\x18\x03 \x01(\tR\x07retryOn\x12R\n\x17retry_remote_localities\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.BoolValueR\x15retryRemoteLocalities\"\xee\x02\n\nCorsPolicy\x12%\n\x0c\x61llow_origin\x18\x01 \x03(\tB\x02\x18\x01R\x0b\x61llowOrigin\x12K\n\rallow_origins\x18\x07 \x03(\x0b\x32&.istio.networking.v1alpha3.StringMatchR\x0c\x61llowOrigins\x12#\n\rallow_methods\x18\x02 \x03(\tR\x0c\x61llowMethods\x12#\n\rallow_headers\x18\x03 \x03(\tR\x0c\x61llowHeaders\x12%\n\x0e\x65xpose_headers\x18\x04 \x03(\tR\rexposeHeaders\x12\x32\n\x07max_age\x18\x05 \x01(\x0b\x32\x19.google.protobuf.DurationR\x06maxAge\x12G\n\x11\x61llow_credentials\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.BoolValueR\x10\x61llowCredentials\"\x91\x05\n\x12HTTPFaultInjection\x12I\n\x05\x64\x65lay\x18\x01 \x01(\x0b\x32\x33.istio.networking.v1alpha3.HTTPFaultInjection.DelayR\x05\x64\x65lay\x12I\n\x05\x61\x62ort\x18\x02 \x01(\x0b\x32\x33.istio.networking.v1alpha3.HTTPFaultInjection.AbortR\x05\x61\x62ort\x1a\x8a\x02\n\x05\x44\x65lay\x12\x1c\n\x07percent\x18\x01 \x01(\x05\x42\x02\x18\x01R\x07percent\x12\x42\n\x0b\x66ixed_delay\x18\x02 \x01(\x0b\x32\x19.google.protobuf.DurationB\x04\xe2\x41\x01\x02H\x00R\nfixedDelay\x12H\n\x11\x65xponential_delay\x18\x03 \x01(\x0b\x32\x19.google.protobuf.DurationH\x00R\x10\x65xponentialDelay\x12\x42\n\npercentage\x18\x05 \x01(\x0b\x32\".istio.networking.v1alpha3.PercentR\npercentageB\x11\n\x0fhttp_delay_type\x1a\xd7\x01\n\x05\x41\x62ort\x12\'\n\x0bhttp_status\x18\x02 \x01(\x05\x42\x04\xe2\x41\x01\x02H\x00R\nhttpStatus\x12!\n\x0bgrpc_status\x18\x03 \x01(\tH\x00R\ngrpcStatus\x12!\n\x0bhttp2_error\x18\x04 \x01(\tH\x00R\nhttp2Error\x12\x42\n\npercentage\x18\x05 \x01(\x0b\x32\".istio.networking.v1alpha3.PercentR\npercentageB\x0c\n\nerror_typeJ\x04\x08\x01\x10\x02R\x07percent\"2\n\x0cPortSelector\x12\x16\n\x06number\x18\x01 \x01(\rR\x06numberJ\x04\x08\x02\x10\x03R\x04name\"\x1f\n\x07Percent\x12\x14\n\x05value\x18\x01 \x01(\x01R\x05valueB\"Z istio.io/api/networking/v1alpha3b\x06proto3')



_VIRTUALSERVICE = DESCRIPTOR.message_types_by_name['VirtualService']
_DESTINATION = DESCRIPTOR.message_types_by_name['Destination']
_HTTPROUTE = DESCRIPTOR.message_types_by_name['HTTPRoute']
_DELEGATE = DESCRIPTOR.message_types_by_name['Delegate']
_HEADERS = DESCRIPTOR.message_types_by_name['Headers']
_HEADERS_HEADEROPERATIONS = _HEADERS.nested_types_by_name['HeaderOperations']
_HEADERS_HEADEROPERATIONS_SETENTRY = _HEADERS_HEADEROPERATIONS.nested_types_by_name['SetEntry']
_HEADERS_HEADEROPERATIONS_ADDENTRY = _HEADERS_HEADEROPERATIONS.nested_types_by_name['AddEntry']
_TLSROUTE = DESCRIPTOR.message_types_by_name['TLSRoute']
_TCPROUTE = DESCRIPTOR.message_types_by_name['TCPRoute']
_HTTPMATCHREQUEST = DESCRIPTOR.message_types_by_name['HTTPMatchRequest']
_HTTPMATCHREQUEST_HEADERSENTRY = _HTTPMATCHREQUEST.nested_types_by_name['HeadersEntry']
_HTTPMATCHREQUEST_SOURCELABELSENTRY = _HTTPMATCHREQUEST.nested_types_by_name['SourceLabelsEntry']
_HTTPMATCHREQUEST_QUERYPARAMSENTRY = _HTTPMATCHREQUEST.nested_types_by_name['QueryParamsEntry']
_HTTPMATCHREQUEST_WITHOUTHEADERSENTRY = _HTTPMATCHREQUEST.nested_types_by_name['WithoutHeadersEntry']
_HTTPROUTEDESTINATION = DESCRIPTOR.message_types_by_name['HTTPRouteDestination']
_ROUTEDESTINATION = DESCRIPTOR.message_types_by_name['RouteDestination']
_L4MATCHATTRIBUTES = DESCRIPTOR.message_types_by_name['L4MatchAttributes']
_L4MATCHATTRIBUTES_SOURCELABELSENTRY = _L4MATCHATTRIBUTES.nested_types_by_name['SourceLabelsEntry']
_TLSMATCHATTRIBUTES = DESCRIPTOR.message_types_by_name['TLSMatchAttributes']
_TLSMATCHATTRIBUTES_SOURCELABELSENTRY = _TLSMATCHATTRIBUTES.nested_types_by_name['SourceLabelsEntry']
_HTTPREDIRECT = DESCRIPTOR.message_types_by_name['HTTPRedirect']
_HTTPREWRITE = DESCRIPTOR.message_types_by_name['HTTPRewrite']
_STRINGMATCH = DESCRIPTOR.message_types_by_name['StringMatch']
_HTTPRETRY = DESCRIPTOR.message_types_by_name['HTTPRetry']
_CORSPOLICY = DESCRIPTOR.message_types_by_name['CorsPolicy']
_HTTPFAULTINJECTION = DESCRIPTOR.message_types_by_name['HTTPFaultInjection']
_HTTPFAULTINJECTION_DELAY = _HTTPFAULTINJECTION.nested_types_by_name['Delay']
_HTTPFAULTINJECTION_ABORT = _HTTPFAULTINJECTION.nested_types_by_name['Abort']
_PORTSELECTOR = DESCRIPTOR.message_types_by_name['PortSelector']
_PERCENT = DESCRIPTOR.message_types_by_name['Percent']
_HTTPREDIRECT_REDIRECTPORTSELECTION = _HTTPREDIRECT.enum_types_by_name['RedirectPortSelection']
VirtualService = _reflection.GeneratedProtocolMessageType('VirtualService', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALSERVICE,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.VirtualService)
  })
_sym_db.RegisterMessage(VirtualService)

Destination = _reflection.GeneratedProtocolMessageType('Destination', (_message.Message,), {
  'DESCRIPTOR' : _DESTINATION,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Destination)
  })
_sym_db.RegisterMessage(Destination)

HTTPRoute = _reflection.GeneratedProtocolMessageType('HTTPRoute', (_message.Message,), {
  'DESCRIPTOR' : _HTTPROUTE,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPRoute)
  })
_sym_db.RegisterMessage(HTTPRoute)

Delegate = _reflection.GeneratedProtocolMessageType('Delegate', (_message.Message,), {
  'DESCRIPTOR' : _DELEGATE,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Delegate)
  })
_sym_db.RegisterMessage(Delegate)

Headers = _reflection.GeneratedProtocolMessageType('Headers', (_message.Message,), {

  'HeaderOperations' : _reflection.GeneratedProtocolMessageType('HeaderOperations', (_message.Message,), {

    'SetEntry' : _reflection.GeneratedProtocolMessageType('SetEntry', (_message.Message,), {
      'DESCRIPTOR' : _HEADERS_HEADEROPERATIONS_SETENTRY,
      '__module__' : 'networking.v1alpha3.virtual_service_pb2'
      # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Headers.HeaderOperations.SetEntry)
      })
    ,

    'AddEntry' : _reflection.GeneratedProtocolMessageType('AddEntry', (_message.Message,), {
      'DESCRIPTOR' : _HEADERS_HEADEROPERATIONS_ADDENTRY,
      '__module__' : 'networking.v1alpha3.virtual_service_pb2'
      # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Headers.HeaderOperations.AddEntry)
      })
    ,
    'DESCRIPTOR' : _HEADERS_HEADEROPERATIONS,
    '__module__' : 'networking.v1alpha3.virtual_service_pb2'
    # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Headers.HeaderOperations)
    })
  ,
  'DESCRIPTOR' : _HEADERS,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Headers)
  })
_sym_db.RegisterMessage(Headers)
_sym_db.RegisterMessage(Headers.HeaderOperations)
_sym_db.RegisterMessage(Headers.HeaderOperations.SetEntry)
_sym_db.RegisterMessage(Headers.HeaderOperations.AddEntry)

TLSRoute = _reflection.GeneratedProtocolMessageType('TLSRoute', (_message.Message,), {
  'DESCRIPTOR' : _TLSROUTE,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.TLSRoute)
  })
_sym_db.RegisterMessage(TLSRoute)

TCPRoute = _reflection.GeneratedProtocolMessageType('TCPRoute', (_message.Message,), {
  'DESCRIPTOR' : _TCPROUTE,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.TCPRoute)
  })
_sym_db.RegisterMessage(TCPRoute)

HTTPMatchRequest = _reflection.GeneratedProtocolMessageType('HTTPMatchRequest', (_message.Message,), {

  'HeadersEntry' : _reflection.GeneratedProtocolMessageType('HeadersEntry', (_message.Message,), {
    'DESCRIPTOR' : _HTTPMATCHREQUEST_HEADERSENTRY,
    '__module__' : 'networking.v1alpha3.virtual_service_pb2'
    # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPMatchRequest.HeadersEntry)
    })
  ,

  'SourceLabelsEntry' : _reflection.GeneratedProtocolMessageType('SourceLabelsEntry', (_message.Message,), {
    'DESCRIPTOR' : _HTTPMATCHREQUEST_SOURCELABELSENTRY,
    '__module__' : 'networking.v1alpha3.virtual_service_pb2'
    # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPMatchRequest.SourceLabelsEntry)
    })
  ,

  'QueryParamsEntry' : _reflection.GeneratedProtocolMessageType('QueryParamsEntry', (_message.Message,), {
    'DESCRIPTOR' : _HTTPMATCHREQUEST_QUERYPARAMSENTRY,
    '__module__' : 'networking.v1alpha3.virtual_service_pb2'
    # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPMatchRequest.QueryParamsEntry)
    })
  ,

  'WithoutHeadersEntry' : _reflection.GeneratedProtocolMessageType('WithoutHeadersEntry', (_message.Message,), {
    'DESCRIPTOR' : _HTTPMATCHREQUEST_WITHOUTHEADERSENTRY,
    '__module__' : 'networking.v1alpha3.virtual_service_pb2'
    # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPMatchRequest.WithoutHeadersEntry)
    })
  ,
  'DESCRIPTOR' : _HTTPMATCHREQUEST,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPMatchRequest)
  })
_sym_db.RegisterMessage(HTTPMatchRequest)
_sym_db.RegisterMessage(HTTPMatchRequest.HeadersEntry)
_sym_db.RegisterMessage(HTTPMatchRequest.SourceLabelsEntry)
_sym_db.RegisterMessage(HTTPMatchRequest.QueryParamsEntry)
_sym_db.RegisterMessage(HTTPMatchRequest.WithoutHeadersEntry)

HTTPRouteDestination = _reflection.GeneratedProtocolMessageType('HTTPRouteDestination', (_message.Message,), {
  'DESCRIPTOR' : _HTTPROUTEDESTINATION,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPRouteDestination)
  })
_sym_db.RegisterMessage(HTTPRouteDestination)

RouteDestination = _reflection.GeneratedProtocolMessageType('RouteDestination', (_message.Message,), {
  'DESCRIPTOR' : _ROUTEDESTINATION,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.RouteDestination)
  })
_sym_db.RegisterMessage(RouteDestination)

L4MatchAttributes = _reflection.GeneratedProtocolMessageType('L4MatchAttributes', (_message.Message,), {

  'SourceLabelsEntry' : _reflection.GeneratedProtocolMessageType('SourceLabelsEntry', (_message.Message,), {
    'DESCRIPTOR' : _L4MATCHATTRIBUTES_SOURCELABELSENTRY,
    '__module__' : 'networking.v1alpha3.virtual_service_pb2'
    # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.L4MatchAttributes.SourceLabelsEntry)
    })
  ,
  'DESCRIPTOR' : _L4MATCHATTRIBUTES,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.L4MatchAttributes)
  })
_sym_db.RegisterMessage(L4MatchAttributes)
_sym_db.RegisterMessage(L4MatchAttributes.SourceLabelsEntry)

TLSMatchAttributes = _reflection.GeneratedProtocolMessageType('TLSMatchAttributes', (_message.Message,), {

  'SourceLabelsEntry' : _reflection.GeneratedProtocolMessageType('SourceLabelsEntry', (_message.Message,), {
    'DESCRIPTOR' : _TLSMATCHATTRIBUTES_SOURCELABELSENTRY,
    '__module__' : 'networking.v1alpha3.virtual_service_pb2'
    # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.TLSMatchAttributes.SourceLabelsEntry)
    })
  ,
  'DESCRIPTOR' : _TLSMATCHATTRIBUTES,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.TLSMatchAttributes)
  })
_sym_db.RegisterMessage(TLSMatchAttributes)
_sym_db.RegisterMessage(TLSMatchAttributes.SourceLabelsEntry)

HTTPRedirect = _reflection.GeneratedProtocolMessageType('HTTPRedirect', (_message.Message,), {
  'DESCRIPTOR' : _HTTPREDIRECT,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPRedirect)
  })
_sym_db.RegisterMessage(HTTPRedirect)

HTTPRewrite = _reflection.GeneratedProtocolMessageType('HTTPRewrite', (_message.Message,), {
  'DESCRIPTOR' : _HTTPREWRITE,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPRewrite)
  })
_sym_db.RegisterMessage(HTTPRewrite)

StringMatch = _reflection.GeneratedProtocolMessageType('StringMatch', (_message.Message,), {
  'DESCRIPTOR' : _STRINGMATCH,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.StringMatch)
  })
_sym_db.RegisterMessage(StringMatch)

HTTPRetry = _reflection.GeneratedProtocolMessageType('HTTPRetry', (_message.Message,), {
  'DESCRIPTOR' : _HTTPRETRY,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPRetry)
  })
_sym_db.RegisterMessage(HTTPRetry)

CorsPolicy = _reflection.GeneratedProtocolMessageType('CorsPolicy', (_message.Message,), {
  'DESCRIPTOR' : _CORSPOLICY,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.CorsPolicy)
  })
_sym_db.RegisterMessage(CorsPolicy)

HTTPFaultInjection = _reflection.GeneratedProtocolMessageType('HTTPFaultInjection', (_message.Message,), {

  'Delay' : _reflection.GeneratedProtocolMessageType('Delay', (_message.Message,), {
    'DESCRIPTOR' : _HTTPFAULTINJECTION_DELAY,
    '__module__' : 'networking.v1alpha3.virtual_service_pb2'
    # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPFaultInjection.Delay)
    })
  ,

  'Abort' : _reflection.GeneratedProtocolMessageType('Abort', (_message.Message,), {
    'DESCRIPTOR' : _HTTPFAULTINJECTION_ABORT,
    '__module__' : 'networking.v1alpha3.virtual_service_pb2'
    # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPFaultInjection.Abort)
    })
  ,
  'DESCRIPTOR' : _HTTPFAULTINJECTION,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPFaultInjection)
  })
_sym_db.RegisterMessage(HTTPFaultInjection)
_sym_db.RegisterMessage(HTTPFaultInjection.Delay)
_sym_db.RegisterMessage(HTTPFaultInjection.Abort)

PortSelector = _reflection.GeneratedProtocolMessageType('PortSelector', (_message.Message,), {
  'DESCRIPTOR' : _PORTSELECTOR,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.PortSelector)
  })
_sym_db.RegisterMessage(PortSelector)

Percent = _reflection.GeneratedProtocolMessageType('Percent', (_message.Message,), {
  'DESCRIPTOR' : _PERCENT,
  '__module__' : 'networking.v1alpha3.virtual_service_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Percent)
  })
_sym_db.RegisterMessage(Percent)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z istio.io/api/networking/v1alpha3'
  _DESTINATION.fields_by_name['host']._options = None
  _DESTINATION.fields_by_name['host']._serialized_options = b'\342A\001\002'
  _HTTPROUTE.fields_by_name['mirror_percent']._options = None
  _HTTPROUTE.fields_by_name['mirror_percent']._serialized_options = b'\030\001'
  _HEADERS_HEADEROPERATIONS_SETENTRY._options = None
  _HEADERS_HEADEROPERATIONS_SETENTRY._serialized_options = b'8\001'
  _HEADERS_HEADEROPERATIONS_ADDENTRY._options = None
  _HEADERS_HEADEROPERATIONS_ADDENTRY._serialized_options = b'8\001'
  _TLSROUTE.fields_by_name['match']._options = None
  _TLSROUTE.fields_by_name['match']._serialized_options = b'\342A\001\002'
  _HTTPMATCHREQUEST_HEADERSENTRY._options = None
  _HTTPMATCHREQUEST_HEADERSENTRY._serialized_options = b'8\001'
  _HTTPMATCHREQUEST_SOURCELABELSENTRY._options = None
  _HTTPMATCHREQUEST_SOURCELABELSENTRY._serialized_options = b'8\001'
  _HTTPMATCHREQUEST_QUERYPARAMSENTRY._options = None
  _HTTPMATCHREQUEST_QUERYPARAMSENTRY._serialized_options = b'8\001'
  _HTTPMATCHREQUEST_WITHOUTHEADERSENTRY._options = None
  _HTTPMATCHREQUEST_WITHOUTHEADERSENTRY._serialized_options = b'8\001'
  _HTTPROUTEDESTINATION.fields_by_name['destination']._options = None
  _HTTPROUTEDESTINATION.fields_by_name['destination']._serialized_options = b'\342A\001\002'
  _ROUTEDESTINATION.fields_by_name['destination']._options = None
  _ROUTEDESTINATION.fields_by_name['destination']._serialized_options = b'\342A\001\002'
  _L4MATCHATTRIBUTES_SOURCELABELSENTRY._options = None
  _L4MATCHATTRIBUTES_SOURCELABELSENTRY._serialized_options = b'8\001'
  _TLSMATCHATTRIBUTES_SOURCELABELSENTRY._options = None
  _TLSMATCHATTRIBUTES_SOURCELABELSENTRY._serialized_options = b'8\001'
  _TLSMATCHATTRIBUTES.fields_by_name['sni_hosts']._options = None
  _TLSMATCHATTRIBUTES.fields_by_name['sni_hosts']._serialized_options = b'\342A\001\002'
  _HTTPRETRY.fields_by_name['attempts']._options = None
  _HTTPRETRY.fields_by_name['attempts']._serialized_options = b'\342A\001\002'
  _CORSPOLICY.fields_by_name['allow_origin']._options = None
  _CORSPOLICY.fields_by_name['allow_origin']._serialized_options = b'\030\001'
  _HTTPFAULTINJECTION_DELAY.fields_by_name['percent']._options = None
  _HTTPFAULTINJECTION_DELAY.fields_by_name['percent']._serialized_options = b'\030\001'
  _HTTPFAULTINJECTION_DELAY.fields_by_name['fixed_delay']._options = None
  _HTTPFAULTINJECTION_DELAY.fields_by_name['fixed_delay']._serialized_options = b'\342A\001\002'
  _HTTPFAULTINJECTION_ABORT.fields_by_name['http_status']._options = None
  _HTTPFAULTINJECTION_ABORT.fields_by_name['http_status']._serialized_options = b'\342A\001\002'
  _VIRTUALSERVICE._serialized_start=170
  _VIRTUALSERVICE._serialized_end=433
  _DESTINATION._serialized_start=435
  _DESTINATION._serialized_end=559
  _HTTPROUTE._serialized_start=562
  _HTTPROUTE._serialized_end=1614
  _DELEGATE._serialized_start=1616
  _DELEGATE._serialized_end=1676
  _HEADERS._serialized_start=1679
  _HEADERS._serialized_end=2165
  _HEADERS_HEADEROPERATIONS._serialized_start=1851
  _HEADERS_HEADEROPERATIONS._serialized_end=2165
  _HEADERS_HEADEROPERATIONS_SETENTRY._serialized_start=2055
  _HEADERS_HEADEROPERATIONS_SETENTRY._serialized_end=2109
  _HEADERS_HEADEROPERATIONS_ADDENTRY._serialized_start=2111
  _HEADERS_HEADEROPERATIONS_ADDENTRY._serialized_end=2165
  _TLSROUTE._serialized_start=2168
  _TLSROUTE._serialized_end=2320
  _TCPROUTE._serialized_start=2323
  _TCPROUTE._serialized_end=2468
  _HTTPMATCHREQUEST._serialized_start=2471
  _HTTPMATCHREQUEST._serialized_end=3659
  _HTTPMATCHREQUEST_HEADERSENTRY._serialized_start=3285
  _HTTPMATCHREQUEST_HEADERSENTRY._serialized_end=3383
  _HTTPMATCHREQUEST_SOURCELABELSENTRY._serialized_start=3385
  _HTTPMATCHREQUEST_SOURCELABELSENTRY._serialized_end=3448
  _HTTPMATCHREQUEST_QUERYPARAMSENTRY._serialized_start=3450
  _HTTPMATCHREQUEST_QUERYPARAMSENTRY._serialized_end=3552
  _HTTPMATCHREQUEST_WITHOUTHEADERSENTRY._serialized_start=3554
  _HTTPMATCHREQUEST_WITHOUTHEADERSENTRY._serialized_end=3659
  _HTTPROUTEDESTINATION._serialized_start=3662
  _HTTPROUTEDESTINATION._serialized_end=3954
  _ROUTEDESTINATION._serialized_start=3956
  _ROUTEDESTINATION._serialized_end=4078
  _L4MATCHATTRIBUTES._serialized_start=4081
  _L4MATCHATTRIBUTES._serialized_end=4443
  _L4MATCHATTRIBUTES_SOURCELABELSENTRY._serialized_start=3385
  _L4MATCHATTRIBUTES_SOURCELABELSENTRY._serialized_end=3448
  _TLSMATCHATTRIBUTES._serialized_start=4446
  _TLSMATCHATTRIBUTES._serialized_end=4829
  _TLSMATCHATTRIBUTES_SOURCELABELSENTRY._serialized_start=3385
  _TLSMATCHATTRIBUTES_SOURCELABELSENTRY._serialized_end=3448
  _HTTPREDIRECT._serialized_start=4832
  _HTTPREDIRECT._serialized_end=5167
  _HTTPREDIRECT_REDIRECTPORTSELECTION._serialized_start=5077
  _HTTPREDIRECT_REDIRECTPORTSELECTION._serialized_end=5150
  _HTTPREWRITE._serialized_start=5169
  _HTTPREWRITE._serialized_end=5230
  _STRINGMATCH._serialized_start=5232
  _STRINGMATCH._serialized_end=5333
  _HTTPRETRY._serialized_start=5336
  _HTTPRETRY._serialized_end=5559
  _CORSPOLICY._serialized_start=5562
  _CORSPOLICY._serialized_end=5928
  _HTTPFAULTINJECTION._serialized_start=5931
  _HTTPFAULTINJECTION._serialized_end=6588
  _HTTPFAULTINJECTION_DELAY._serialized_start=6104
  _HTTPFAULTINJECTION_DELAY._serialized_end=6370
  _HTTPFAULTINJECTION_ABORT._serialized_start=6373
  _HTTPFAULTINJECTION_ABORT._serialized_end=6588
  _PORTSELECTOR._serialized_start=6590
  _PORTSELECTOR._serialized_end=6640
  _PERCENT._serialized_start=6642
  _PERCENT._serialized_end=6673
# @@protoc_insertion_point(module_scope)
