# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: networking/v1alpha3/sidecar.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from networking.v1alpha3 import gateway_pb2 as networking_dot_v1alpha3_dot_gateway__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='networking/v1alpha3/sidecar.proto',
  package='istio.networking.v1alpha3',
  syntax='proto3',
  serialized_pb=_b('\n!networking/v1alpha3/sidecar.proto\x12\x19istio.networking.v1alpha3\x1a!networking/v1alpha3/gateway.proto\"\xc6\x01\n\x07Sidecar\x12\x46\n\x11workload_selector\x18\x01 \x01(\x0b\x32+.istio.networking.v1alpha3.WorkloadSelector\x12\x39\n\x07ingress\x18\x02 \x03(\x0b\x32(.istio.networking.v1alpha3.IstioListener\x12\x38\n\x06\x65gress\x18\x03 \x03(\x0b\x32(.istio.networking.v1alpha3.IstioListener\"\xa1\x01\n\rIstioListener\x12\x0c\n\x04name\x18\x01 \x01(\t\x12-\n\x04port\x18\x02 \x01(\x0b\x32\x1f.istio.networking.v1alpha3.Port\x12\x14\n\x0c\x62ind_address\x18\x03 \x01(\t\x12\x14\n\x0c\x62ind_to_port\x18\x04 \x01(\x08\x12\r\n\x05hosts\x18\x05 \x03(\t\x12\x18\n\x10\x64\x65\x66\x61ult_endpoint\x18\x06 \x01(\t*&\n\x0b\x43onfigScope\x12\n\n\x06PUBLIC\x10\x00\x12\x0b\n\x07PRIVATE\x10\x01\x42\"Z istio.io/api/networking/v1alpha3b\x06proto3')
  ,
  dependencies=[networking_dot_v1alpha3_dot_gateway__pb2.DESCRIPTOR,])

_CONFIGSCOPE = _descriptor.EnumDescriptor(
  name='ConfigScope',
  full_name='istio.networking.v1alpha3.ConfigScope',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PUBLIC', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PRIVATE', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=464,
  serialized_end=502,
)
_sym_db.RegisterEnumDescriptor(_CONFIGSCOPE)

ConfigScope = enum_type_wrapper.EnumTypeWrapper(_CONFIGSCOPE)
PUBLIC = 0
PRIVATE = 1



_SIDECAR = _descriptor.Descriptor(
  name='Sidecar',
  full_name='istio.networking.v1alpha3.Sidecar',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='workload_selector', full_name='istio.networking.v1alpha3.Sidecar.workload_selector', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ingress', full_name='istio.networking.v1alpha3.Sidecar.ingress', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='egress', full_name='istio.networking.v1alpha3.Sidecar.egress', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=100,
  serialized_end=298,
)


_ISTIOLISTENER = _descriptor.Descriptor(
  name='IstioListener',
  full_name='istio.networking.v1alpha3.IstioListener',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='istio.networking.v1alpha3.IstioListener.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='port', full_name='istio.networking.v1alpha3.IstioListener.port', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bind_address', full_name='istio.networking.v1alpha3.IstioListener.bind_address', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bind_to_port', full_name='istio.networking.v1alpha3.IstioListener.bind_to_port', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hosts', full_name='istio.networking.v1alpha3.IstioListener.hosts', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='default_endpoint', full_name='istio.networking.v1alpha3.IstioListener.default_endpoint', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=301,
  serialized_end=462,
)

_SIDECAR.fields_by_name['workload_selector'].message_type = networking_dot_v1alpha3_dot_gateway__pb2._WORKLOADSELECTOR
_SIDECAR.fields_by_name['ingress'].message_type = _ISTIOLISTENER
_SIDECAR.fields_by_name['egress'].message_type = _ISTIOLISTENER
_ISTIOLISTENER.fields_by_name['port'].message_type = networking_dot_v1alpha3_dot_gateway__pb2._PORT
DESCRIPTOR.message_types_by_name['Sidecar'] = _SIDECAR
DESCRIPTOR.message_types_by_name['IstioListener'] = _ISTIOLISTENER
DESCRIPTOR.enum_types_by_name['ConfigScope'] = _CONFIGSCOPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Sidecar = _reflection.GeneratedProtocolMessageType('Sidecar', (_message.Message,), dict(
  DESCRIPTOR = _SIDECAR,
  __module__ = 'networking.v1alpha3.sidecar_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Sidecar)
  ))
_sym_db.RegisterMessage(Sidecar)

IstioListener = _reflection.GeneratedProtocolMessageType('IstioListener', (_message.Message,), dict(
  DESCRIPTOR = _ISTIOLISTENER,
  __module__ = 'networking.v1alpha3.sidecar_pb2'
  # @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.IstioListener)
  ))
_sym_db.RegisterMessage(IstioListener)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z istio.io/api/networking/v1alpha3'))
# @@protoc_insertion_point(module_scope)
