// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package istio.mixer.v1;

import "mixer/api/v1/check.proto";
import "mixer/api/v1/report.proto";
import "mixer/api/v1/quota.proto";

// The Istio Mixer API
service Mixer {
    // Checks preconditions before performing an operation.
    // The preconditions enforced depend on the set of supplied attributes
    // and the active configuration.
    rpc Check (CheckRequest) returns (CheckResponse) {
    }

    // Reports telemetry, such as logs and metrics.
    // The reported information depends on the set of supplied attributes
    // and the active configuration.
    rpc Report (ReportRequest) returns (ReportResponse) {
    }

    // Quota allocates and releases quota.
    rpc Quota (QuotaRequest) returns (QuotaResponse) {
    }

    // WARNING: The Streaming* RPCs are considering EXPERIMENTAL and are not
    // supported at this time.

    // EXPERIMENTAL: DO NOT USE
    // Checks preconditions before performing an operation.
    // The preconditions enforced depend on the set of supplied attributes
    // and the active configuration.
    rpc StreamingCheck (stream StreamingCheckRequest) returns (stream StreamingCheckResponse) {
    }

    // EXPERIMENTAL: DO NOT USE
    // Reports telemetry, such as logs and metrics.
    // The reported information depends on the set of supplied attributes
    // and the active configuration.
    rpc StreamingReport (stream StreamingReportRequest) returns (stream StreamingReportResponse) {
    }

    // EXPERIMENTAL: DO NOT USE
    // Quota allocates and releases quota.
    rpc StreamingQuota (stream StreamingQuotaRequest) returns (stream StreamingQuotaResponse) {
    }
}
