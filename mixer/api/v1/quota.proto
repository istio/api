// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package istio.mixer.v1;

import "google/rpc/status.proto";
import "mixer/api/v1/attributes.proto";

message QuotaRequest {
  // Index within the stream for this request, used to match to responses
  int64 request_index = 1;

  // The attributes to use for this request
  Attributes attribute_update = 2;

  // what kind of quota operation to perform
  OperationKind kind = 3;

  // Used for deduplicating quota allocation/free calls in the case of
  // failed RPCs are retries. This should be a UUID per call, where the same
  // UUID is used for retries of the same quota allocation or release call.
  string deduplication_id = 4;

  enum OperationKind {
    QUOTA_MODE_UNSPECIFIED = 0;

    // Allocate the specified amount, fail if insufficient resources available.
    ALLOC_NORMAL = 1;

    // Allocate from 0 to the specified amount, never fails.
    ALLOC_BEST_EFFORT = 2;

    // Release from 0 to the specified amount, never fails.
    RELEASE_BEST_EFFORT = 3;

    // Return the current content of the quota value cell.
    QUERY = 4;
  }
}

// Used to update quota values before and/or after performing an action.
//
// A common use case for quotas is to implement rate limits within a service.
// Quotas can also be used to impose upper limits on the number of specific
// resources exposed by a service to its consumers.
message QuotaResponse {
  // Index of the request this response is associated with
  int64 request_index = 1;

  // Results, one for each operation in the request.
  // This map is indexed by the quota_operation_id of the individual quota operations.
  oneof result {
    // The effective amount of quota
    uint64 effective_amount = 2;

    // An error indication in case the quota operation failed
    google.rpc.Status error = 3;
  }
}
