// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "mixer/descriptor/attribute_descriptor.proto";
import "mixer/descriptor/label_descriptor.proto";
import "mixer/descriptor/metric_descriptor.proto";
import "mixer/descriptor/quota_descriptor.proto";
import "mixer/descriptor/log_entry_descriptor.proto";
import "mixer/descriptor/monitored_resource_descriptor.proto";
import "mixer/descriptor/principal_descriptor.proto";

package istio.mixer.descriptor;

// Istio Definitions
// An istio definition proto message may contain some or all definition types.
// Messages are combined by runtime to form the effective definition.
// In many cases attribute definitions (vocabulary) are available as separate messages. 
// Every descriptor proto defined in this package should be represented here.
// Every proto message in definition has a unique name within the message class.
// Mixer uses a lookup api to access these definitions.
// Find(definition_name, definition_type)
message Definitions {
  // subject 
  string subject = 1;
  string revision = 2;
  // attributes form the attribute vocabulary
  // The effective vocabulary is a union of vocabulary presented by the proxy
  // and additional attributes generated by the mixer.
  repeated istio.mixer.v1.config.descriptor.AttributeDescriptor attributes = 3;
  // labels are analogous to attributes. They are externalized representation of attributes used by aspects.
  repeated istio.mixer.v1.config.descriptor.LabelDescriptor labels = 4;
  // metrics defines available metrics types.
  repeated istio.mixer.v1.config.descriptor.MetricDescriptor metrics = 5;
  // quota defines available quota types.
  repeated istio.mixer.v1.config.descriptor.QuotaDescriptor quotas = 6;
  // logEntries define available log types.
  repeated istio.mixer.v1.config.descriptor.LogEntryDescriptor logEntries = 7;
  // monitoredResources define monitored resource types.
  repeated istio.mixer.v1.config.descriptor.MonitoredResourceDescriptor monitoredResources = 8;
  // principals define principal types.
  repeated istio.mixer.v1.config.descriptor.PrincipalDescriptor principals = 9;
}
