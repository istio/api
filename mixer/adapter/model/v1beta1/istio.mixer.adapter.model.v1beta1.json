{
  "openapi": "3.0.0",
  "components": {
    "schema": {
      "istio.mixer.adapter.model.v1beta1.CheckResult": {
        "description": "Expresses the result of a precondition check.",
        "type": "object",
        "properties": {
          "validUseCount": {
            "description": "The number of uses for which this result can be considered valid.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "istio.mixer.adapter.model.v1beta1.TemplateVariety": {
        "description": "The available varieties of templates, controlling the semantics of what an adapter does with each instance.",
        "enum": [
          "TEMPLATE_VARIETY_CHECK",
          "TEMPLATE_VARIETY_REPORT",
          "TEMPLATE_VARIETY_QUOTA",
          "TEMPLATE_VARIETY_ATTRIBUTE_GENERATOR",
          "TEMPLATE_VARIETY_CHECK_WITH_OUTPUT"
        ],
        "default": "TEMPLATE_VARIETY_CHECK"
      },
      "istio.mixer.adapter.model.v1beta1.Info": {
        "description": "Info describes an adapter or a backend that wants to provide telemetry and policy functionality to Mixer as an\n out of process adapter.",
        "type": "object",
        "properties": {
          "config": {
            "description": "Base64 encoded proto descriptor of the adapter configuration.",
            "type": "string",
            "format": "string"
          },
          "description": {
            "description": "User-friendly description of the adapter.",
            "type": "string",
            "format": "string"
          },
          "name": {
            "description": "Name of the adapter. It must be an RFC 1035 compatible DNS label\n matching the `^[a-z]([-a-z0-9]*[a-z0-9])?$` regular expression.\n Name is used in Istio configuration, therefore it should be descriptive but short.\n example: denier\n Vendor adapters should use a vendor prefix.\n example: mycompany-denier",
            "type": "string",
            "format": "string"
          },
          "sessionBased": {
            "description": "True if backend has implemented the\n [InfrastructureBackend](https://github.com/istio/api/blob/master/mixer/adapter/model/v1beta1/infrastructure_backend.proto)\n service; false otherwise.\n\n If true, during configuration time, Mixer calls the `InfrastructureBackend`' rpcs\n to validate and pass the handler configuration. And during request-time, Mixer does not pass the handler\n configuration, and only passes the template-specific Instance payload using the template-specific handle service (Example\n [HandlerMetricService](https://github.com/istio/istio/blob/master/mixer/template/metric/template_handler_service.proto),\n [HandlerListEntryService](https://github.com/istio/istio/blob/master/mixer/template/logentry/template_handler_service.proto),\n [HandleQuotaService](https://github.com/istio/istio/blob/master/mixer/template/quota/template_handler_service.proto) and more).\n If `session_based` is false, Mixer does not expect backend to implement `InfrastructureBackend` service, and\n only communicates with the backends during request-time through the template-specific handle service. Without\n `InfrastructureBackend` service, Mixer passes the handler configuration on each call during request-time.",
            "type": "boolean"
          },
          "templates": {
            "description": "Names of the templates the adapter supports.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.mixer.adapter.model.v1beta1.CreateSessionRequest": {
        "description": "Request message for `CreateSession` method.",
        "type": "object",
        "required": [
          "inferredTypes"
        ],
        "properties": {
          "adapterConfig": {
            "$ref": "#/components/schema/google.protobuf.Any"
          },
          "inferredTypes": {
            "description": "Map of instance names to their template-specific inferred type.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/google.protobuf.Any"
            }
          }
        }
      },
      "istio.mixer.adapter.model.v1beta1.CreateSessionResponse": {
        "description": "Response message for `CreateSession` method.",
        "type": "object",
        "properties": {
          "sessionId": {
            "description": "Id of the created session.",
            "type": "string",
            "format": "string"
          },
          "status": {
            "$ref": "#/components/schema/google.rpc.Status"
          }
        }
      },
      "istio.mixer.adapter.model.v1beta1.ValidateRequest": {
        "description": "Request message for `Validate` method.",
        "type": "object",
        "required": [
          "inferredTypes"
        ],
        "properties": {
          "adapterConfig": {
            "$ref": "#/components/schema/google.protobuf.Any"
          },
          "inferredTypes": {
            "description": "Map of instance names to their template-specific inferred type.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/google.protobuf.Any"
            }
          }
        }
      },
      "istio.mixer.adapter.model.v1beta1.ValidateResponse": {
        "description": "Response message for `Validate` method.",
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schema/google.rpc.Status"
          }
        }
      },
      "istio.mixer.adapter.model.v1beta1.CloseSessionRequest": {
        "description": "Request message for `CloseSession` method.",
        "type": "object",
        "properties": {
          "sessionId": {
            "description": "Id of the session to be closed.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.mixer.adapter.model.v1beta1.CloseSessionResponse": {
        "description": "Response message for `CloseSession` method.",
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schema/google.rpc.Status"
          }
        }
      },
      "istio.mixer.adapter.model.v1beta1.QuotaRequest": {
        "description": "Expresses the quota allocation request.",
        "type": "object",
        "required": [
          "quotas"
        ],
        "properties": {
          "quotas": {
            "description": "The individual quotas to allocate",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams"
            }
          }
        }
      },
      "istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams": {
        "description": "parameters for a quota allocation",
        "type": "object",
        "properties": {
          "amount": {
            "description": "Amount of quota to allocate",
            "type": "integer",
            "format": "int64"
          },
          "bestEffort": {
            "description": "When true, supports returning less quota than what was requested.",
            "type": "boolean"
          }
        }
      },
      "istio.mixer.adapter.model.v1beta1.QuotaResult": {
        "description": "Expresses the result of multiple quota allocations.",
        "type": "object",
        "required": [
          "quotas"
        ],
        "properties": {
          "quotas": {
            "description": "The resulting quota, one entry per requested quota.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/istio.mixer.adapter.model.v1beta1.QuotaResult.Result"
            }
          }
        }
      },
      "istio.mixer.adapter.model.v1beta1.QuotaResult.Result": {
        "description": "Expresses the result of a quota allocation.",
        "type": "object",
        "properties": {
          "grantedAmount": {
            "description": "The amount of granted quota. When `QuotaParams.best_effort` is true, this will be \u003e= 0.\n If `QuotaParams.best_effort` is false, this will be either 0 or \u003e= `QuotaParams.amount`.",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "istio.mixer.adapter.model.v1beta1.ReportResult": {
        "description": "Expresses the result of a report call.",
        "type": "object"
      },
      "istio.mixer.adapter.model.v1beta1.Template": {
        "description": "Template provides the details of a Mixer template.",
        "type": "object",
        "properties": {
          "descriptor": {
            "description": "Base64 encoded proto descriptor of the template.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "google.protobuf.Any": {
        "type": "object",
        "properties": {
          "typeUrl": {
            "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics.",
            "type": "string",
            "format": "string"
          },
          "value": {
            "description": "Must be a valid serialized protocol buffer of the above specified type.",
            "type": "string",
            "format": "byte"
          }
        }
      },
      "google.rpc.Status": {
        "description": "The success/failure status of close session call.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of\n [google.rpc.Code][google.rpc.Code].",
            "type": "integer",
            "format": "int32"
          },
          "details": {
            "description": "A list of messages that carry the error details.  There is a common set of\n message types for APIs to use.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/google.protobuf.Any"
            }
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any\n user-facing error message should be localized and sent in the\n [google.rpc.Status.details][google.rpc.Status.details] field, or localized\n by the client.",
            "type": "string",
            "format": "string"
          }
        }
      }
    }
  }
}