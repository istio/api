// Code generated by protoc-gen-go.
// source: mixer/v1/config/descriptor/principal_descriptor.proto
// DO NOT EDIT!

package istio_mixer_v1_config_descriptor

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Defines a a security principal.
//
// A principal is described by a set of attributes.
type PrincipalDescriptor struct {
	// The name of this descriptor.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The set of attributes which are used to describe a specific security principal.
	Attributes []string `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
}

func (m *PrincipalDescriptor) Reset()                    { *m = PrincipalDescriptor{} }
func (m *PrincipalDescriptor) String() string            { return proto.CompactTextString(m) }
func (*PrincipalDescriptor) ProtoMessage()               {}
func (*PrincipalDescriptor) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *PrincipalDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PrincipalDescriptor) GetAttributes() []string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func init() {
	proto.RegisterType((*PrincipalDescriptor)(nil), "istio.mixer.v1.config.descriptor.PrincipalDescriptor")
}

func init() {
	proto.RegisterFile("mixer/v1/config/descriptor/principal_descriptor.proto", fileDescriptor5)
}

var fileDescriptor5 = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x32, 0xcd, 0xcd, 0xac, 0x48,
	0x2d, 0xd2, 0x2f, 0x33, 0xd4, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0xd7, 0x4f, 0x49, 0x2d, 0x4e,
	0x2e, 0xca, 0x2c, 0x28, 0xc9, 0x2f, 0xd2, 0x2f, 0x28, 0xca, 0xcc, 0x4b, 0xce, 0x2c, 0x48, 0xcc,
	0x89, 0x47, 0x08, 0xea, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x29, 0x64, 0x16, 0x97, 0x64, 0xe6,
	0xeb, 0x81, 0x35, 0xeb, 0x95, 0x19, 0xea, 0x41, 0x34, 0xeb, 0x21, 0xd4, 0x29, 0x79, 0x72, 0x09,
	0x07, 0xc0, 0xf4, 0xbb, 0xc0, 0x85, 0x85, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18,
	0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x39, 0x2e, 0xae, 0xc4, 0x92, 0x92, 0xa2, 0xcc,
	0xa4, 0xd2, 0x92, 0xd4, 0x62, 0x09, 0x26, 0x05, 0x66, 0x0d, 0xce, 0x20, 0x24, 0x91, 0x24, 0x36,
	0xb0, 0x9d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5f, 0xe6, 0x53, 0x13, 0xac, 0x00, 0x00,
	0x00,
}
