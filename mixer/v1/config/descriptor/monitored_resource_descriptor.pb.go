// Code generated by protoc-gen-go.
// source: mixer/v1/config/descriptor/monitored_resource_descriptor.proto
// DO NOT EDIT!

package istio_mixer_v1_config_descriptor

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// An object that describes the schema of a `MonitoredResource`. A
// `MonitoredResource` is used to define a type of resources for
// monitoring purpose. For example, the monitored resource "VM" refers
// to virtual machines, which requires 3 attributes "owner", "zone",
// "name" to uniquely identify a specific instance. When reporting
// a metric against a monitored resource, the metric attributes will
// be used to associate the right value with the right instance,
// such as memory usage of a VM.
type MonitoredResourceDescriptor struct {
	// The name of this descriptor
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// An optional detailed description of the monitored resource descriptor that might
	// be used in documentation.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// The set of attributes that are necessary to describe a specific instance of a monitored resource.
	Attributes []string `protobuf:"bytes,3,rep,name=attributes" json:"attributes,omitempty"`
}

func (m *MonitoredResourceDescriptor) Reset()                    { *m = MonitoredResourceDescriptor{} }
func (m *MonitoredResourceDescriptor) String() string            { return proto.CompactTextString(m) }
func (*MonitoredResourceDescriptor) ProtoMessage()               {}
func (*MonitoredResourceDescriptor) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *MonitoredResourceDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MonitoredResourceDescriptor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MonitoredResourceDescriptor) GetAttributes() []string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func init() {
	proto.RegisterType((*MonitoredResourceDescriptor)(nil), "istio.mixer.v1.config.descriptor.MonitoredResourceDescriptor")
}

func init() {
	proto.RegisterFile("mixer/v1/config/descriptor/monitored_resource_descriptor.proto", fileDescriptor4)
}

var fileDescriptor4 = []byte{
	// 169 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0xce, 0xbf, 0x0a, 0xc2, 0x30,
	0x10, 0xc7, 0x71, 0x6a, 0x45, 0x68, 0xdc, 0x32, 0x15, 0x04, 0x09, 0x4e, 0x9d, 0x12, 0x8a, 0xbb,
	0x93, 0xab, 0x4b, 0x5f, 0xa0, 0xf4, 0xcf, 0x29, 0x37, 0x34, 0x57, 0x2e, 0xd7, 0xe2, 0xe3, 0x0b,
	0xd1, 0xda, 0x6e, 0xe1, 0xf7, 0x0d, 0x1f, 0x4e, 0xdd, 0x06, 0x7c, 0x03, 0xbb, 0xb9, 0x74, 0x1d,
	0xf9, 0x27, 0xbe, 0x5c, 0x0f, 0xa1, 0x63, 0x1c, 0x85, 0xd8, 0x0d, 0xe4, 0x51, 0x88, 0xa1, 0xaf,
	0x19, 0x02, 0x4d, 0xdc, 0x41, 0xbd, 0x56, 0x3b, 0x32, 0x09, 0x69, 0x83, 0x41, 0x90, 0x6c, 0x54,
	0xec, 0x5c, 0xda, 0xaf, 0x62, 0xd7, 0x7f, 0x97, 0xa0, 0x4e, 0x8f, 0x05, 0xaa, 0x7e, 0xce, 0xfd,
	0x9f, 0xb5, 0x56, 0x7b, 0xdf, 0x0c, 0x90, 0x27, 0x26, 0x29, 0xb2, 0x2a, 0xbe, 0xb5, 0x51, 0xc7,
	0x05, 0x40, 0xf2, 0xf9, 0x2e, 0xa6, 0xed, 0xa4, 0xcf, 0x4a, 0x35, 0x22, 0x8c, 0xed, 0x24, 0x10,
	0xf2, 0xd4, 0xa4, 0x45, 0x56, 0x6d, 0x96, 0xf6, 0x10, 0xaf, 0xbb, 0x7e, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xa8, 0x92, 0x32, 0x39, 0xdf, 0x00, 0x00, 0x00,
}
