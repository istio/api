{
  "openapi": "3.0.1",
  "info": {
    "title": "Configuration state for the Mixer client library.",
    "version": "client"
  },
  "components": {
    "schemas": {
      "istio.mixer.v1.config.client.APIKey": {
        "description": "APIKey defines the explicit configuration for generating the `request.api_key` attribute from HTTP requests.",
        "properties": {
          "key": {
            "oneOf": [
              {
                "description": "API Key is sent as a query parameter. `query` represents the query string parameter name.",
                "type": "string"
              },
              {
                "description": "API key is sent in a request header. `header` represents the header name.",
                "type": "string"
              },
              {
                "description": "API key is sent in a [cookie](https://swagger.io/docs/specification/authentication/cookie-authentication),",
                "type": "string"
              }
            ]
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.AttributeMatch": {
        "description": "Specifies a match clause to match Istio attributes",
        "properties": {
          "clause": {
            "additionalProperties": {
              "$ref": "#/components/schemas/istio.mixer.v1.config.client.StringMatch"
            },
            "description": "Map of attribute names to StringMatch type. Each map element specifies one condition to match.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.HTTPAPISpec": {
        "description": "HTTPAPISpec defines the canonical configuration for generating API-related attributes from HTTP requests based on the method and uri templated path matches. It is sufficient for defining the API surface of a service for the purposes of API attribute generation. It is not intended to represent auth, quota, documentation, or other information commonly found in other API specifications, e.g. OpenAPI.",
        "properties": {
          "api_keys": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.APIKey"
          },
          "attributes": {
            "description": "List of attributes that are generated when *any* of the HTTP patterns match. This list typically includes the \"api.service\" and \"api.version\" attributes.",
            "properties": {
              "attributes": {
                "additionalProperties": {
                  "properties": {
                    "value": {
                      "oneOf": [
                        {
                          "description": "Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type INT64",
                          "format": "int64",
                          "type": "integer"
                        },
                        {
                          "description": "Used for values of type DOUBLE",
                          "type": "number"
                        },
                        {
                          "description": "Used for values of type BOOL",
                          "type": "boolean"
                        },
                        {
                          "description": "Used for values of type BYTES",
                          "format": "byte",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type TIMESTAMP",
                          "properties": {
                            "nanos": {
                              "description": "Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type DURATION",
                          "properties": {
                            "nanos": {
                              "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type STRING_MAP",
                          "properties": {
                            "entries": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Holds a set of name/value pairs.",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "description": "A map of attribute name to its value.",
                "type": "object"
              }
            },
            "type": "object"
          },
          "patterns": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.HTTPAPISpecPattern"
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.HTTPAPISpecBinding": {
        "description": "HTTPAPISpecBinding defines the binding between HTTPAPISpecs and one or more IstioService. For example, the following establishes a binding between the HTTPAPISpec `petstore` and service `foo` in namespace `bar`.",
        "properties": {
          "api_specs": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.HTTPAPISpecReference"
          },
          "services": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.IstioService"
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.HTTPAPISpecPattern": {
        "description": "HTTPAPISpecPattern defines a single pattern to match against incoming HTTP requests. The per-pattern list of attributes is generated if both the http_method and uri_template match. In addition, the top-level list of attributes in the HTTPAPISpec is also generated.",
        "properties": {
          "attributes": {
            "description": "List of attributes that are generated if the HTTP request matches the specified http_method and uri_template. This typically includes the \"api.operation\" attribute.",
            "properties": {
              "attributes": {
                "additionalProperties": {
                  "properties": {
                    "value": {
                      "oneOf": [
                        {
                          "description": "Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type INT64",
                          "format": "int64",
                          "type": "integer"
                        },
                        {
                          "description": "Used for values of type DOUBLE",
                          "type": "number"
                        },
                        {
                          "description": "Used for values of type BOOL",
                          "type": "boolean"
                        },
                        {
                          "description": "Used for values of type BYTES",
                          "format": "byte",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type TIMESTAMP",
                          "properties": {
                            "nanos": {
                              "description": "Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type DURATION",
                          "properties": {
                            "nanos": {
                              "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type STRING_MAP",
                          "properties": {
                            "entries": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Holds a set of name/value pairs.",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "description": "A map of attribute name to its value.",
                "type": "object"
              }
            },
            "type": "object"
          },
          "http_method": {
            "description": "HTTP request method to match against as defined by [rfc7231](https://tools.ietf.org/html/rfc7231#page-21). For example: GET, HEAD, POST, PUT, DELETE.",
            "type": "string"
          },
          "pattern": {
            "oneOf": [
              {
                "description": "URI template to match against as defined by [rfc6570](https://tools.ietf.org/html/rfc6570). For example, the following are valid URI templates:",
                "type": "string"
              },
              {
                "description": "EXPERIMENTAL:",
                "type": "string"
              }
            ]
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.HTTPAPISpecReference": {
        "description": "HTTPAPISpecReference defines a reference to an HTTPAPISpec. This is typically used for establishing bindings between an HTTPAPISpec and an IstioService. For example, the following defines an HTTPAPISpecReference for service `foo` in namespace `bar`.",
        "properties": {
          "name": {
            "description": "REQUIRED. The short name of the HTTPAPISpec. This is the resource name defined by the metadata name field.",
            "type": "string"
          },
          "namespace": {
            "description": "Optional namespace of the HTTPAPISpec. Defaults to the encompassing HTTPAPISpecBinding's metadata namespace field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.HttpClientConfig": {
        "description": "Defines the client config for HTTP.",
        "properties": {
          "default_destination_service": {
            "description": "Default destination service name if none was specified in the client request.",
            "type": "string"
          },
          "forward_attributes": {
            "description": "Default attributes to forward to upstream. This typically includes the \"source.ip\" and \"source.uid\" attributes.",
            "properties": {
              "attributes": {
                "additionalProperties": {
                  "properties": {
                    "value": {
                      "oneOf": [
                        {
                          "description": "Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type INT64",
                          "format": "int64",
                          "type": "integer"
                        },
                        {
                          "description": "Used for values of type DOUBLE",
                          "type": "number"
                        },
                        {
                          "description": "Used for values of type BOOL",
                          "type": "boolean"
                        },
                        {
                          "description": "Used for values of type BYTES",
                          "format": "byte",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type TIMESTAMP",
                          "properties": {
                            "nanos": {
                              "description": "Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type DURATION",
                          "properties": {
                            "nanos": {
                              "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type STRING_MAP",
                          "properties": {
                            "entries": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Holds a set of name/value pairs.",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "description": "A map of attribute name to its value.",
                "type": "object"
              }
            },
            "type": "object"
          },
          "mixer_attributes": {
            "description": "Default attributes to send to Mixer in both Check and Report. This typically includes \"destination.ip\" and \"destination.uid\" attributes.",
            "properties": {
              "attributes": {
                "additionalProperties": {
                  "properties": {
                    "value": {
                      "oneOf": [
                        {
                          "description": "Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type INT64",
                          "format": "int64",
                          "type": "integer"
                        },
                        {
                          "description": "Used for values of type DOUBLE",
                          "type": "number"
                        },
                        {
                          "description": "Used for values of type BOOL",
                          "type": "boolean"
                        },
                        {
                          "description": "Used for values of type BYTES",
                          "format": "byte",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type TIMESTAMP",
                          "properties": {
                            "nanos": {
                              "description": "Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type DURATION",
                          "properties": {
                            "nanos": {
                              "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type STRING_MAP",
                          "properties": {
                            "entries": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Holds a set of name/value pairs.",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "description": "A map of attribute name to its value.",
                "type": "object"
              }
            },
            "type": "object"
          },
          "service_configs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/istio.mixer.v1.config.client.ServiceConfig"
            },
            "description": "Map of control configuration indexed by destination.service. This is used to support per-service configuration for cases where a mixerclient serves multiple services.",
            "type": "object"
          },
          "transport": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.TransportConfig"
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.IstioService": {
        "description": "IstioService identifies a service and optionally service version. The FQDN of the service is composed from the name, namespace, and implementation-specific domain suffix (e.g. on Kubernetes, \"reviews\" + \"default\" + \"svc.cluster.local\" -\u003e \"reviews.default.svc.cluster.local\").",
        "properties": {
          "domain": {
            "description": "Domain suffix used to construct the service FQDN in implementations that support such specification.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional one or more labels that uniquely identify the service version.",
            "type": "object"
          },
          "name": {
            "description": "The short name of the service such as \"foo\".",
            "type": "string"
          },
          "namespace": {
            "description": "Optional namespace of the service. Defaults to value of metadata namespace field.",
            "type": "string"
          },
          "service": {
            "description": "The service FQDN.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.NetworkFailPolicy": {
        "description": "Specifies the behavior when the client is unable to connect to Mixer.",
        "properties": {
          "base_retry_wait": {
            "description": "Base time to wait between retries. Will be adjusted by exponential backoff and jitter.",
            "properties": {
              "nanos": {
                "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                "format": "int32",
                "type": "integer"
              },
              "seconds": {
                "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
                "format": "int64",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "max_retry": {
            "description": "Max retries on transport error.",
            "format": "int32",
            "type": "integer"
          },
          "max_retry_wait": {
            "description": "Max time to wait between retries.",
            "properties": {
              "nanos": {
                "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                "format": "int32",
                "type": "integer"
              },
              "seconds": {
                "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
                "format": "int64",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "policy": {
            "description": "Specifies the behavior when the client is unable to connect to Mixer.",
            "enum": [
              [
                "FAIL_OPEN",
                "FAIL_CLOSE"
              ]
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.Quota": {
        "description": "Specifies a quota to use with quota name and amount.",
        "properties": {
          "charge": {
            "description": "The quota amount to charge",
            "format": "int64",
            "type": "integer"
          },
          "quota": {
            "description": "The quota name to charge",
            "type": "string"
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.QuotaRule": {
        "description": "Specifies a rule with list of matches and list of quotas. If any clause matched, the list of quotas will be used.",
        "properties": {
          "match": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.AttributeMatch"
          },
          "quotas": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.Quota"
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.QuotaSpec": {
        "description": "Determines the quotas used for individual requests.",
        "properties": {
          "rules": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.QuotaRule"
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.QuotaSpecBinding": {
        "description": "QuotaSpecBinding defines the binding between QuotaSpecs and one or more IstioService.",
        "properties": {
          "quota_specs": {
            "description": "REQUIRED. One or more QuotaSpec references that should be mapped to the specified service(s). The aggregate collection of match conditions defined in the QuotaSpecs should not overlap.",
            "items": {
              "description": "QuotaSpecReference uniquely identifies the QuotaSpec used in the Binding.",
              "properties": {
                "name": {
                  "description": "REQUIRED. The short name of the QuotaSpec. This is the resource name defined by the metadata name field.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Optional namespace of the QuotaSpec. Defaults to the value of the metadata namespace field.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "services": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.IstioService"
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.ServiceConfig": {
        "description": "Defines the per-service client configuration.",
        "properties": {
          "disable_check_calls": {
            "description": "If true, do not call Mixer Check.",
            "type": "boolean"
          },
          "disable_report_calls": {
            "description": "If true, do not call Mixer Report.",
            "type": "boolean"
          },
          "forward_attributes": {
            "description": "Default attributes to forward to upstream. This typically includes the \"source.ip\" and \"source.uid\" attributes. In case of a per-route override, per-route attributes take precedence over the attributes supplied in the client configuration.",
            "properties": {
              "attributes": {
                "additionalProperties": {
                  "properties": {
                    "value": {
                      "oneOf": [
                        {
                          "description": "Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type INT64",
                          "format": "int64",
                          "type": "integer"
                        },
                        {
                          "description": "Used for values of type DOUBLE",
                          "type": "number"
                        },
                        {
                          "description": "Used for values of type BOOL",
                          "type": "boolean"
                        },
                        {
                          "description": "Used for values of type BYTES",
                          "format": "byte",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type TIMESTAMP",
                          "properties": {
                            "nanos": {
                              "description": "Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type DURATION",
                          "properties": {
                            "nanos": {
                              "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type STRING_MAP",
                          "properties": {
                            "entries": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Holds a set of name/value pairs.",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "description": "A map of attribute name to its value.",
                "type": "object"
              }
            },
            "type": "object"
          },
          "http_api_spec": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.HTTPAPISpec"
          },
          "mixer_attributes": {
            "description": "Send these attributes to Mixer in both Check and Report. This typically includes the \"destination.service\" attribute. In case of a per-route override, per-route attributes take precedence over the attributes supplied in the client configuration.",
            "properties": {
              "attributes": {
                "additionalProperties": {
                  "properties": {
                    "value": {
                      "oneOf": [
                        {
                          "description": "Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type INT64",
                          "format": "int64",
                          "type": "integer"
                        },
                        {
                          "description": "Used for values of type DOUBLE",
                          "type": "number"
                        },
                        {
                          "description": "Used for values of type BOOL",
                          "type": "boolean"
                        },
                        {
                          "description": "Used for values of type BYTES",
                          "format": "byte",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type TIMESTAMP",
                          "properties": {
                            "nanos": {
                              "description": "Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type DURATION",
                          "properties": {
                            "nanos": {
                              "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type STRING_MAP",
                          "properties": {
                            "entries": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Holds a set of name/value pairs.",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "description": "A map of attribute name to its value.",
                "type": "object"
              }
            },
            "type": "object"
          },
          "network_fail_policy": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.NetworkFailPolicy"
          },
          "quota_spec": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.QuotaSpec"
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.StringMatch": {
        "description": "Describes how to match a given string in HTTP headers. Match is case-sensitive.",
        "properties": {
          "match_type": {
            "oneOf": [
              {
                "description": "exact string match",
                "type": "string"
              },
              {
                "description": "prefix-based match",
                "type": "string"
              },
              {
                "description": "ECMAscript style regex-based match",
                "type": "string"
              }
            ]
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.TcpClientConfig": {
        "description": "Defines the client config for TCP.",
        "properties": {
          "connection_quota_spec": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.QuotaSpec"
          },
          "disable_check_calls": {
            "description": "If set to true, disables Mixer check calls.",
            "type": "boolean"
          },
          "disable_report_calls": {
            "description": "If set to true, disables Mixer check calls.",
            "type": "boolean"
          },
          "mixer_attributes": {
            "description": "Default attributes to send to Mixer in both Check and Report. This typically includes \"destination.ip\" and \"destination.uid\" attributes.",
            "properties": {
              "attributes": {
                "additionalProperties": {
                  "properties": {
                    "value": {
                      "oneOf": [
                        {
                          "description": "Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type INT64",
                          "format": "int64",
                          "type": "integer"
                        },
                        {
                          "description": "Used for values of type DOUBLE",
                          "type": "number"
                        },
                        {
                          "description": "Used for values of type BOOL",
                          "type": "boolean"
                        },
                        {
                          "description": "Used for values of type BYTES",
                          "format": "byte",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type TIMESTAMP",
                          "properties": {
                            "nanos": {
                              "description": "Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type DURATION",
                          "properties": {
                            "nanos": {
                              "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type STRING_MAP",
                          "properties": {
                            "entries": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Holds a set of name/value pairs.",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "description": "A map of attribute name to its value.",
                "type": "object"
              }
            },
            "type": "object"
          },
          "report_interval": {
            "description": "Specify report interval to send periodical reports for long TCP connections. If not specified, the interval is 10 seconds. This interval should not be less than 1 second, otherwise it will be reset to 1 second.",
            "properties": {
              "nanos": {
                "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                "format": "int32",
                "type": "integer"
              },
              "seconds": {
                "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
                "format": "int64",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "transport": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.TransportConfig"
          }
        },
        "type": "object"
      },
      "istio.mixer.v1.config.client.TransportConfig": {
        "description": "Defines the transport config on how to call Mixer.",
        "properties": {
          "attributes_for_mixer_proxy": {
            "description": "Default attributes to forward to Mixer upstream. This typically includes the \"source.ip\" and \"source.uid\" attributes. These attributes are consumed by the proxy in front of mixer.",
            "properties": {
              "attributes": {
                "additionalProperties": {
                  "properties": {
                    "value": {
                      "oneOf": [
                        {
                          "description": "Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type INT64",
                          "format": "int64",
                          "type": "integer"
                        },
                        {
                          "description": "Used for values of type DOUBLE",
                          "type": "number"
                        },
                        {
                          "description": "Used for values of type BOOL",
                          "type": "boolean"
                        },
                        {
                          "description": "Used for values of type BYTES",
                          "format": "byte",
                          "type": "string"
                        },
                        {
                          "description": "Used for values of type TIMESTAMP",
                          "properties": {
                            "nanos": {
                              "description": "Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type DURATION",
                          "properties": {
                            "nanos": {
                              "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "seconds": {
                              "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Used for values of type STRING_MAP",
                          "properties": {
                            "entries": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Holds a set of name/value pairs.",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "description": "A map of attribute name to its value.",
                "type": "object"
              }
            },
            "type": "object"
          },
          "check_cluster": {
            "description": "Name of the cluster that will forward check calls to a pool of mixer servers. Defaults to \"mixer_server\". By using different names for checkCluster and reportCluster, it is possible to have one set of Mixer servers handle check calls, while another set of Mixer servers handle report calls.",
            "type": "string"
          },
          "disable_check_cache": {
            "description": "The flag to disable check cache.",
            "type": "boolean"
          },
          "disable_quota_cache": {
            "description": "The flag to disable quota cache.",
            "type": "boolean"
          },
          "disable_report_batch": {
            "description": "The flag to disable report batch.",
            "type": "boolean"
          },
          "network_fail_policy": {
            "$ref": "#/components/schemas/istio.mixer.v1.config.client.NetworkFailPolicy"
          },
          "report_batch_max_entries": {
            "description": "When disable_report_batch is false, this value specifies the maximum number of requests that are batched in report. If left unspecified, the default value of report_batch_max_entries == 0 will use the hardcoded defaults of istio::mixerclient::ReportOptions.",
            "format": "int32",
            "type": "integer"
          },
          "report_batch_max_time": {
            "description": "When disable_report_batch is false, this value specifies the maximum elapsed time a batched report will be sent after a user request is processed. If left unspecified, the default report_batch_max_time == 0 will use the hardcoded defaults of istio::mixerclient::ReportOptions.",
            "properties": {
              "nanos": {
                "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                "format": "int32",
                "type": "integer"
              },
              "seconds": {
                "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
                "format": "int64",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "report_cluster": {
            "description": "Name of the cluster that will forward report calls to a pool of mixer servers. Defaults to \"mixer_server\". By using different names for checkCluster and reportCluster, it is possible to have one set of Mixer servers handle check calls, while another set of Mixer servers handle report calls.",
            "type": "string"
          },
          "stats_update_interval": {
            "description": "Specify refresh interval to write Mixer client statistics to Envoy share memory. If not specified, the interval is 10 seconds.",
            "properties": {
              "nanos": {
                "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                "format": "int32",
                "type": "integer"
              },
              "seconds": {
                "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
                "format": "int64",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    }
  }
}