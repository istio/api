{
  "openapi": "3.0.0",
  "components": {
    "schema": {
      "istio.mixer.v1.config.client.StringMatch": {
        "description": "Describes how to match a given string in HTTP headers. Match is\n case-sensitive.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "exact": {
                "description": "exact string match",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "prefix": {
                "description": "prefix-based match",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "regex": {
                "description": "ECMAscript style regex-based match",
                "type": "string",
                "format": "string"
              }
            }
          }
        ]
      },
      "istio.mixer.v1.config.client.HTTPAPISpec": {
        "description": "HTTPAPISpec defines the canonical configuration for generating\n API-related attributes from HTTP requests based on the method and\n uri templated path matches. It is sufficient for defining the API\n surface of a service for the purposes of API attribute\n generation. It is not intended to represent auth, quota,\n documentation, or other information commonly found in other API\n specifications, e.g. OpenAPI.\n\n Existing standards that define operations (or methods) in terms of\n HTTP methods and paths can be normalized to this format for use in\n Istio. For example, a simple petstore API described by OpenAPIv2\n [here](https://github.com/googleapis/gnostic/blob/master/examples/v2.0/yaml/petstore-simple.yaml)\n can be represented with the following HTTPAPISpec.\n\n ```yaml\n apiVersion: config.istio.io/v1alpha2\n kind: HTTPAPISpec\n metadata:\n   name: petstore\n   namespace: default\n spec:\n   attributes:\n     attributes:\n       api.service:\n         stringValue: petstore.swagger.io\n       api.version:\n         stringValue: 1.0.0\n   patterns:\n   - attributes:\n       attributes:\n         api.operation:\n           stringValue: findPets\n     httpMethod: GET\n     uriTemplate: /api/pets\n   - attributes:\n       attributes:\n         api.operation:\n           stringValue: addPet\n     httpMethod: POST\n     uriTemplate: /api/pets\n   - attributes:\n       attributes:\n         api.operation:\n           stringValue: findPetById\n     httpMethod: GET\n     uriTemplate: /api/pets/{id}\n   - attributes:\n       attributes:\n         api.operation:\n           stringValue: deletePet\n     httpMethod: DELETE\n     uriTemplate: /api/pets/{id}\n   api_keys:\n   - query: api-key\n ```",
        "type": "object",
        "properties": {
          "apiKeys": {
            "description": "List of APIKey that describes how to extract an API-KEY from an\n HTTP request. The first API-Key match found in the list is used,\n i.e. 'OR' semantics.\n\n The following default policies are used to generate the\n `request.api_key` attribute if no explicit APIKey is defined.\n\n     `query: key, `query: api_key`, and then `header: x-api-key`",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.mixer.v1.config.client.APIKey"
            }
          },
          "attributes": {
            "$ref": "#/components/schema/istio.mixer.v1.Attributes"
          },
          "patterns": {
            "description": "List of HTTP patterns to match.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.mixer.v1.config.client.HTTPAPISpecPattern"
            }
          }
        }
      },
      "istio.mixer.v1.config.client.HTTPAPISpecPattern": {
        "description": "HTTPAPISpecPattern defines a single pattern to match against\n incoming HTTP requests. The per-pattern list of attributes is\n generated if both the http_method and uri_template match. In\n addition, the top-level list of attributes in the HTTPAPISpec is also\n generated.\n\n ```yaml\n pattern:\n - attributes\n     api.operation: doFooBar\n   httpMethod: GET\n   uriTemplate: /foo/bar\n ```",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "attributes": {
                "$ref": "#/components/schema/istio.mixer.v1.Attributes"
              },
              "httpMethod": {
                "description": "HTTP request method to match against as defined by\n [rfc7231](https://tools.ietf.org/html/rfc7231#page-21). For\n example: GET, HEAD, POST, PUT, DELETE.",
                "type": "string",
                "format": "string"
              },
              "uriTemplate": {
                "description": "URI template to match against as defined by\n [rfc6570](https://tools.ietf.org/html/rfc6570). For example, the\n following are valid URI templates:\n\n     /pets\n     /pets/{id}\n     /dictionary/{term:1}/{term}\n     /search{?q*,lang}",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "attributes": {
                "$ref": "#/components/schema/istio.mixer.v1.Attributes"
              },
              "httpMethod": {
                "description": "HTTP request method to match against as defined by\n [rfc7231](https://tools.ietf.org/html/rfc7231#page-21). For\n example: GET, HEAD, POST, PUT, DELETE.",
                "type": "string",
                "format": "string"
              },
              "regex": {
                "description": "EXPERIMENTAL:\n\n ecmascript style regex-based match as defined by\n [EDCA-262](http://en.cppreference.com/w/cpp/regex/ecmascript). For\n example,\n\n     \"^/pets/(.*?)?\"",
                "type": "string",
                "format": "string"
              }
            }
          }
        ]
      },
      "istio.mixer.v1.config.client.APIKey": {
        "description": "APIKey defines the explicit configuration for generating the\n `request.api_key` attribute from HTTP requests.\n\n See [API Keys](https://swagger.io/docs/specification/authentication/api-keys)\n for a general overview of API keys as defined by OpenAPI.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "query": {
                "description": "API Key is sent as a query parameter. `query` represents the\n query string parameter name.\n\n For example, `query=api_key` should be used with the\n following request:\n\n     GET /something?api_key=abcdef12345",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "header": {
                "description": "API key is sent in a request header. `header` represents the\n header name.\n\n For example, `header=X-API-KEY` should be used with the\n following request:\n\n     GET /something HTTP/1.1\n     X-API-Key: abcdef12345",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "cookie": {
                "description": "API key is sent in a\n [cookie](https://swagger.io/docs/specification/authentication/cookie-authentication),\n\n For example, `cookie=X-API-KEY` should be used for the\n following request:\n\n     GET /something HTTP/1.1\n     Cookie: X-API-KEY=abcdef12345",
                "type": "string",
                "format": "string"
              }
            }
          }
        ]
      },
      "istio.mixer.v1.config.client.HTTPAPISpecReference": {
        "description": "HTTPAPISpecReference defines a reference to an HTTPAPISpec. This is\n typically used for establishing bindings between an HTTPAPISpec and an\n IstioService. For example, the following defines an\n HTTPAPISpecReference for service `foo` in namespace `bar`.\n\n ```yaml\n - name: foo\n   namespace: bar\n ```",
        "type": "object",
        "properties": {
          "name": {
            "description": "REQUIRED. The short name of the HTTPAPISpec. This is the resource\n name defined by the metadata name field.",
            "type": "string",
            "format": "string"
          },
          "namespace": {
            "description": "Optional namespace of the HTTPAPISpec. Defaults to the encompassing\n HTTPAPISpecBinding's metadata namespace field.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.mixer.v1.config.client.HTTPAPISpecBinding": {
        "description": "HTTPAPISpecBinding defines the binding between HTTPAPISpecs and one or more\n IstioService. For example, the following establishes a binding\n between the HTTPAPISpec `petstore` and service `foo` in namespace `bar`.\n\n ```yaml\n apiVersion: config.istio.io/v1alpha2\n kind: HTTPAPISpecBinding\n metadata:\n   name: my-binding\n   namespace: default\n spec:\n   services:\n   - name: foo\n     namespace: bar\n   api_specs:\n   - name: petstore\n     namespace: default\n ```",
        "type": "object",
        "properties": {
          "apiSpecs": {
            "description": "REQUIRED. One or more HTTPAPISpec references that should be mapped to\n the specified service(s). The aggregate collection of match\n conditions defined in the HTTPAPISpecs should not overlap.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.mixer.v1.config.client.HTTPAPISpecReference"
            }
          },
          "services": {
            "description": "REQUIRED. One or more services to map the listed HTTPAPISpec onto.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.mixer.v1.config.client.IstioService"
            }
          }
        }
      },
      "istio.mixer.v1.config.client.IstioService": {
        "description": "IstioService identifies a service and optionally service version.\n The FQDN of the service is composed from the name, namespace, and implementation-specific domain suffix\n (e.g. on Kubernetes, \"reviews\" + \"default\" + \"svc.cluster.local\" -\u003e \"reviews.default.svc.cluster.local\").",
        "type": "object",
        "required": [
          "labels"
        ],
        "properties": {
          "domain": {
            "description": "Domain suffix used to construct the service FQDN in implementations that support such specification.",
            "type": "string",
            "format": "string"
          },
          "labels": {
            "description": "Optional one or more labels that uniquely identify the service version.\n\n *Note:* When used for a VirtualService destination, labels MUST be empty.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          },
          "name": {
            "description": "The short name of the service such as \"foo\".",
            "type": "string",
            "format": "string"
          },
          "namespace": {
            "description": "Optional namespace of the service. Defaults to value of metadata namespace field.",
            "type": "string",
            "format": "string"
          },
          "service": {
            "description": "The service FQDN.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.mixer.v1.config.client.NetworkFailPolicy": {
        "description": "Specifies the behavior when the client is unable to connect to Mixer.",
        "type": "object",
        "properties": {
          "baseRetryWait": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          },
          "maxRetry": {
            "description": "Max retries on transport error.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "maxRetryWait": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          },
          "policy": {
            "$ref": "#/components/schema/istio.mixer.v1.config.client.NetworkFailPolicy.FailPolicy"
          }
        }
      },
      "istio.mixer.v1.config.client.NetworkFailPolicy.FailPolicy": {
        "description": "Describes the policy.",
        "enum": [
          "FAIL_OPEN",
          "FAIL_CLOSE"
        ],
        "default": "FAIL_OPEN"
      },
      "istio.mixer.v1.config.client.ServiceConfig": {
        "description": "Defines the per-service client configuration.",
        "type": "object",
        "properties": {
          "disableCheckCalls": {
            "description": "If true, do not call Mixer Check.",
            "type": "boolean"
          },
          "disableReportCalls": {
            "description": "If true, do not call Mixer Report.",
            "type": "boolean"
          },
          "forwardAttributes": {
            "$ref": "#/components/schema/istio.mixer.v1.Attributes"
          },
          "httpApiSpec": {
            "description": "HTTP API specifications to generate API attributes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.mixer.v1.config.client.HTTPAPISpec"
            }
          },
          "mixerAttributes": {
            "$ref": "#/components/schema/istio.mixer.v1.Attributes"
          },
          "networkFailPolicy": {
            "$ref": "#/components/schema/istio.mixer.v1.config.client.NetworkFailPolicy"
          },
          "quotaSpec": {
            "description": "Quota specifications to generate quota requirements.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.mixer.v1.config.client.QuotaSpec"
            }
          }
        }
      },
      "istio.mixer.v1.config.client.QuotaSpec": {
        "description": "Determines the quotas used for individual requests.",
        "type": "object",
        "properties": {
          "rules": {
            "description": "A list of Quota rules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.mixer.v1.config.client.QuotaRule"
            }
          }
        }
      },
      "istio.mixer.v1.config.client.TransportConfig": {
        "description": "Defines the transport config on how to call Mixer.",
        "type": "object",
        "properties": {
          "attributesForMixerProxy": {
            "$ref": "#/components/schema/istio.mixer.v1.Attributes"
          },
          "checkCluster": {
            "description": "Name of the cluster that will forward check calls to a pool of mixer\n servers. Defaults to \"mixer_server\". By using different names for\n checkCluster and reportCluster, it is possible to have one set of\n Mixer servers handle check calls, while another set of Mixer servers\n handle report calls.\n\n NOTE: Any value other than the default \"mixer_server\" will require the\n Istio Grafana dashboards to be reconfigured to use the new name.",
            "type": "string",
            "format": "string"
          },
          "disableCheckCache": {
            "description": "The flag to disable check cache.",
            "type": "boolean"
          },
          "disableQuotaCache": {
            "description": "The flag to disable quota cache.",
            "type": "boolean"
          },
          "disableReportBatch": {
            "description": "The flag to disable report batch.",
            "type": "boolean"
          },
          "networkFailPolicy": {
            "$ref": "#/components/schema/istio.mixer.v1.config.client.NetworkFailPolicy"
          },
          "reportBatchMaxEntries": {
            "description": "When disable_report_batch is false, this value specifies the maximum number\n of requests that are batched in report. If left unspecified, the default value\n of report_batch_max_entries == 0 will use the hardcoded defaults of\n istio::mixerclient::ReportOptions.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "reportBatchMaxTime": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          },
          "reportCluster": {
            "description": "Name of the cluster that will forward report calls to a pool of mixer\n servers. Defaults to \"mixer_server\". By using different names for\n checkCluster and reportCluster, it is possible to have one set of\n Mixer servers handle check calls, while another set of Mixer servers\n handle report calls.\n\n NOTE: Any value other than the default \"mixer_server\" will require the\n Istio Grafana dashboards to be reconfigured to use the new name.",
            "type": "string",
            "format": "string"
          },
          "statsUpdateInterval": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          }
        }
      },
      "istio.mixer.v1.config.client.HttpClientConfig": {
        "description": "Defines the client config for HTTP.",
        "type": "object",
        "required": [
          "serviceConfigs"
        ],
        "properties": {
          "defaultDestinationService": {
            "description": "Default destination service name if none was specified in the\n client request.",
            "type": "string",
            "format": "string"
          },
          "forwardAttributes": {
            "$ref": "#/components/schema/istio.mixer.v1.Attributes"
          },
          "mixerAttributes": {
            "$ref": "#/components/schema/istio.mixer.v1.Attributes"
          },
          "serviceConfigs": {
            "description": "Map of control configuration indexed by destination.service. This\n is used to support per-service configuration for cases where a\n mixerclient serves multiple services.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/istio.mixer.v1.config.client.ServiceConfig"
            }
          },
          "transport": {
            "$ref": "#/components/schema/istio.mixer.v1.config.client.TransportConfig"
          }
        }
      },
      "istio.mixer.v1.config.client.TcpClientConfig": {
        "description": "Defines the client config for TCP.",
        "type": "object",
        "properties": {
          "connectionQuotaSpec": {
            "$ref": "#/components/schema/istio.mixer.v1.config.client.QuotaSpec"
          },
          "disableCheckCalls": {
            "description": "If set to true, disables Mixer check calls.",
            "type": "boolean"
          },
          "disableReportCalls": {
            "description": "If set to true, disables Mixer check calls.",
            "type": "boolean"
          },
          "mixerAttributes": {
            "$ref": "#/components/schema/istio.mixer.v1.Attributes"
          },
          "reportInterval": {
            "$ref": "#/components/schema/google.protobuf.Duration"
          },
          "transport": {
            "$ref": "#/components/schema/istio.mixer.v1.config.client.TransportConfig"
          }
        }
      },
      "istio.mixer.v1.config.client.QuotaRule": {
        "description": "Specifies a rule with list of matches and list of quotas.\n If any clause matched, the list of quotas will be used.",
        "type": "object",
        "properties": {
          "match": {
            "description": "If empty, match all request.\n If any of match is true, it is matched.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.mixer.v1.config.client.AttributeMatch"
            }
          },
          "quotas": {
            "description": "The list of quotas to charge.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.mixer.v1.config.client.Quota"
            }
          }
        }
      },
      "istio.mixer.v1.config.client.AttributeMatch": {
        "description": "Specifies a match clause to match Istio attributes",
        "type": "object",
        "required": [
          "clause"
        ],
        "properties": {
          "clause": {
            "description": "Map of attribute names to StringMatch type.\n Each map element specifies one condition to match.\n\n Example:\n\n   clause:\n     source.uid:\n       exact: SOURCE_UID\n     request.http_method:\n       exact: POST",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/istio.mixer.v1.config.client.StringMatch"
            }
          }
        }
      },
      "istio.mixer.v1.config.client.Quota": {
        "description": "Specifies a quota to use with quota name and amount.",
        "type": "object",
        "properties": {
          "charge": {
            "description": "The quota amount to charge",
            "type": "integer",
            "format": "int64"
          },
          "quota": {
            "description": "The quota name to charge",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.mixer.v1.config.client.QuotaSpecBinding": {
        "description": "QuotaSpecBinding defines the binding between QuotaSpecs and one or more\n IstioService.",
        "type": "object",
        "properties": {
          "quotaSpecs": {
            "description": "REQUIRED. One or more QuotaSpec references that should be mapped to\n the specified service(s). The aggregate collection of match\n conditions defined in the QuotaSpecs should not overlap.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference"
            }
          },
          "services": {
            "description": "REQUIRED. One or more services to map the listed QuotaSpec onto.",
            "type": "array",
            "items": {
              "$ref": "#/components/schema/istio.mixer.v1.config.client.IstioService"
            }
          }
        }
      },
      "istio.mixer.v1.config.client.QuotaSpecBinding.QuotaSpecReference": {
        "description": "QuotaSpecReference uniquely identifies the QuotaSpec used in the\n Binding.",
        "type": "object",
        "properties": {
          "name": {
            "description": "REQUIRED. The short name of the QuotaSpec. This is the resource\n name defined by the metadata name field.",
            "type": "string",
            "format": "string"
          },
          "namespace": {
            "description": "Optional namespace of the QuotaSpec. Defaults to the value of the\n metadata namespace field.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "google.protobuf.Duration": {
        "description": "Used for values of type DURATION",
        "type": "object",
        "properties": {
          "nanos": {
            "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive.",
            "type": "integer",
            "format": "int32"
          },
          "seconds": {
            "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "istio.mixer.v1.Attributes": {
        "description": "Default attributes to send to Mixer in both Check and\n Report. This typically includes \"destination.ip\" and\n \"destination.uid\" attributes.",
        "type": "object",
        "required": [
          "attributes"
        ],
        "properties": {
          "attributes": {
            "description": "A map of attribute name to its value.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/istio.mixer.v1.Attributes.AttributeValue"
            }
          }
        }
      },
      "istio.mixer.v1.Attributes.AttributeValue": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "stringValue": {
                "description": "Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "int64Value": {
                "description": "Used for values of type INT64",
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "doubleValue": {
                "description": "Used for values of type DOUBLE",
                "type": "number",
                "format": "double"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "boolValue": {
                "description": "Used for values of type BOOL",
                "type": "boolean"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "bytesValue": {
                "description": "Used for values of type BYTES",
                "type": "string",
                "format": "byte"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "timestampValue": {
                "$ref": "#/components/schema/google.protobuf.Timestamp"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "durationValue": {
                "$ref": "#/components/schema/google.protobuf.Duration"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "stringMapValue": {
                "$ref": "#/components/schema/istio.mixer.v1.Attributes.StringMap"
              }
            }
          }
        ]
      },
      "google.protobuf.Timestamp": {
        "description": "Used for values of type TIMESTAMP",
        "type": "object",
        "properties": {
          "nanos": {
            "description": "Non-negative fractions of a second at nanosecond resolution. Negative\n second values with fractions must still have non-negative nanos values\n that count forward in time. Must be from 0 to 999,999,999\n inclusive.",
            "type": "integer",
            "format": "int32"
          },
          "seconds": {
            "description": "Represents seconds of UTC time since Unix epoch\n 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n 9999-12-31T23:59:59Z inclusive.",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "istio.mixer.v1.Attributes.StringMap": {
        "description": "Used for values of type STRING_MAP",
        "type": "object",
        "required": [
          "entries"
        ],
        "properties": {
          "entries": {
            "description": "Holds a set of name/value pairs.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          }
        }
      }
    }
  }
}