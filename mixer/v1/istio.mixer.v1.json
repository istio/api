{
  "openapi": "3.0.0",
  "components": {
    "schema": {
      "istio.mixer.v1.Attributes": {
        "description": "Attributes represents a set of typed name/value pairs. Many of Mixer's\n API either consume and/or return attributes.\n\n Istio uses attributes to control the runtime behavior of services running in the service mesh.\n Attributes are named and typed pieces of metadata describing ingress and egress traffic and the\n environment this traffic occurs in. An Istio attribute carries a specific piece\n of information such as the error code of an API request, the latency of an API request, or the\n original IP address of a TCP connection. For example:\n\n ```yaml\n request.path: xyz/abc\n request.size: 234\n request.time: 12:34:56.789 04/17/2017\n source.ip: 192.168.0.1\n target.service: example\n ```\n\n A given Istio deployment has a fixed vocabulary of attributes that it understands.\n The specific vocabulary is determined by the set of attribute producers being used\n in the deployment. The primary attribute producer in Istio is Envoy, although\n specialized Mixer adapters and services can also generate attributes.\n\n The common baseline set of attributes available in most Istio deployments is defined\n [here](https://istio.io/docs/reference/config/policy-and-telemetry/attribute-vocabulary/).\n\n Attributes are strongly typed. The supported attribute types are defined by\n [ValueType](https://github.com/istio/api/blob/master/policy/v1beta1/value_type.proto).\n Each type of value is encoded into one of the so-called transport types present\n in this message.\n\n Defines a map of attributes in uncompressed format.\n Following places may use this message:\n 1) Configure Istio/Proxy with static per-proxy attributes, such as source.uid.\n 2) Service IDL definition to extract api attributes for active requests.\n 3) Forward attributes from client proxy to server proxy for HTTP requests.",
        "type": "object",
        "required": [
          "attributes"
        ],
        "properties": {
          "attributes": {
            "description": "A map of attribute name to its value.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/istio.mixer.v1.Attributes.AttributeValue"
            }
          }
        }
      },
      "istio.mixer.v1.Attributes.AttributeValue": {
        "description": "Specifies one attribute value with different type.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "stringValue": {
                "description": "Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI",
                "type": "string",
                "format": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "int64Value": {
                "description": "Used for values of type INT64",
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "doubleValue": {
                "description": "Used for values of type DOUBLE",
                "type": "number",
                "format": "double"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "boolValue": {
                "description": "Used for values of type BOOL",
                "type": "boolean"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "bytesValue": {
                "description": "Used for values of type BYTES",
                "type": "string",
                "format": "byte"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "timestampValue": {
                "$ref": "#/components/schema/google.protobuf.Timestamp"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "durationValue": {
                "$ref": "#/components/schema/google.protobuf.Duration"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "stringMapValue": {
                "$ref": "#/components/schema/istio.mixer.v1.Attributes.StringMap"
              }
            }
          }
        ]
      },
      "istio.mixer.v1.Attributes.StringMap": {
        "description": "Defines a string map.",
        "type": "object",
        "required": [
          "entries"
        ],
        "properties": {
          "entries": {
            "description": "Holds a set of name/value pairs.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.mixer.v1.CompressedAttributes": {
        "description": "Defines a list of attributes in compressed format optimized for transport.\n Within this message, strings are referenced using integer indices into\n one of two string dictionaries. Positive integers index into the global\n deployment-wide dictionary, whereas negative integers index into the message-level\n dictionary instead. The message-level dictionary is carried by the\n `words` field of this message, the deployment-wide dictionary is determined via\n configuration.",
        "type": "object",
        "required": [
          "strings",
          "bytes",
          "int64s",
          "doubles",
          "bools",
          "timestamps",
          "durations",
          "stringMaps"
        ],
        "properties": {
          "bools": {
            "description": "Holds attributes of type BOOL",
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "bytes": {
            "description": "Holds attributes of type BYTES",
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "doubles": {
            "description": "Holds attributes of type DOUBLE",
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "durations": {
            "description": "Holds attributes of type DURATION",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/google.protobuf.Duration"
            }
          },
          "int64s": {
            "description": "Holds attributes of type INT64",
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          },
          "stringMaps": {
            "description": "Holds attributes of type STRING_MAP",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/istio.mixer.v1.StringMap"
            }
          },
          "strings": {
            "description": "Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI",
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "timestamps": {
            "description": "Holds attributes of type TIMESTAMP",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/google.protobuf.Timestamp"
            }
          },
          "words": {
            "description": "The message-level dictionary.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.mixer.v1.StringMap": {
        "description": "A map of string to string. The keys and values in this map are dictionary\n indices (see the [Attributes][istio.mixer.v1.CompressedAttributes] message for an explanation)",
        "type": "object",
        "required": [
          "entries"
        ],
        "properties": {
          "entries": {
            "description": "Holds a set of name/value pairs.",
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "istio.mixer.v1.CheckRequest": {
        "description": "Used to get a thumbs-up/thumbs-down before performing an action.",
        "type": "object",
        "required": [
          "quotas"
        ],
        "properties": {
          "deduplicationId": {
            "description": "Used for deduplicating `Check` calls in the case of failed RPCs and retries. This should be a UUID\n per call, where the same UUID is used for retries of the same call.",
            "type": "string",
            "format": "string"
          },
          "globalWordCount": {
            "description": "The number of words in the global dictionary, used with to populate the attributes.\n This value is used as a quick way to determine whether the client is using a dictionary that\n the server understands.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "quotas": {
            "description": "The individual quotas to allocate",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/istio.mixer.v1.CheckRequest.QuotaParams"
            }
          }
        }
      },
      "istio.mixer.v1.CheckRequest.QuotaParams": {
        "description": "parameters for a quota allocation",
        "type": "object",
        "properties": {
          "amount": {
            "description": "Amount of quota to allocate",
            "type": "integer",
            "format": "int64"
          },
          "bestEffort": {
            "description": "When true, supports returning less quota than what was requested.",
            "type": "boolean"
          }
        }
      },
      "istio.mixer.v1.CheckResponse": {
        "description": "The response generated by the Check method.",
        "type": "object",
        "required": [
          "quotas"
        ],
        "properties": {
          "quotas": {
            "description": "The resulting quota, one entry per requested quota.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schema/istio.mixer.v1.CheckResponse.QuotaResult"
            }
          }
        }
      },
      "istio.mixer.v1.CheckResponse.QuotaResult": {
        "description": "Expresses the result of a quota allocation.",
        "type": "object",
        "properties": {
          "grantedAmount": {
            "description": "The amount of granted quota. When `QuotaParams.best_effort` is true, this will be \u003e= 0.\n If `QuotaParams.best_effort` is false, this will be either 0 or \u003e= `QuotaParams.amount`.",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "istio.mixer.v1.CheckResponse.PreconditionResult": {
        "description": "Expresses the result of a precondition check.",
        "type": "object",
        "properties": {
          "referencedAttributes": {
            "$ref": "#/components/schema/istio.mixer.v1.ReferencedAttributes"
          },
          "routeDirective": {
            "$ref": "#/components/schema/istio.mixer.v1.RouteDirective"
          },
          "validUseCount": {
            "description": "The number of uses for which this result can be considered valid.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "istio.mixer.v1.ReferencedAttributes": {
        "description": "Describes the attributes that were used to determine the response.\n This can be used to construct a response cache.",
        "type": "object",
        "properties": {
          "words": {
            "description": "The message-level dictionary. Refer to [CompressedAttributes][istio.mixer.v1.CompressedAttributes] for information\n on using dictionaries.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.mixer.v1.RouteDirective": {
        "description": "Expresses the routing manipulation actions to be performed on behalf of\n Mixer in response to a precondition check.",
        "type": "object",
        "properties": {
          "directResponseBody": {
            "description": "Supplies the response body for the direct response.\n If this setting is omitted, no body is included in the generated response.",
            "type": "string",
            "format": "string"
          },
          "directResponseCode": {
            "description": "If set, enables a direct response without proxying the request to the routing\n destination. Required to be a value in the 2xx or 3xx range.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          }
        }
      },
      "istio.mixer.v1.ReferencedAttributes.Condition": {
        "description": "How an attribute's value was matched",
        "enum": [
          "CONDITION_UNSPECIFIED",
          "ABSENCE",
          "EXACT",
          "REGEX"
        ],
        "default": "CONDITION_UNSPECIFIED"
      },
      "istio.mixer.v1.ReferencedAttributes.AttributeMatch": {
        "description": "Describes a single attribute match.",
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schema/istio.mixer.v1.ReferencedAttributes.Condition"
          },
          "mapKey": {
            "description": "A key in a STRING_MAP. When multiple keys from a STRING_MAP\n attribute were referenced, there will be multiple AttributeMatch\n messages with different map_key values. Values for map_key SHOULD\n be ignored for attributes that are not STRING_MAP.\n\n Indices for the keys are used (taken either from the\n message dictionary from the `words` field or the global dictionary).\n\n If no map_key value is provided for a STRING_MAP attribute, the\n entire STRING_MAP will be used.",
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "description": "The name of the attribute. This is a dictionary index encoded in a manner identical\n to all strings in the [CompressedAttributes][istio.mixer.v1.CompressedAttributes] message.",
            "type": "integer",
            "format": "int32"
          },
          "regex": {
            "description": "If a REGEX condition is provided for a STRING_MAP attribute,\n clients should use the regex value to match against map keys.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.mixer.v1.HeaderOperation": {
        "description": "Operation on HTTP headers to replace, append, or remove a header. Header\n names are normalized to lower-case with dashes, e.g.  \"x-request-id\".\n Pseudo-headers \":path\", \":authority\", and \":method\" are supported to modify\n the request headers.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Header name.",
            "type": "string",
            "format": "string"
          },
          "operation": {
            "$ref": "#/components/schema/istio.mixer.v1.HeaderOperation.Operation"
          },
          "value": {
            "description": "Header value.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.mixer.v1.HeaderOperation.Operation": {
        "description": "Operation type.",
        "enum": [
          "REPLACE",
          "REMOVE",
          "APPEND"
        ],
        "default": "REPLACE"
      },
      "istio.mixer.v1.ReportRequest": {
        "description": "Used to report telemetry after performing one or more actions.",
        "type": "object",
        "properties": {
          "defaultWords": {
            "description": "The default message-level dictionary for all the attributes.\n Individual attribute messages can have their own dictionaries, but if they don't\n then this set of words, if it is provided, is used instead.\n\n This makes it possible to share the same dictionary for all attributes in this\n request, which can substantially reduce the overall request size.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "string"
            }
          },
          "globalWordCount": {
            "description": "The number of words in the global dictionary.\n To detect global dictionary out of sync between client and server.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          },
          "repeatedAttributesSemantics": {
            "$ref": "#/components/schema/istio.mixer.v1.ReportRequest.RepeatedAttributesSemantics"
          }
        }
      },
      "istio.mixer.v1.ReportRequest.RepeatedAttributesSemantics": {
        "description": "Used to signal how the sets of compressed attributes should be reconstitued server-side.",
        "enum": [
          "DELTA_ENCODING",
          "INDEPENDENT_ENCODING"
        ],
        "default": "DELTA_ENCODING"
      },
      "istio.mixer.v1.ReportResponse": {
        "description": "Used to carry responses to telemetry reports",
        "type": "object"
      },
      "google.protobuf.Duration": {
        "type": "object",
        "properties": {
          "nanos": {
            "description": "Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive.",
            "type": "integer",
            "format": "int32"
          },
          "seconds": {
            "description": "Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "google.protobuf.Timestamp": {
        "type": "object",
        "properties": {
          "nanos": {
            "description": "Non-negative fractions of a second at nanosecond resolution. Negative\n second values with fractions must still have non-negative nanos values\n that count forward in time. Must be from 0 to 999,999,999\n inclusive.",
            "type": "integer",
            "format": "int32"
          },
          "seconds": {
            "description": "Represents seconds of UTC time since Unix epoch\n 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n 9999-12-31T23:59:59Z inclusive.",
            "type": "integer",
            "format": "int64"
          }
        }
      }
    }
  }
}