// Copyright 2017 Istio Authors
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

import "proxy/v1/config/route_rule.proto";

package istio.proxy.v1.config;

// Specifies a match clause to match attributes.
// The final result is "AND" of all condition results.
message AttributeMatch {
  // Map of attribute names to AttributeValueMatch type.
  // Each map element specifies one condition to match.
  //
  // Example:
  //
  //   clause:
  //     source.uid:
  //        string_exact: SOURCE_UID
  //     reqeust.bytes:
  //        int64_ge: 1024000
  //     request.headers:
  //        string_map_prefix:
  //           sub_key: path
  //           value: /books
  map<string, AttributeValueMatch> clause = 1;
}

// Describes how to match an attribute value.
message AttributeValueMatch {
  oneof match_type {
    // === string type
    // exact string match
    string string_exact = 1;
    // prefix-based match
    string string_prefix = 2;
    // ECMAscript style regex-based match
    string string_regex = 3;

    // === bytes type
    // exact bytes match
    bytes bytes_exact = 4;
    // prefix-based match
    bytes bytes_prefix = 5;

    // === bytes type
    // bool eq
    bool bool_eq = 6;

    // === int64
    // int64 less than
    int64 int64_lt = 7;
    // int64 less and equal
    int64 int64_le = 8;
    // int64 equal
    int64 int64_eq = 9;
    // int64 greater than
    int64 int64_gt = 10;
    // int64 greater and equal
    int64 int64_ge = 11;

    // === double
    // double less than
    double double_lt = 12;
    // double less and equal
    double double_le = 13;
    // double equal
    double double_eq = 14;
    // double greater than
    double double_gt = 15;
    // double greater and equal
    double double_ge = 16;

    // === google.protobuf.Timestamp
    // time less than
    google.protobuf.Timestamp time_lt = 17;
    // time less and equal
    google.protobuf.Timestamp time_le = 18;
    // time equal
    google.protobuf.Timestamp time_eq = 19;
    // time greater than
    google.protobuf.Timestamp time_gt = 20;
    // time greater and equal
    google.protobuf.Timestamp time_ge = 21;

    // === google.protobuf.Duration
    // duration less than
    google.protobuf.Duration duration_lt = 22;
    // duration less and equal
    google.protobuf.Duration duration_le = 23;
    // duration equal
    google.protobuf.Duration duration_eq = 24;
    // duration greater than
    google.protobuf.Duration duration_gt = 25;
    // duration greater and equal
    google.protobuf.Duration duration_ge = 26;

    // exact string match
    StringMapMatch string_map_exact = 27;
    // prefix-based match
    StringMapMatch string_map_prefix = 28;
    // ECMAscript style regex-based match
    StringMapMatch string_map_regex = 29;
  }

  message StringMapMatch {
    // The key in the string map.
    string sub_key = 1;
    // The string value.
    string value = 2;
  }
}
